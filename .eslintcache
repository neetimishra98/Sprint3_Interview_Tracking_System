[{"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\index.js":"1","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reportWebVitals.js":"2","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\App.js":"3","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\techreducer.js":"4","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminPanelMemberReducer.js":"5","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminCandidateReducer.js":"6","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminInterviewReducer.js":"7","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\hrReducer.js":"8","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminEmployeeReducer.js":"9","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\homehr.js":"10","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\home.js":"11","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\hometech.js":"12","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\about.js":"13","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\homeadmin.js":"14","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\hr.js":"15","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\tech.js":"16","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\admin.js":"17","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js":"18","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForAdmin.js":"19","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForTech.js":"20","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js":"21","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForAdmin.js":"22","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\EmployeeForAdmin.js":"23","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js":"24","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js":"25","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\addpanelmember.js":"26","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\deletepanelmember.js":"27","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\showpanelmember.js":"28","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js":"29","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js":"30","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js":"31","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js":"32","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js":"33","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\viewCandidate.js":"34","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\addCandidate.js":"35","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js":"36","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\services\\searchemployee.js":"37","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js":"38","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js":"39","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\models\\InterviewScheduler.js":"40","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelinterview_action.js":"41","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_panel.js":"42","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_candidates.js":"43","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\addpanelmember_action.js":"44","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\deletepanelmember_action.js":"45","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\showpanelmembers_action.js":"46","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\employee\\searchemployee_action.js":"47","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_techinterview.js":"48","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\showlistforhr_action.js":"49","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givehrrating_action.js":"50","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js":"51","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForHR.js":"52","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updateinterviewschedule_action.js":"53","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForHR.js":"54","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_hrinterview.js":"55","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\models\\hrInterviewScheduler.js":"56","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\models\\Candidate.js":"57","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updatehrinterviewschedule_action.js":"58","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js":"59","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js":"60","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getLocationsAction.js":"61","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\addCandidateAction.js":"62","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByIdAction.js":"63","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js":"64","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js":"65","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js":"66","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js":"67","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js":"68","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js":"69","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByNameAction.js":"70","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByAllAction.js":"71","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelhrinterview_action.js":"72","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js":"73","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\givetechrating.js":"74","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\hrservices\\viewhrcandidate.js":"75","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givetechratingaction.js":"76","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js":"77","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_hr.js":"78","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\showinterviewmembers_action.js":"79","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForTech.js":"80","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_tech_action.js":"81","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\techservices\\viewtechcandidate.js":"82","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_hr.js":"83","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewinterviewmemberhr.js":"84","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\techservices\\surrendertechpanel.js":"85","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_tech_action.js":"86","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\hrservices\\surrenderashr.js":"87","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctPrimarySkillAction.js":"88","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctNameAction.js":"89","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctLocationAction.js":"90","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctDesignationAction.js":"91","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctQualificationAction.js":"92"},{"size":2009,"mtime":1610710728035,"results":"93","hashOfConfig":"94"},{"size":375,"mtime":1610710728043,"results":"95","hashOfConfig":"94"},{"size":2259,"mtime":1610769466484,"results":"96","hashOfConfig":"94"},{"size":2008,"mtime":1610771821429,"results":"97","hashOfConfig":"94"},{"size":1013,"mtime":1610710728042,"results":"98","hashOfConfig":"94"},{"size":1675,"mtime":1610768906327,"results":"99","hashOfConfig":"94"},{"size":1221,"mtime":1610710728041,"results":"100","hashOfConfig":"94"},{"size":1706,"mtime":1610751191722,"results":"101","hashOfConfig":"94"},{"size":446,"mtime":1610710728041,"results":"102","hashOfConfig":"94"},{"size":563,"mtime":1610710728023,"results":"103","hashOfConfig":"94"},{"size":1433,"mtime":1610750184226,"results":"104","hashOfConfig":"94"},{"size":629,"mtime":1610710728023,"results":"105","hashOfConfig":"94"},{"size":7685,"mtime":1610710728018,"results":"106","hashOfConfig":"94"},{"size":500,"mtime":1610737658958,"results":"107","hashOfConfig":"94"},{"size":1222,"mtime":1610745910558,"results":"108","hashOfConfig":"94"},{"size":1296,"mtime":1610771596573,"results":"109","hashOfConfig":"94"},{"size":1556,"mtime":1610735904679,"results":"110","hashOfConfig":"94"},{"size":2272,"mtime":1610767979114,"results":"111","hashOfConfig":"94"},{"size":3105,"mtime":1610710728031,"results":"112","hashOfConfig":"94"},{"size":1260,"mtime":1610768090030,"results":"113","hashOfConfig":"94"},{"size":5487,"mtime":1610710728024,"results":"114","hashOfConfig":"94"},{"size":2118,"mtime":1610767906637,"results":"115","hashOfConfig":"94"},{"size":1344,"mtime":1610710728022,"results":"116","hashOfConfig":"94"},{"size":9666,"mtime":1610710728026,"results":"117","hashOfConfig":"94"},{"size":3211,"mtime":1610710728025,"results":"118","hashOfConfig":"94"},{"size":7618,"mtime":1610710728032,"results":"119","hashOfConfig":"94"},{"size":4095,"mtime":1610710728033,"results":"120","hashOfConfig":"94"},{"size":2695,"mtime":1610710728033,"results":"121","hashOfConfig":"94"},{"size":4212,"mtime":1610751191706,"results":"122","hashOfConfig":"94"},{"size":4270,"mtime":1610710728029,"results":"123","hashOfConfig":"94"},{"size":3481,"mtime":1610710728026,"results":"124","hashOfConfig":"94"},{"size":3239,"mtime":1610710728026,"results":"125","hashOfConfig":"94"},{"size":8419,"mtime":1610710728027,"results":"126","hashOfConfig":"94"},{"size":9165,"mtime":1610769148273,"results":"127","hashOfConfig":"94"},{"size":12470,"mtime":1610769098524,"results":"128","hashOfConfig":"94"},{"size":3511,"mtime":1610710728027,"results":"129","hashOfConfig":"94"},{"size":3393,"mtime":1610710728022,"results":"130","hashOfConfig":"94"},{"size":1621,"mtime":1610710728027,"results":"131","hashOfConfig":"94"},{"size":2276,"mtime":1610710728030,"results":"132","hashOfConfig":"94"},{"size":454,"mtime":1610710728040,"results":"133","hashOfConfig":"94"},{"size":777,"mtime":1610712036196,"results":"134","hashOfConfig":"94"},{"size":368,"mtime":1610712029520,"results":"135","hashOfConfig":"94"},{"size":385,"mtime":1610712032844,"results":"136","hashOfConfig":"94"},{"size":955,"mtime":1610712013051,"results":"137","hashOfConfig":"94"},{"size":803,"mtime":1610712010078,"results":"138","hashOfConfig":"94"},{"size":647,"mtime":1610712006447,"results":"139","hashOfConfig":"94"},{"size":797,"mtime":1610710994879,"results":"140","hashOfConfig":"94"},{"size":2134,"mtime":1610712049862,"results":"141","hashOfConfig":"94"},{"size":759,"mtime":1610710728015,"results":"142","hashOfConfig":"94"},{"size":774,"mtime":1610710728015,"results":"143","hashOfConfig":"94"},{"size":1740,"mtime":1610749259477,"results":"144","hashOfConfig":"94"},{"size":1226,"mtime":1610741242228,"results":"145","hashOfConfig":"94"},{"size":787,"mtime":1610712017806,"results":"146","hashOfConfig":"94"},{"size":1360,"mtime":1610742501030,"results":"147","hashOfConfig":"94"},{"size":1948,"mtime":1610712045981,"results":"148","hashOfConfig":"94"},{"size":448,"mtime":1610710728041,"results":"149","hashOfConfig":"94"},{"size":500,"mtime":1610710728040,"results":"150","hashOfConfig":"94"},{"size":799,"mtime":1610712021018,"results":"151","hashOfConfig":"94"},{"size":340,"mtime":1610710728010,"results":"152","hashOfConfig":"94"},{"size":339,"mtime":1610710728009,"results":"153","hashOfConfig":"94"},{"size":329,"mtime":1610710728009,"results":"154","hashOfConfig":"94"},{"size":1089,"mtime":1610710728008,"results":"155","hashOfConfig":"94"},{"size":393,"mtime":1610710728010,"results":"156","hashOfConfig":"94"},{"size":360,"mtime":1610710728010,"results":"157","hashOfConfig":"94"},{"size":336,"mtime":1610710728008,"results":"158","hashOfConfig":"94"},{"size":369,"mtime":1610710728011,"results":"159","hashOfConfig":"94"},{"size":348,"mtime":1610710728011,"results":"160","hashOfConfig":"94"},{"size":334,"mtime":1610710728009,"results":"161","hashOfConfig":"94"},{"size":370,"mtime":1610710728011,"results":"162","hashOfConfig":"94"},{"size":351,"mtime":1610710728011,"results":"163","hashOfConfig":"94"},{"size":317,"mtime":1610710728010,"results":"164","hashOfConfig":"94"},{"size":789,"mtime":1610712040828,"results":"165","hashOfConfig":"94"},{"size":2830,"mtime":1610744166797,"results":"166","hashOfConfig":"94"},{"size":4172,"mtime":1610710728029,"results":"167","hashOfConfig":"94"},{"size":4339,"mtime":1610751191695,"results":"168","hashOfConfig":"94"},{"size":749,"mtime":1610712024927,"results":"169","hashOfConfig":"94"},{"size":724,"mtime":1610743562949,"results":"170","hashOfConfig":"94"},{"size":846,"mtime":1610712053178,"results":"171","hashOfConfig":"94"},{"size":695,"mtime":1610750481620,"results":"172","hashOfConfig":"94"},{"size":1344,"mtime":1610749325007,"results":"173","hashOfConfig":"94"},{"size":842,"mtime":1610771528677,"results":"174","hashOfConfig":"94"},{"size":3993,"mtime":1610751191696,"results":"175","hashOfConfig":"94"},{"size":872,"mtime":1610772552906,"results":"176","hashOfConfig":"94"},{"size":2802,"mtime":1610751191706,"results":"177","hashOfConfig":"94"},{"size":3685,"mtime":1610768213845,"results":"178","hashOfConfig":"94"},{"size":763,"mtime":1610751191691,"results":"179","hashOfConfig":"94"},{"size":3747,"mtime":1610751191708,"results":"180","hashOfConfig":"94"},{"size":360,"mtime":1610743860195,"results":"181","hashOfConfig":"94"},{"size":336,"mtime":1610723884709,"results":"182","hashOfConfig":"94"},{"size":348,"mtime":1610743559616,"results":"183","hashOfConfig":"94"},{"size":357,"mtime":1610743747239,"results":"184","hashOfConfig":"94"},{"size":364,"mtime":1610744120191,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},"ufof0r",{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"189"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"189"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"189"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"189"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"189"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"189"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"189"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"189"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"189"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"189"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"189"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"189"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"189"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"189"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"189"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"189"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"189"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"189"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"189"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"189"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"189"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"189"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"262"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"189"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"189"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"189"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"189"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"189"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"189"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"189"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"189"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"189"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"189"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"189"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"189"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"189"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\index.js",["412","413","414"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport {combineReducers,  createStore, applyMiddleware, compose } from 'redux';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { MDBTimePicker, MDBCol } from \"mdbreact\";\r\nimport InterviewReducer from './reducers/adminInterviewReducer';\r\nimport PanelMemberReducer from './reducers/adminPanelMemberReducer';\r\nimport CandidateReducer from './reducers/adminCandidateReducer';\r\n\r\n\r\nimport HRReducer from './reducers/hrReducer';\r\nimport TechReducer from './reducers/techreducer';\r\nimport EmployeeReducer from './reducers/adminEmployeeReducer';\r\n\r\nlet allReducers = combineReducers({'CandidateReducer': CandidateReducer, 'InterviewReducer' : InterviewReducer,'PanelMemberReducer' : PanelMemberReducer, 'EmployeeReducer' : EmployeeReducer, 'TechReducer' : TechReducer, 'HRReducer' : HRReducer});\r\nlet store = createStore(allReducers,applyMiddleware(ReduxThunk));\r\nstore.subscribe(()=>console.log('Store state: ' ,store.getState()));\r\n\r\n\r\n\r\n/*let store = createStore(InterviewReducer, PanelMemberReducer,CandidateReducer\r\n  compose(applyMiddleware(ReduxThunk)));\r\n  /*,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));*/\r\n\r\nstore.subscribe(()=>console.log('Current State: ', store.getState()));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["415","416"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reportWebVitals.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\App.js",["417","418"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\techreducer.js",["419"],"const TechReducer = (state= {viewmemberfortech: [],ratinglistcandidate: [],panelmembers: [], candidates: [],viewalltech:[]}, action) => {\r\n    switch(action.type){\r\n\r\n        //case to view all members\r\n        case 'VIEW_INTERVIEW_MEMBER_FOR_TECH': \r\n        state.viewmemberfortech=action.payload;\r\n        console.log('VIEW_INTERVIEW_MEMBER_FOR_TECH', state.viewmemberfortech);\r\n        return state;\r\n        //return action.payload;\r\n\r\n        //case to give techrating\r\n        case 'GIVE_TECH_RATING' : \r\n        state.ratinglistcandidate=action.payload;\r\n        console.log('GIVE_TECH_RATING', state.ratinglistcandidate);\r\n        return state;\r\n        //return action.payload;\r\n    \r\n        //CASE TO update the Interview\r\n        //case 'UPDATE_INTERVIEW': return action.payload;\r\n\r\n         //CASE TO VIEW A CANDIDATE FOR TECH\r\n        case 'VIEW_A_CANDIDATE_FOR_TECH': \r\n        state.candidates = action.payload;\r\n        console.log('VIEW_A_CANDIDATE_FOR_TECH', state.candidates);\r\n        return state;\r\n        //return action.payload;\r\n\r\n         //CASE TO SURRENDER AS TECH\r\n         case 'SURRENDER_AS_A_TECH': \r\n         state.panelmembers = action.payload;\r\n         console.log('SURRENDER_AS_A_TECH', state.panelmembers);\r\n         return state;\r\n         //return action.payload;\r\n\r\n        /* case '':\r\n             state.viewalltech=action.payload;\r\n             console.log('',state.viewalltech);\r\n             return state;*/\r\n        //CASE TO VIEW A CANDIDATE FOR HR\r\n        case 'VIEW_A_CANDIDATE_FOR_TECH': \r\n        state.candidates = action.payload;\r\n        console.log('VIEW_A_CANDIDATE_FOR_TECH', state.candidates);\r\n        return state;\r\n        //return action.payload;\r\n       \r\n\r\n        case 'VIEW_INTERVIEW_LIST_FOR_TECH':\r\n            state.viewalltech=action.payload;\r\n            console.log('viewalltech',state.viewalltech);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n\r\n    \r\n      \r\n    }\r\n\r\n}\r\n\r\nexport default TechReducer;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminPanelMemberReducer.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminCandidateReducer.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminInterviewReducer.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\hrReducer.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminEmployeeReducer.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\homehr.js",["420","421","422","423","424","425","426"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport HRComponent from './hr';\r\n\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\n\r\nconst HomeHRComponent = () => {\r\n    return (\r\n        <div>\r\n            {/* Some Logic To Check If User Logged In Is Admin Or A Panel Member.... */}\r\n            <HRComponent></HRComponent>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeHRComponent;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\home.js",["427","428","429","430","431","432","433","434","435","436","437","438","439"],"import { Navbar,Carousel, Jumbotron, Button, Nav, Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst HomeComponent = () => {\r\n  return (\r\n    <div className='container-fluid' \r\n     style={{ 'height': \"700px\" }}\r\n            className=\"d-block w-100\"\r\n            src={'assets/img/int1.jpg'} >\r\n              <Navbar bg=\"dark\" variant=\"dark\">\r\n\r\n      <nav id=\"navbar-example2\" class=\"navbar navbar-dark bg-dark\">\r\n      <Nav.Item>\r\n  <ul class=\"nav nav-pills\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"#fat\">TECHNICAL PANEL SERVICES</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"#fat\">TECHNICAL PANEL SERVICES</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" href=\"#mdo\">HUMAN RESOURCE SERVICES</a>\r\n    </li>\r\n  </ul>\r\n  </Nav.Item>\r\n\r\n  <Nav.Item className=\"ml-auto\">\r\n<form class=\"form-inline ml-auto \">\r\n    <input class=\"form-control mr-sm-1\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form>\r\n</Nav.Item>\r\n</nav>\r\n</Navbar>\r\n<div data-spy=\"scroll\" data-target=\"#navbar-example2\" data-offset=\"0\">\r\n  <h4 id=\"fat\"></h4>\r\n  <p><h4><b></b></h4></p>\r\n  <h4 id=\"mdo\"></h4>\r\n  <p></p>\r\n  <h4 id=\"one\"></h4>\r\n  <p></p>\r\n  <h4 id=\"two\"></h4>\r\n  <p></p>\r\n  <h4 id=\"three\"></h4>\r\n  <p></p>\r\n  </div>\r\n  </div>\r\n  );\r\n}\r\nexport default HomeComponent;\r\n\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\hometech.js",["440","441","442","443","444","445","446","447","448","449","450"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport TechComponent from './tech';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport {Tab,Tabs,Jumbotron,Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst HomeTechComponent = () => {\r\n    return (\r\n        <div>\r\n            \r\n                        \r\n           \r\n                    <TechComponent></TechComponent>\r\n            \r\n                    \r\n                \r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeTechComponent;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\about.js",["451","452","453"],"//About Us Component : CHECK WARNING.info FOR NOTES.....\r\n  \r\nimport { getAllByAltText } from '@testing-library/react';\r\nimport { Jumbotron, Button, Nav, Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst AboutUsComponent = () => {\r\n    return (\r\n        <div>\r\n            <Jumbotron style={{textAlign:\"left\", backdropFilter: \"blur(10px)\", marginLeft: 10, marginRight: 10}}>\r\n                <h1>Interview Tracking App</h1>\r\n                <p>\r\n                    This is a service for tracking interview schedules in an organization, a simple project done by a team from Capgemini as a part of\r\n                    their training. ITS provides services that connect to RESTful APIs which handle with data from a postgre database with mock data. \r\n                    There are services for Admin and Panel Members who need to login to access the same. Employees, Panel Members and Candidate details can be operated on with these services.\r\n                </p>\r\n                <p>\r\n                    <Button variant=\"dark\" href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">Check code on Github</Button>\r\n                </p>\r\n            </Jumbotron>\r\n            <br></br>\r\n            <h1>Our Team</h1>\r\n            <br></br>\r\n            {/* MEMBERS */}\r\n            <Container>\r\n                <Row md={3}>\r\n                    {/* MEMBER IS FROM COL TO COL TAG.... */}\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Rutuja Patil</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Neeti Mishra</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Meetali Patidar</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Shrishti Singh</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Sneha Chitale</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Prasanna Mandapalli</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Priyanka Yadav</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Suraj Vijaykumar Mandal</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Yash Sandeep Kadam</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"https://www.linkedin.com/in/yash-kadam/\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <br></br>\r\n\r\n            <div style={{background: \"#151515\", color: \"#CECECE\", textAlign:\"left\", margin: 0}}>Content owned by the team of above mentioned individuals. Code available on <a href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">github</a>.</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AboutUsComponent;\r\n\r\n\r\n\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\homeadmin.js",["454","455","456","457","458","459","460"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport AdminComponent from './admin';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\n\r\nconst HomeAdminComponent = () => {\r\n    return (\r\n        <div>\r\n        \r\n            <AdminComponent></AdminComponent>\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeAdminComponent;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\hr.js",["461","462"],"import PanelMemberForHR from './panelmember/PanelMemberForHR'\r\nimport SearchCandidate from './candidate/CandidateForHR';\r\nimport InterviewSchedulerForHr from './interviewscheduler/InterviewSchedulerForHr';\r\n\r\n\r\n\r\nimport { Jumbotron, Button, Tab, Tabs } from 'react-bootstrap'\r\n\r\nconst HRComponent = () => {\r\n    return (\r\n        <div style={{ backgroundColor: \"navy\"}}>\r\n            <br></br>\r\n            <h1 style={{color: \"white\"}}><b><i>HR Panel Member Services</i></b></h1>\r\n            <br></br>\r\n\r\n            <Tabs defaultActiveKey=\"Home\"  id=\"uncontrolled-tab-example\" variant=\"pills\">\r\n\r\n                <Tab eventKey=\"InterviewSchedulerView\"title=\"View Interview Members\" >\r\n                    <InterviewSchedulerForHr></InterviewSchedulerForHr>\r\n                </Tab>\r\n                <Tab eventKey=\"Candidate\" title=\"Candidate Details\">\r\n                    <SearchCandidate></SearchCandidate></Tab>\r\n                <Tab eventKey=\"PanelMember\" title=\"Surrender As Panel\">\r\n                    <PanelMemberForHR></PanelMemberForHR>\r\n                </Tab>\r\n                \r\n            \r\n                \r\n                \r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HRComponent;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\tech.js",["463"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\admin.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForAdmin.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForTech.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js",["464","465"],"//Interview Services Accessible By The Admin....\r\nimport techInterviewScheduleAdmin from '../interviewscheduler/techInterviewScheduleAdmin';\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport HRShareandschedule from './adminhrServices/hrshareandschedule.js';\r\nimport HRCancelInterview from './adminhrServices/hrcancelinterview.js'\r\nimport HRUpdateInterview from \"./adminhrServices/hrupdatescheduleinterview\";\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\n\r\nimport { Row,Col,Container,Accordion, Card, Button } from 'react-bootstrap';\r\n\r\n//for normal image.\r\n//<img src=\"logo.jpg\" alt=\"pic\" />\r\n//  backgroundImage: \"url(/img/logo.png)\"\r\n\r\nconst InterviewSchedulerForAdmin = () => {\r\n \r\n\r\nreturn (\r\n  <div>\r\n \r\n      <Container className=\"mr-5\">\r\n      <card>\r\n      {/* All underlying operations from services */}\r\n      <Accordion>\r\n          \r\n         <table className=\"marginLeft\">\r\n         <Col className=\"align-items-center\">\r\n                   <Row>\r\n                  <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\">\r\n                      <center><h2><b><i>  TECH INTERVIEW</i></b></h2></center>\r\n              </Accordion.Toggle>\r\n             \r\n              <Accordion.Collapse eventKey=\"0\">\r\n                  {/* Add Candidate component */}\r\n                  <Card.Body class=\"bg-custom\">\r\n                    <TechShareandschedule></TechShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <TechUpdateInterview></TechUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"2\">\r\n                        Cancel technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <TechCancelInterview></TechCancelInterview>\r\n\r\n                   </Card.Body>\r\n                  {/* Add an Candidate component */}\r\n              </Accordion.Collapse>\r\n              </Row>\r\n              <Row>\r\n              <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"1\">\r\n              <center><h2><b><i> HR INTERVIEW</i></b></h2></center>\r\n              </Accordion.Toggle>\r\n         \r\n          <Accordion.Collapse eventKey=\"1\">\r\n              {/* View Candidate component */}\r\n              <Card.Body class=\"bg-custom\">\r\n                    <HRShareandschedule></HRShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <HRUpdateInterview></HRUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                       Cancel HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <HRCancelInterview></HRCancelInterview>\r\n\r\n                   </Card.Body>\r\n              {/* View an Candidate component */}\r\n          </Accordion.Collapse>\r\n          </Row>\r\n        \r\n          </Col>\r\n          </table>\r\n      </Accordion>\r\n      </card>\r\n      </Container>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default InterviewSchedulerForAdmin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n   <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                       TECHNICAL INTERVIEW\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"3\">\r\n                  \r\n                    <Card.Body>\r\n\r\n                    \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                  \r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n               \r\n\r\n                \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                   \r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n             \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                \r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n            \r\n                    </Card.Body>\r\n                   \r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                */\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForAdmin.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\EmployeeForAdmin.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js",["466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React from 'react';\r\n//import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n//import React, { Component } from \"react\";\r\n//import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\nimport { HelpBlock, Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport addTechInterviewAction from '../../../actions/interviewscheduler/add_techinterview';\r\nimport InterviewScheduler from '../../../models/InterviewScheduler';\r\nimport showcandidatesAction from '../../../actions/interviewscheduler/get_candidates';\r\nimport showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n\r\nlet dispatch;\r\nlet history;\r\nlet selectedCanId;\r\nlet selectedpanId;\r\n\r\nconst TechShareandschedule = (props) => {\r\n\r\n    dispatch = useDispatch();\r\n    history = useHistory();\r\n    //candidate\r\n    let candList = useSelector(state => state.InterviewReducer.candidates);\r\n    console.log(\"candList: \", candList);\r\n    React.useEffect(() => {\r\n        candidateList()\r\n    }, []);\r\n\r\n    const candidateList = () => {\r\n        dispatch(showcandidatesAction())\r\n    }\r\n\r\n    if (!Array.isArray(candList)) {\r\n        candList = [];\r\n        console.log(\"Set candList to blank array\");\r\n    }\r\n    //panel\r\n    let panList = useSelector(state => state.InterviewReducer.panels);\r\n    console.log(\"panList: \", panList);\r\n    React.useEffect(() => {\r\n        panelList()\r\n    }, []);\r\n\r\n    const panelList = () => {\r\n        dispatch(showPanelAction())\r\n    }\r\n\r\n    if (!Array.isArray(panList)) {\r\n        panList = [];\r\n        console.log(\"Set panList to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Share Candidate and Shecdule Interview</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>locations</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\" />\r\n                    </Form.Group>\r\n\r\n                    <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                            \r\n                                <td>\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>Start Time</b> </h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                                    </Form.Group>\r\n\r\n                                </td>\r\n                             \r\n                                <td>\r\n\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>End Time </b></h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"end\" name=\"end\" />\r\n                                    </Form.Group>\r\n\r\n\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Form.Group controlId=\"formBasicExperience\">\r\n                        <Form.Label>Tech Interview Rating</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                            <option>0</option>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                            <option>7</option>\r\n                            <option>8</option>\r\n                            <option>9</option>\r\n                            <option>10</option>\r\n                        </Form.Control>\r\n\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n                               \r\n\r\n                    <Button variant=\"dark\" type=\"submit\" call>\r\n                        ADD\r\n                    </Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction handleChangecandidate(event) {\r\n    selectedCanId = event.target.value\r\n    console.log(\"selected candidate: \" + selectedCanId);\r\n}\r\n\r\nfunction handleChangepanel(event) {\r\n    selectedpanId = event.target.value\r\n    console.log(\"selected panel member: \" + selectedpanId);\r\n}\r\n\r\n\r\nfunction renderCandidates(candList) {\r\n    console.log(\"candList: \", candList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return candList.map((candidate) => {\r\n        const { candidateid } = candidate //destructuring //candidte id \r\n        return (\r\n            <option key={candidateid} value={candidateid}>{candidateid}</option>\r\n        )\r\n    })\r\n}\r\n\r\n\r\nfunction renderpanels(panList) {\r\n    console.log(\"panelList: \", panList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return panList.map((panel, index) => {\r\n        const { panelid } = panel //destructuring //candidte id \r\n        return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n        )\r\n    })\r\n};\r\n\r\nfunction handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const selectedCanId = data.get('candidate');\r\n    console.log(\"candidateid input  : \", selectedCanId);\r\n    const selectedpanId = data.get('panel');\r\n    const locations = data.get('loc');\r\n    console.log(\"Location input  : \", locations);\r\n    const date = data.get('date');\r\n    const techrating = data.get('rate');\r\n    const finalstatus = data.get('status');\r\n    const start_time = data.get('start');\r\n    const end_time = data.get('end');\r\n    if (locations === '' || locations === null) {\r\n        alert(\"Name cannot be blank\");\r\n        return;\r\n    }\r\n    const interviewObj = new InterviewScheduler(selectedCanId, selectedpanId, locations, date, techrating, finalstatus, start_time, end_time,);\r\n    console.log(\"Interview Object : \", interviewObj);\r\n    dispatch(addTechInterviewAction(interviewObj, selectedCanId, selectedpanId));\r\n    history.push('/');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TechShareandschedule;\r\n\r\n\r\n\r\n/*\r\n getPickerValue = value => {\r\n        console.log(value);\r\n    }\r\n    ---------------\r\n <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time :</Form.Label>\r\n\r\n                        <MDBCol md=\"3\">\r\n                        <MDBTimePicker id=\"timePicker\" label=\"24hrs format\" hours={12} minutes={0} hoursFormat={24} getValue={this.getPickerValue} />\r\n                       </MDBCol>\r\n\r\n                        <Form.Control/>\r\n                    </Form.Group>\r\n\r\n-------------------------\r\n\r\n <TimePicker\r\n          onChange={this.onChange}\r\n          value={this.state.time}\r\n        />\r\n---------------\r\n <Form.Group controlId=\"formBasicExperience\">\r\n                    <Dropdown as={ButtonGroup}>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Technical Interview Rating</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  --------------\r\n  normal button:\r\n\r\n   <Button variant=\"dark\" type=\"submit\">\r\n                        SCEDULE AN INTERVIEW\r\n                    </Button>\r\n*/","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js",["481"],"import React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CancelInterviewAction from '../../../actions/interviewscheduler/cancelinterview_action';\r\n\r\n\r\nconst TechCancelInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let interview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>CancelInterviewAction_Function(), [])\r\n        const CancelInterviewAction_Function = () => {\r\n            dispatcher(CancelInterviewAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"path\").value;\r\n        console.log(pathVar);\r\n        dispatcher(CancelInterviewAction(pathVar));\r\n        renderData(interview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Cancel</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"path\"/>\r\n                        </Form.Group>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Cancel\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(interview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertInterviewNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n                Interview with the mentioned id was not found.\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(interview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", interview);\r\n        if(interview!==undefined && interview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                       \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {/*<td>{interview.data.interviewid}</td>*/}\r\n                       \r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            );\r\n        }\r\n        if(interview!==undefined && interview===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertInterviewNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default TechCancelInterview;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\addpanelmember.js",["482","483","484","485","486"],"import { Alert, Form, Table, Jumbotron, Button, Col, InputGroup, FormControl } from 'react-bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchEmployeeAction from '../../../actions/employee/searchemployee_action';\r\nimport AddPanelMemberAction from '../../../actions/panelmember/addpanelmember_action';\r\n\r\n\r\nconst AddPanelMember = () => {\r\n\r\n    let loc = null;\r\n    let panel = null;\r\n    let name = null;\r\n    let post_json = null;\r\n\r\n    let props_wrapper = {};\r\n\r\n    let panelMemberResponse = useSelector((state)=>state.PanelMemberReducer.panelupdate);\r\n    let dispatcher = useDispatch();\r\n    //ADD PANEL MEMBER WITH REACT USE EFFECT        \r\n    React.useEffect(()=>AddPanelMemberAction_Function(), [])\r\n        const AddPanelMemberAction_Function = () => {\r\n            dispatcher(AddPanelMemberAction(post_json, name));\r\n        }\r\n\r\n    function addPanelMember(){\r\n        loc = document.getElementById(\"location_add\").value;\r\n        panel = document.getElementById(\"panel_add\").value;\r\n        name = document.getElementById(\"empname\").value;\r\n        console.log(name, loc, panel);\r\n        post_json = { employeeEntity: null, location : loc, panelid: 10000000, type : panel };\r\n        props_wrapper = {body: post_json, pathVar: name}\r\n        if(loc!=\"null\" && panel!=\"null\"){\r\n            dispatcher(AddPanelMemberAction(props_wrapper));\r\n            confirmAddition(panelMemberResponse);\r\n        }\r\n        else{\r\n            panelMemberResponse = null;\r\n            confirmAddition(panelMemberResponse);\r\n        }\r\n    }\r\n\r\n    function clearAlerts(){\r\n        panelMemberResponse = undefined;\r\n        confirmAddition(panelMemberResponse);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 600}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>What is the name of the Employee?</Form.Label>\r\n                        {/* <Form.Control type=\"text\" placeholder=\"Name of the Employee\" id=\"searchParameter\"/> */}\r\n                        \r\n                        <br></br>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                            id=\"empname\"\r\n                            placeholder=\"Employee's Name\"\r\n                            aria-label=\"Employee's Name\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            />\r\n                            <InputGroup.Append>\r\n                            {/* Check Button for Employee will run search employee..... */}\r\n                                \r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <hr></hr>\r\n                        <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                                <td>Select a Department</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                                        <Form.Control id=\"panel_add\" as=\"select\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option value=\"hr\">Human Resources (HR)</option>\r\n                                            <option value=\"tech\">Technical</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Select Location</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\" >\r\n                                        <Form.Control as=\"select\" id=\"location_add\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option>Ahmedabad</option>\r\n                                            <option>Aurangabad</option>\r\n                                            <option>Bengaluru</option>\r\n                                            <option>Chennai</option>\r\n                                            <option>Delhi</option>\r\n                                            <option>Daman/Diu</option>\r\n                                            <option>Hyderabad</option>\r\n                                            <option>Indore</option>\r\n                                            <option>Lucknow</option>\r\n                                            <option>Mumbai</option>\r\n                                            <option>Nasik</option>\r\n                                            <option>Pune</option>\r\n                                            <option>Raipur</option>\r\n                                            <option>Thiruvananthapuram</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <br></br>\r\n                            <tr>\r\n                                <td>\r\n                                    <Button variant=\"danger\" type=\"reset\" call onClick={clearAlerts}>\r\n                                        Reset\r\n                                    </Button>\r\n                                </td>\r\n                                <td>\r\n                                    <Button variant=\"primary\" type=\"button\" call onClick={addPanelMember}>\r\n                                        Add Member\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                {/* Response  */}\r\n                <div>\r\n                    {confirmAddition(panelMemberResponse)}\r\n                </div>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n    function confirmAddition(panelMemberResponse){\r\n        console.log(panelMemberResponse);\r\n        \r\n        if(panelMemberResponse!==null && panelMemberResponse!==undefined  && panelMemberResponse.length!==0){\r\n            console.log(\"Added the specified panel member to the database\");\r\n            return(\r\n                <Alert variant=\"success\">\r\n                <Alert.Heading>SUCCESSFULLY added the panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Added Successfully!\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(panelMemberResponse===[] && post_json!==null){\r\n            return(\r\n                <Alert variant=\"danger\">\r\n                <Alert.Heading>FAILED to add panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Not Added! There was some error in processing your request.\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(panelMemberResponse===[] || panelMemberResponse===null){\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AddPanelMember;\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\deletepanelmember.js",["487","488","489","490"],"\r\nimport { Form, Table, Jumbotron, Button, Modal } from 'react-bootstrap';\r\n\r\nimport { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DeletePanelMemberAction from '../../../actions/panelmember/deletepanelmember_action'\r\n\r\nconst DeletePanelMember = (props) => {\r\n\r\n    var pathVar = null;\r\n    let panelMember = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => DeletePanelMemberAction_Function(), [])\r\n    const DeletePanelMemberAction_Function = () => {\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        console.log(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\", pathVar);\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n        renderData(panelMember);\r\n        console.log(pathVar);\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMember);\r\n    if (!Array.isArray(panelMember)) {\r\n        panelMember = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label for=\"pathVariable\">Delete by valid Name</Form.Label>\r\n                        <Form.Control id=\"pathVariable\" type=\"text\" placeholder=\"Employee Name\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Delete\r\n                    </Button>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>EmployeeName</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMember)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //MODAL\r\n    function Box() {\r\n        const [show, setShow] = useState(true);\r\n        const handleClose = () => setShow(false);\r\n        const handleShow = () => setShow(true);\r\n\r\n        return (\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Employee Name Not Found</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Entered incorrect or blank name</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        OK\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    function renderData(panelMember) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMember);\r\n        return panelMember.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default DeletePanelMember;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\showpanelmember.js",["491","492"],"import React from 'react';\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ShowPanelMemberAction from '../../../actions/panelmember/showpanelmembers_action'\r\n\r\n\r\nconst ShowPanelMembers = (props) => {\r\n\r\n    let panelMemberList = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => PanelMemberList(), [])\r\n    const PanelMemberList = () => {\r\n        dispatcher(ShowPanelMemberAction());\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMemberList);\r\n    if (!Array.isArray(panelMemberList)) {\r\n        panelMemberList = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>List All Panel Member.</Form.Label>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>Employee Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMemberList)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(panelMemberList) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMemberList);\r\n        return panelMemberList.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default ShowPanelMembers;\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js",["493","494"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js",["495"],"//Hr Interview Scheduler Services Component : CHECK WARNING.info FOR NOTES.....\r\nimport React from 'react'\r\nimport { Form, Table, Jumbotron, Button ,Alert} from 'react-bootstrap';\r\nimport  { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ShowListForHrAction from '../../../actions/interviewscheduler/showlistforhr_action';\r\n\r\n\r\n\r\nconst ViewListForHr = (props) => {\r\n\r\n    var hrinterviewlist = null;\r\n    let member = useSelector((state)=>state.HRReducer.viewmemberforhr);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ShowListForHrAction_Function(), [])\r\n        const ShowListForHrAction_Function = () => {\r\n            dispatcher(ShowListForHrAction(hrinterviewlist));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        hrinterviewlist = document.getElementById(\"vareab\").value;\r\n        dispatcher(ShowListForHrAction(hrinterviewlist));\r\n        renderTableDataHr(member);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label> View Candidate Using interviewid</Form.Label>\r\n                        <Form.Control id=\"vareab\" type=\"text\" placeholder=\"Interview ID\"/>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Search\r\n                        </Button>\r\n                    </Form.Group>\r\n                        <tbody id=\"table_content\">\r\n                        {renderTableDataHr(member)}\r\n                        </tbody>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n //ALERT\r\n function AlertInterviewMemberNotFound() {\r\n    const [show, setShow] = useState(true);\r\n    console.log(show, setShow);\r\n    if (show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>Interview Not Found</Alert.Heading>\r\n          <p>\r\n            Interview with the mentioned  id was not found. Maybe you entered id. Please check once!\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    else{\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n\r\n    function renderTableDataHr(member) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", member);\r\n        if(member!==undefined && member!==null  && member.length!==0){\r\n            return(\r\n           <Table striped bordered hover size=\"sm\">\r\n\r\n                <thead>\r\n                    <tr>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience</th>\r\n                            <th>Primary<br></br>Skills</th>\r\n                            <th>Secondary <br></br>Skills</th>\r\n                            <th>Notice <br></br>Period</th>\r\n                        </tr>\r\n                        </thead>\r\n                    <tbody>\r\n\r\n\r\n                <tr>\r\n                    <td>{member.data.candidateid}</td>\r\n                    <td>{member.data.candidatename}</td>\r\n                    <td>{member.data.location}</td>\r\n                    <td>{member.data.qualification}</td>\r\n                    <td>{member.data.designation}</td>\r\n                    <td>{member.data.experience}</td>\r\n                    <td>{member.data.primaryskills}</td>\r\n                    <td>{member.data.secondaryskills}</td>\r\n                    <td>{member.data.noticeperiod}</td>\r\n                </tr>\r\n                </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n            if(member!==undefined && member===null){\r\n                console.log(\"called the alert\");\r\n            return(<AlertInterviewMemberNotFound show=\"true\"/>);\r\n        }\r\n    \r\n    }        \r\n}\r\n\r\nexport default ViewListForHr;",["496","497"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js",["498"],"import React from 'react'\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UpdateInterviewScheduleAction from '../../../actions/interviewscheduler/updateinterviewschedule_action';\r\n\r\nconst TechUpdateInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let updateinterview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>UpdateInterviewScheduleAction_Function(), [])\r\n        const UpdateInterviewScheduleAction_Function = () => {\r\n            dispatcher(UpdateInterviewScheduleAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"paths\").value;\r\n        console.log(pathVar);\r\n        dispatcher(UpdateInterviewScheduleAction(pathVar));\r\n        renderData(updateinterview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Update</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"paths\"/>\r\n                        </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>End Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control type=\"text\" />\r\n                    </Form.Group>\r\n                    \r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                           \r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Update\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(updateinterview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(updateinterview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", updateinterview);\r\n        if(updateinterview!==undefined && updateinterview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n               \r\n            </Table>\r\n            );\r\n        }\r\n    }        \r\n}\r\n\r\nexport default TechUpdateInterview;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js",["499"],"import React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CancelHRInterviewAction from '../../../actions/interviewscheduler/cancelhrinterview_action';\r\n\r\n\r\nconst HRCancelInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let hrinterview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>CancelHRInterviewAction_Function(), [])\r\n        const CancelHRInterviewAction_Function = () => {\r\n            dispatcher(CancelHRInterviewAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"paths\").value;\r\n        console.log(pathVar);\r\n        dispatcher(CancelHRInterviewAction(pathVar));\r\n        renderData(hrinterview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Cancel</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"paths\"/>\r\n                        </Form.Group>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Cancel\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(hrinterview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertInterviewNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n                Interview with the mentioned id was not found.\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(hrinterview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", hrinterview);\r\n        if(hrinterview!==undefined && hrinterview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                       \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {/*<td>{interview.data.interviewid}</td>*/}\r\n                       \r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            );\r\n        }\r\n        if(hrinterview!==undefined && hrinterview===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertInterviewNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default HRCancelInterview;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js",["500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515"],"import React from 'react';\r\n    //import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n    //import React, { Component } from \"react\";\r\n    //import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\n    import { Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\n    import { useSelector, useDispatch } from 'react-redux';\r\n    import { useHistory } from \"react-router-dom\";\r\n    \r\n    import addHRInterviewAction from '../../../actions/interviewscheduler/add_hrinterview';\r\n    import hrInterviewScheduler from '../../../models/hrInterviewScheduler';\r\n    import showcandidatesAction from '../../../actions/interviewscheduler/get_candidates';\r\n    import showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n    \r\n    \r\n    let dispatch;\r\n    let history;\r\n    let selectedCanId;\r\n    let selectedpanId;\r\n    const HRShareandschedule = (props) => {\r\n\r\n            dispatch = useDispatch();\r\n            history = useHistory();\r\n            //candidate\r\n            let candList = useSelector(state => state.InterviewReducer.candidates);\r\n            console.log(\"candList: \", candList);\r\n            React.useEffect(() => {\r\n                candidateList()\r\n              }, []);\r\n            \r\n              const candidateList = () => {\r\n                dispatch(showcandidatesAction())\r\n              }\r\n    \r\n              if(!Array.isArray(candList)){\r\n                candList = [];\r\n                console.log(\"Set candList to blank array\");\r\n            } \r\n           //panel\r\n           let panList = useSelector(state => state.InterviewReducer.panels);\r\n            console.log(\"panList: \", panList);\r\n            React.useEffect(() => {\r\n                panelList()\r\n              }, []);\r\n            \r\n              const panelList = () => {\r\n                dispatch(showPanelAction())\r\n              }\r\n    \r\n              if(!Array.isArray(panList)){\r\n                panList = [];\r\n                console.log(\"Set panList to blank array\");\r\n            } \r\n    \r\n        return (\r\n            // All Final Operations and Functions\r\n    \r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n               \r\n            }}>\r\n                <Jumbotron style={{ width: 600 }}>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formGroupText\">\r\n                            <Form.Label>Share Candidate and Shecdule HR Interview</Form.Label>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>locations</Form.Label>\r\n                            <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Select Date</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\"/>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Start Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>End Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"end\" name=\"end\"/>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicExperience\">\r\n                            <Form.Label>HR Interview Rating</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                                <option>7</option>\r\n                                <option>8</option>\r\n                                <option>9</option>\r\n                                <option>10</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n    \r\n                        <Button variant=\"dark\" type=\"submit\" call>\r\n                           ADD\r\n                        </Button>\r\n                    </Form>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    function handleChangecandidate(event) {\r\n        selectedCanId = event.target.value\r\n        console.log(\"selected candidate: \"+ selectedCanId);\r\n    }\r\n    \r\n    function handleChangepanel(event) {\r\n        selectedpanId = event.target.value\r\n        console.log(\"selected panel member: \"+ selectedpanId);\r\n    }\r\n    \r\n    \r\n    function renderCandidates(candList){\r\n        console.log(\"candList: \", candList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return candList.map((candidate) => {\r\n           const { candidateid } = candidate //destructuring //candidte id \r\n           return (\r\n            <option key={candidateid} value={candidateid}>{candidateid}</option>\r\n           )\r\n        })\r\n     }\r\n    \r\n     \r\n    function renderpanels(panList){\r\n        console.log(\"panelList: \", panList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return panList.map((panel, index) => {\r\n           const { panelid } = panel //destructuring //candidte id \r\n           return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n           )\r\n        })\r\n     };\r\n     \r\n     function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const selectedCanId=data.get('candidate');\r\n        console.log(\"candidateid input  : \",selectedCanId);\r\n        const selectedpanId=data.get('panel');\r\n        const locations = data.get('loc');\r\n        console.log(\"Location input  : \",locations);\r\n        const date=data.get('date');\r\n        const hrrating=data.get('rate');\r\n        const finalstatus=data.get('status');\r\n        const start_time=data.get('start');\r\n        const end_time=data.get('end');\r\n        if(locations==='' ||locations===null) {\r\n            alert(\"Name cannot be blank\");\r\n            return;\r\n        }\r\n        const hrinterviewObj = new hrInterviewScheduler(selectedCanId,selectedpanId,locations,date,hrrating,finalstatus,start_time,end_time,);\r\n        console.log(\"Interview Object : \",hrinterviewObj);\r\n        dispatch(addHRInterviewAction(hrinterviewObj,selectedCanId,selectedpanId));\r\n        history.push('/');\r\n    }\r\n    \r\n    \r\n    \r\nexport default HRShareandschedule;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\viewCandidate.js",["516","517"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\addCandidate.js",["518","519","520","521"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js",["522"],"import React from 'react'\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UpdateHRInterviewScheduleAction from '../../../actions/interviewscheduler/updatehrinterviewschedule_action';\r\n\r\nconst TechUpdateHRInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let hrupdateinterview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>UpdateHRInterviewScheduleAction_Function(), [])\r\n        const UpdateHRInterviewScheduleAction_Function = () => {\r\n            dispatcher(UpdateHRInterviewScheduleAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"paths\").value;\r\n        console.log(pathVar);\r\n        dispatcher(UpdateHRInterviewScheduleAction(pathVar));\r\n        renderData(hrupdateinterview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Update</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"paths\"/>\r\n                        </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>End Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control type=\"text\" />\r\n                    </Form.Group>\r\n                    \r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                           \r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Update\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(hrupdateinterview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(hrupdateinterview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", hrupdateinterview);\r\n        if(hrupdateinterview!==undefined && hrupdateinterview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n               \r\n            </Table>\r\n            );\r\n        }\r\n    }        \r\n}\r\n\r\nexport default TechUpdateHRInterview;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\services\\searchemployee.js",["523","524"],"  \r\nimport { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchEmployeeAction from '../../../actions/employee/searchemployee_action'\r\n\r\nconst SearchEmployee = (props) => {\r\n\r\n    var pathVar = null;\r\n    let employee = useSelector((state)=>state.EmployeeReducer.employees);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>SearchEmployeeAction_Function(), [])\r\n    const SearchEmployeeAction_Function = () => {\r\n        console.log(pathVar);\r\n            dispatcher(SearchEmployeeAction(pathVar));\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"emptosearch\").value;\r\n        dispatcher(SearchEmployeeAction(pathVar));\r\n        // renderData(employee);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Search by valid name/id</Form.Label>\r\n                        <Form.Control id=\"emptosearch\" type=\"text\" placeholder=\"Name or Employee ID\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(employee)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertEmployeeNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Employee Not Found</Alert.Heading>\r\n              <p>\r\n                Employee with the mentioned name or id was not found. Maybe you entered wrong name/id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n    function renderData(employee) {   \r\n        console.log(\"employee dispatcher object returned from the server : \", employee);\r\n        if(employee!==undefined && employee!==null && employee.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{employee.employeeid}</td>\r\n                            <td>{employee.name}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n        if(employee!==undefined && employee===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertEmployeeNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\n\r\nexport default SearchEmployee;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js",["525"],"//Interview Services Accessible By The Admin....\r\n\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst techInterviewScheduleAdmin = () => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Accordion>\r\n               <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n               \r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default techInterviewScheduleAdmin;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\models\\InterviewScheduler.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelinterview_action.js",["526","527","528","529"],"import axios from 'axios'\r\n\r\nconst CancelInterviewAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewschedulerdel/'+props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'CANCEL_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'CANCEL_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default CancelInterviewAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_panel.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_candidates.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\addpanelmember_action.js",["530","531"],"import axios from 'axios'\r\n\r\nconst AddPanelMemberAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        if(props!=null){\r\n            console.log(props.pathVar, props.body);\r\n            const url = 'http://localhost:9090/cgits/panelmember/'+props.pathVar;\r\n            const serverResponse = await axios.post(url, props.body) //await can only be used with async function....\r\n            .then(response => dispatch({type: 'ADD_PANEL_MEMBER', payload: response.data}))\r\n            .catch(error => console.log(err=error));\r\n            \r\n            console.log(serverResponse);\r\n        }\r\n        if(err!==null && props!==undefined){\r\n            console.log(\"Operation could not be completed, error from server\");\r\n            dispatch({type: 'ADD_PANEL_MEMBER', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddPanelMemberAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\deletepanelmember_action.js",["532","533","534","535"],"\r\nimport axios from 'axios';\r\n\r\nconst DeletePanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/panelmember/' + props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'DELETE_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(err = error));\r\n        console.log(props);\r\n        if (err !== null && props != undefined) {\r\n            console.log(\"No User Found\");\r\n            dispatch({ type: 'DELETE_PANELMEMBER', payload: null });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeletePanelMemberAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\showpanelmembers_action.js",["536","537","538"],"import axios from 'axios';\r\n\r\nconst ShowPanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/panelmembers';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'SHOW_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(err = error));\r\n        console.log(serverResponse);\r\n    }\r\n}\r\n\r\nexport default ShowPanelMemberAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\employee\\searchemployee_action.js",["539","540","541"],"import axios from 'axios'\r\n\r\nconst SearchEmployeeAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/employee/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'SEARCH_EMPLOYEE', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        console.log(serverResponse);\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'SEARCH_EMPLOYEE', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchEmployeeAction;\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_techinterview.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\showlistforhr_action.js",["542","543","544","545"],"import axios from 'axios'\r\n\r\nconst ShowListForHrAction  = (props)=> {\r\n    return async function(dispatch){\r\n        var err= null;\r\n        var onLoad =0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/hr/'+ props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_HR', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!=null && props!=undefined){\r\n            console.log(\"No user Found\");\r\n            dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_HR', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShowListForHrAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givehrrating_action.js",["546","547","548","549"],"import axios from 'axios';\r\n\r\nconst GiveHrRatingAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/hr/rating/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'GIVE_HR_RATING', payload:response}))\r\n            .catch(error => console.log(err=error));\r\n            if(err!==null && props!=undefined){\r\n                console.log(\"No User Found\");\r\n                dispatch({type:'GIVE_HR_RATING', payload: null});\r\n            }\r\n        }\r\n    }\r\n\r\nexport default GiveHrRatingAction;\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForHR.js",["550"],"import SearchCandidate from './hrservices/viewhrcandidate'\r\nimport {Accordion, Card, Button, Row, Col, table, Container} from 'react-bootstrap'\r\n//import CancelInterview from './services/cancelinterview.js'\r\n\r\nconst CandidateForHR = (props) => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Card>\r\n                <Accordion>\r\n                    <table className=\"marginLeft\">\r\n                        <Col className=\"align-items-center\">\r\n                            <Row>\r\n                                <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\"> \r\n                                    <center>View a Candidate</center>\r\n                                </Accordion.Toggle>\r\n                                \r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body class=\"bg-custom\"><SearchCandidate></SearchCandidate></Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Row>\r\n                        </Col>\r\n                    </table>\r\n                </Accordion>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CandidateForHR;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updateinterviewschedule_action.js",["551","552","553","554"],"import axios from 'axios'\r\n\r\nconst UpdateInterviewScheduleAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/'+props;\r\n        const serverResponse = await axios.put(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'UPDATE_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'UPDATE_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateInterviewScheduleAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForHR.js",["555","556"],"//Panel Services Accessible By The Admin....\r\nimport SurrenderAsHRPanel from './hrservices/surrenderashr'\r\nimport ShowPanelMembers from './services/showpanelmember'\r\nimport DeletePanelMember from './services/deletepanelmember'\r\n\r\nimport { Col,Row,Accordion, Card, Button } from 'react-bootstrap'\r\n\r\nconst PanelMemberForHR = (props) => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Card>\r\n                <Accordion>\r\n                    <table className=\"marginLeft\">\r\n                        <Col className=\"align-items-center\">\r\n                            <Row>\r\n                                <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\"> \r\n                                    <center>Surrender As HR Panel</center>\r\n                                </Accordion.Toggle>\r\n                                \r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                            \r\n                                <Card.Body class=\"bg-custom\"><SurrenderAsHRPanel></SurrenderAsHRPanel></Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Row>\r\n                        </Col>\r\n                    </table>\r\n                </Accordion>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PanelMemberForHR;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_hrinterview.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\models\\hrInterviewScheduler.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\models\\Candidate.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updatehrinterviewschedule_action.js",["557","558","559","560"],"import axios from 'axios'\r\n\r\nconst UpdateHRInterviewScheduleAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/hrinterviewscheduler/'+props;\r\n        const serverResponse = await axios.put(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'UPDATE_HR_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'UPDATE_HR_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateHRInterviewScheduleAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getLocationsAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\addCandidateAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByIdAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByNameAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByAllAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelhrinterview_action.js",["561","562","563","564"],"import axios from 'axios'\r\n\r\nconst CancelHRInterviewAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/hrinterviewschedulerdel/'+props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'CANCEL_HR_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'CANCEL_HR_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default CancelHRInterviewAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js",["565","566"],"import React from 'react';\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ViewAllInterviewMembersForTechAction from '../../../actions/interviewscheduler/viewinterviewmemberfortechaction'\r\n\r\n\r\nconst ViewAllInterviewMembers = (props) => {\r\n\r\n\r\n    let interviewListForTech= useSelector((state)=>state.TechReducer.viewalltech);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>InterviewMemberForTechList(), [])\r\n        const InterviewMemberForTechList = () => {\r\n            dispatcher(ViewAllInterviewMembersForTechAction());\r\n        }\r\n\r\n       \r\n        console.log(\"InterviewMemberList: \", interviewListForTech);\r\n        if (!Array.isArray(interviewListForTech)) {\r\n            interviewListForTech = [];\r\n            console.log(\"Set interview Member to blank array\");\r\n        }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>List All Interview Member.</Form.Label>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                <tr>\r\n                <th>Interview ID</th>  \r\n                        <th>Location</th>\r\n                        <th>Date</th>\r\n                        <th>Start_Time</th>\r\n                        <th>End_Time</th>\r\n                        <th>TechRating</th>\r\n                        <th>Final<br></br>Status</th> \r\n                </tr>\r\n            </thead>\r\n            <hr></hr>\r\n                {renderData(interviewListForTech)}\r\n       \r\n        </Table>\r\n        </Form>\r\n        </Jumbotron>\r\n    </div>\r\n\r\n    );\r\n\r\n\r\nfunction renderData(interviewListForTech) {\r\n    console.log(\"interviewmember dispatcher object returned from the server : \", interviewListForTech);\r\n    if(interviewListForTech!==undefined) {\r\n      return interviewListForTech.map((interviewmember,index) =>{\r\n        const {interviewid,location,date,start_time,end_time,techrating,finalstatus} = interviewmember //destructuring\r\n        return(\r\n                    <tbody>\r\n                        <tr>\r\n                        <td>{interviewid}</td>     \r\n                        <td>{location}</td>\r\n                        <td>{date}</td>\r\n                        <td>{start_time}</td>\r\n                        <td>{end_time}</td>\r\n                        <td>{techrating}</td>\r\n                        <td>{finalstatus}</td>    \r\n                </tr>\r\n                </tbody>\r\n    )\r\n});\r\n    }\r\n}\r\n}\r\nexport default ViewAllInterviewMembers;\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\givetechrating.js",["567","568"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport GiveTechRatingAction from '../../../actions/interviewscheduler/givetechratingaction'\r\n\r\nconst GiveTechRating = (props) => {\r\n\r\n    var techratinglist = null;\r\n    let interviewmember = useSelector(state => state.TechReducer.ratinglistcandidate);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>GiveTechRatingAction_Function(), [])\r\n    const GiveTechRatingAction_Function = () => {\r\n            dispatcher(GiveTechRatingAction(techratinglist));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        techratinglist = document.getElementById(\"interviewidforrating\").value;\r\n        dispatcher(GiveTechRatingAction(techratinglist));\r\n        renderData(interviewmember);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Give TechRating to a Candidate by Interviewid</Form.Label>\r\n                        <Form.Control id=\"interviewidforrating\" type=\"text\" placeholder=\"Interview ID\" />\r\n                        </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(interviewmember)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //Alert\r\n    function AlertMemberNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n              Candidate with the mentioned id was not found. Maybe you entered wrong id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n    function renderData(interviewmember) {   \r\n        console.log(\"candidate dispatcher object returned from the server : \", interviewmember);\r\n        if(interviewmember!==undefined && interviewmember!==null && interviewmember.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Interview ID</th>\r\n                            <th>Location</th>\r\n                            <th>Date</th>\r\n                            <th>Start Time</th>\r\n                            <th>End Time</th>\r\n                            <th>TechRating</th>\r\n                            <th>Final Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>{interviewmember.data.interviewid}</td>\r\n                            <td>{interviewmember.data.location}</td>\r\n                            <td>{interviewmember.data.date}</td>\r\n                            <td>{interviewmember.data.start_time}</td>\r\n                            <td>{interviewmember.data.end_time}</td>\r\n                            <td>{interviewmember.data.techrating}</td>\r\n                            <td>{interviewmember.data.finalstatus}</td>\r\n                            \r\n                        </tr>\r\n                        </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n        if(interviewmember!==undefined && interviewmember===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertMemberNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default GiveTechRating;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\hrservices\\viewhrcandidate.js",["569","570","571"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givetechratingaction.js",["572","573","574","575"],"import axios from 'axios'\r\n\r\nconst GiveTechRatingAction = (props)=> {\r\n\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/tech/rating/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'GIVE_TECH_RATING', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'GIVE_TECH_RATING', payload: null});\r\n        }\r\n    }\r\n\r\n}\r\nexport default GiveTechRatingAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js",["576"],"import axios from 'axios'\r\n\r\nconst ViewAllInterviewMembersForTechAction = ()=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/tech';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_LIST_FOR_TECH', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!=null || serverResponse==null){\r\n            console.log(\"Something went wrong while connecting to srver\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewAllInterviewMembersForTechAction;\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_hr.js",["577","578","579"],"//Action for viewing a candidate for HR panel\r\nimport axios from 'axios'\r\n\r\nconst SurrenderAsHRAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/panelmember/hr/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'SURRENDER_AS_HR', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        console.log(serverResponse);\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'SURRENDER_AS_HR', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SurrenderAsHRAction;","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\showinterviewmembers_action.js",["580"],"import axios from 'axios'\r\n\r\nconst ShowInterviewMemberAction = ()=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewmembers';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_LIST_FOR_HR', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!=null || serverResponse==null){\r\n            console.log(\"Something went wrong while connecting to srver\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShowInterviewMemberAction;\r\n\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForTech.js",["581"],"//Employee Services Accessible By The Admin....\r\n\r\nimport SearchCandidate from './hrservices/viewhrcandidate'\r\nimport ViewACandidateForTech from './techservices/viewtechcandidate'\r\nimport {Row, Col,Accordion, Card, Button } from 'react-bootstrap'\r\n//import CancelInterview from './services/cancelinterview.js'\r\n\r\nconst CandidateForTech = () => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Card>\r\n                <Accordion>\r\n                    <table className=\"marginLeft\">\r\n                        <Col className=\"align-items-center\">\r\n                            <Row>\r\n                                <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\"> \r\n                                    <center>View a Candidate</center>\r\n                                </Accordion.Toggle>\r\n                                \r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body class=\"bg-custom\"><ViewACandidateForTech></ViewACandidateForTech></Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Row>\r\n                        </Col>\r\n                    </table>\r\n                </Accordion>\r\n            </Card>\r\n        </div>\r\n    );\r\n    }\r\nexport default CandidateForTech;\r\n","E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_tech_action.js",["582","583","584"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\techservices\\viewtechcandidate.js",["585","586","587"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_hr.js",["588","589","590"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewinterviewmemberhr.js",["591","592"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\techservices\\surrendertechpanel.js",["593","594","595"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_tech_action.js",["596","597","598","599"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\hrservices\\surrenderashr.js",["600","601"],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctPrimarySkillAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctNameAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctLocationAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctDesignationAction.js",[],"E:\\SprintUIgitRepo\\Interview_Tracking_System\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDistinctQualificationAction.js",[],{"ruleId":"602","severity":1,"message":"603","line":10,"column":57,"nodeType":"604","messageId":"605","endLine":10,"endColumn":64},{"ruleId":"602","severity":1,"message":"606","line":12,"column":10,"nodeType":"604","messageId":"605","endLine":12,"endColumn":23},{"ruleId":"602","severity":1,"message":"607","line":12,"column":25,"nodeType":"604","messageId":"605","endLine":12,"endColumn":31},{"ruleId":"608","replacedBy":"609"},{"ruleId":"610","replacedBy":"611"},{"ruleId":"602","severity":1,"message":"612","line":13,"column":23,"nodeType":"604","messageId":"605","endLine":13,"endColumn":34},{"ruleId":"602","severity":1,"message":"613","line":14,"column":10,"nodeType":"604","messageId":"605","endLine":14,"endColumn":16},{"ruleId":"614","severity":1,"message":"615","line":40,"column":9,"nodeType":"616","messageId":"617","endLine":43,"endColumn":22},{"ruleId":"602","severity":1,"message":"618","line":7,"column":10,"nodeType":"604","messageId":"605","endLine":7,"endColumn":15},{"ruleId":"602","severity":1,"message":"619","line":7,"column":17,"nodeType":"604","messageId":"605","endLine":7,"endColumn":21},{"ruleId":"602","severity":1,"message":"620","line":7,"column":23,"nodeType":"604","messageId":"605","endLine":7,"endColumn":29},{"ruleId":"602","severity":1,"message":"621","line":9,"column":10,"nodeType":"604","messageId":"605","endLine":9,"endColumn":16},{"ruleId":"602","severity":1,"message":"622","line":9,"column":18,"nodeType":"604","messageId":"605","endLine":9,"endColumn":21},{"ruleId":"602","severity":1,"message":"612","line":9,"column":23,"nodeType":"604","messageId":"605","endLine":9,"endColumn":34},{"ruleId":"602","severity":1,"message":"613","line":10,"column":10,"nodeType":"604","messageId":"605","endLine":10,"endColumn":16},{"ruleId":"602","severity":1,"message":"623","line":1,"column":17,"nodeType":"604","messageId":"605","endLine":1,"endColumn":25},{"ruleId":"602","severity":1,"message":"624","line":1,"column":27,"nodeType":"604","messageId":"605","endLine":1,"endColumn":36},{"ruleId":"602","severity":1,"message":"613","line":1,"column":38,"nodeType":"604","messageId":"605","endLine":1,"endColumn":44},{"ruleId":"602","severity":1,"message":"625","line":1,"column":51,"nodeType":"604","messageId":"605","endLine":1,"endColumn":55},{"ruleId":"602","severity":1,"message":"626","line":1,"column":57,"nodeType":"604","messageId":"605","endLine":1,"endColumn":66},{"ruleId":"602","severity":1,"message":"627","line":1,"column":68,"nodeType":"604","messageId":"605","endLine":1,"endColumn":71},{"ruleId":"602","severity":1,"message":"628","line":1,"column":73,"nodeType":"604","messageId":"605","endLine":1,"endColumn":76},{"ruleId":"629","severity":1,"message":"630","line":7,"column":13,"nodeType":"631","endLine":7,"endColumn":38},{"ruleId":"632","severity":1,"message":"633","line":35,"column":3,"nodeType":"634","endLine":35,"endColumn":16},{"ruleId":"632","severity":1,"message":"633","line":37,"column":3,"nodeType":"634","endLine":37,"endColumn":16},{"ruleId":"632","severity":1,"message":"633","line":39,"column":3,"nodeType":"634","endLine":39,"endColumn":16},{"ruleId":"632","severity":1,"message":"633","line":41,"column":3,"nodeType":"634","endLine":41,"endColumn":16},{"ruleId":"632","severity":1,"message":"633","line":43,"column":3,"nodeType":"634","endLine":43,"endColumn":18},{"ruleId":"602","severity":1,"message":"618","line":6,"column":10,"nodeType":"604","messageId":"605","endLine":6,"endColumn":15},{"ruleId":"602","severity":1,"message":"619","line":6,"column":17,"nodeType":"604","messageId":"605","endLine":6,"endColumn":21},{"ruleId":"602","severity":1,"message":"620","line":6,"column":23,"nodeType":"604","messageId":"605","endLine":6,"endColumn":29},{"ruleId":"602","severity":1,"message":"635","line":8,"column":9,"nodeType":"604","messageId":"605","endLine":8,"endColumn":12},{"ruleId":"602","severity":1,"message":"636","line":8,"column":13,"nodeType":"604","messageId":"605","endLine":8,"endColumn":17},{"ruleId":"602","severity":1,"message":"624","line":8,"column":18,"nodeType":"604","messageId":"605","endLine":8,"endColumn":27},{"ruleId":"602","severity":1,"message":"626","line":8,"column":28,"nodeType":"604","messageId":"605","endLine":8,"endColumn":37},{"ruleId":"602","severity":1,"message":"621","line":8,"column":39,"nodeType":"604","messageId":"605","endLine":8,"endColumn":45},{"ruleId":"602","severity":1,"message":"622","line":8,"column":47,"nodeType":"604","messageId":"605","endLine":8,"endColumn":50},{"ruleId":"602","severity":1,"message":"612","line":8,"column":52,"nodeType":"604","messageId":"605","endLine":8,"endColumn":63},{"ruleId":"602","severity":1,"message":"613","line":9,"column":10,"nodeType":"604","messageId":"605","endLine":9,"endColumn":16},{"ruleId":"602","severity":1,"message":"637","line":3,"column":10,"nodeType":"604","messageId":"605","endLine":3,"endColumn":25},{"ruleId":"602","severity":1,"message":"622","line":4,"column":29,"nodeType":"604","messageId":"605","endLine":4,"endColumn":32},{"ruleId":"638","severity":1,"message":"639","line":155,"column":173,"nodeType":"634","endLine":155,"endColumn":264},{"ruleId":"602","severity":1,"message":"618","line":6,"column":10,"nodeType":"604","messageId":"605","endLine":6,"endColumn":15},{"ruleId":"602","severity":1,"message":"619","line":6,"column":17,"nodeType":"604","messageId":"605","endLine":6,"endColumn":21},{"ruleId":"602","severity":1,"message":"620","line":6,"column":23,"nodeType":"604","messageId":"605","endLine":6,"endColumn":29},{"ruleId":"602","severity":1,"message":"621","line":8,"column":10,"nodeType":"604","messageId":"605","endLine":8,"endColumn":16},{"ruleId":"602","severity":1,"message":"622","line":8,"column":18,"nodeType":"604","messageId":"605","endLine":8,"endColumn":21},{"ruleId":"602","severity":1,"message":"612","line":8,"column":23,"nodeType":"604","messageId":"605","endLine":8,"endColumn":34},{"ruleId":"602","severity":1,"message":"613","line":9,"column":10,"nodeType":"604","messageId":"605","endLine":9,"endColumn":16},{"ruleId":"602","severity":1,"message":"624","line":7,"column":10,"nodeType":"604","messageId":"605","endLine":7,"endColumn":19},{"ruleId":"602","severity":1,"message":"613","line":7,"column":21,"nodeType":"604","messageId":"605","endLine":7,"endColumn":27},{"ruleId":"602","severity":1,"message":"640","line":5,"column":8,"nodeType":"604","messageId":"605","endLine":5,"endColumn":29},{"ruleId":"602","severity":1,"message":"641","line":2,"column":8,"nodeType":"604","messageId":"605","endLine":2,"endColumn":34},{"ruleId":"602","severity":1,"message":"642","line":3,"column":8,"nodeType":"604","messageId":"605","endLine":3,"endColumn":32},{"ruleId":"602","severity":1,"message":"643","line":5,"column":10,"nodeType":"604","messageId":"605","endLine":5,"endColumn":19},{"ruleId":"602","severity":1,"message":"622","line":5,"column":21,"nodeType":"604","messageId":"605","endLine":5,"endColumn":24},{"ruleId":"602","severity":1,"message":"644","line":5,"column":26,"nodeType":"604","messageId":"605","endLine":5,"endColumn":33},{"ruleId":"602","severity":1,"message":"645","line":5,"column":35,"nodeType":"604","messageId":"605","endLine":5,"endColumn":43},{"ruleId":"602","severity":1,"message":"621","line":5,"column":45,"nodeType":"604","messageId":"605","endLine":5,"endColumn":51},{"ruleId":"602","severity":1,"message":"612","line":5,"column":53,"nodeType":"604","messageId":"605","endLine":5,"endColumn":64},{"ruleId":"602","severity":1,"message":"646","line":5,"column":66,"nodeType":"604","messageId":"605","endLine":5,"endColumn":74},{"ruleId":"602","severity":1,"message":"636","line":5,"column":93,"nodeType":"604","messageId":"605","endLine":5,"endColumn":97},{"ruleId":"602","severity":1,"message":"647","line":5,"column":99,"nodeType":"604","messageId":"605","endLine":5,"endColumn":112},{"ruleId":"602","severity":1,"message":"648","line":5,"column":129,"nodeType":"604","messageId":"605","endLine":5,"endColumn":140},{"ruleId":"602","severity":1,"message":"627","line":5,"column":142,"nodeType":"604","messageId":"605","endLine":5,"endColumn":145},{"ruleId":"602","severity":1,"message":"649","line":5,"column":152,"nodeType":"604","messageId":"605","endLine":5,"endColumn":156},{"ruleId":"602","severity":1,"message":"650","line":5,"column":158,"nodeType":"604","messageId":"605","endLine":5,"endColumn":163},{"ruleId":"602","severity":1,"message":"651","line":5,"column":165,"nodeType":"604","messageId":"605","endLine":5,"endColumn":174},{"ruleId":"602","severity":1,"message":"652","line":5,"column":176,"nodeType":"604","messageId":"605","endLine":5,"endColumn":187},{"ruleId":"653","severity":1,"message":"654","line":12,"column":59,"nodeType":"655","endLine":12,"endColumn":61,"suggestions":"656"},{"ruleId":"602","severity":1,"message":"657","line":2,"column":17,"nodeType":"604","messageId":"605","endLine":2,"endColumn":25},{"ruleId":"602","severity":1,"message":"658","line":4,"column":8,"nodeType":"604","messageId":"605","endLine":4,"endColumn":28},{"ruleId":"653","severity":1,"message":"659","line":20,"column":58,"nodeType":"655","endLine":20,"endColumn":60,"suggestions":"660"},{"ruleId":"661","severity":1,"message":"662","line":32,"column":15,"nodeType":"663","messageId":"617","endLine":32,"endColumn":17},{"ruleId":"661","severity":1,"message":"662","line":32,"column":32,"nodeType":"663","messageId":"617","endLine":32,"endColumn":34},{"ruleId":"602","severity":1,"message":"664","line":4,"column":10,"nodeType":"604","messageId":"605","endLine":4,"endColumn":16},{"ruleId":"653","severity":1,"message":"665","line":15,"column":63,"nodeType":"655","endLine":15,"endColumn":65,"suggestions":"666"},{"ruleId":"602","severity":1,"message":"667","line":69,"column":14,"nodeType":"604","messageId":"605","endLine":69,"endColumn":17},{"ruleId":"602","severity":1,"message":"668","line":72,"column":15,"nodeType":"604","messageId":"605","endLine":72,"endColumn":25},{"ruleId":"602","severity":1,"message":"613","line":2,"column":34,"nodeType":"604","messageId":"605","endLine":2,"endColumn":40},{"ruleId":"653","severity":1,"message":"669","line":12,"column":46,"nodeType":"655","endLine":12,"endColumn":48,"suggestions":"670"},{"ruleId":"602","severity":1,"message":"664","line":1,"column":9,"nodeType":"604","messageId":"605","endLine":1,"endColumn":15},{"ruleId":"653","severity":1,"message":"671","line":14,"column":56,"nodeType":"655","endLine":14,"endColumn":58,"suggestions":"672"},{"ruleId":"653","severity":1,"message":"673","line":15,"column":57,"nodeType":"655","endLine":15,"endColumn":59,"suggestions":"674"},{"ruleId":"608","replacedBy":"675"},{"ruleId":"610","replacedBy":"676"},{"ruleId":"653","severity":1,"message":"677","line":11,"column":67,"nodeType":"655","endLine":11,"endColumn":69,"suggestions":"678"},{"ruleId":"653","severity":1,"message":"679","line":12,"column":61,"nodeType":"655","endLine":12,"endColumn":63,"suggestions":"680"},{"ruleId":"602","severity":1,"message":"622","line":5,"column":14,"nodeType":"604","messageId":"605","endLine":5,"endColumn":17},{"ruleId":"602","severity":1,"message":"644","line":5,"column":19,"nodeType":"604","messageId":"605","endLine":5,"endColumn":26},{"ruleId":"602","severity":1,"message":"645","line":5,"column":28,"nodeType":"604","messageId":"605","endLine":5,"endColumn":36},{"ruleId":"602","severity":1,"message":"621","line":5,"column":38,"nodeType":"604","messageId":"605","endLine":5,"endColumn":44},{"ruleId":"602","severity":1,"message":"612","line":5,"column":46,"nodeType":"604","messageId":"605","endLine":5,"endColumn":57},{"ruleId":"602","severity":1,"message":"646","line":5,"column":59,"nodeType":"604","messageId":"605","endLine":5,"endColumn":67},{"ruleId":"602","severity":1,"message":"636","line":5,"column":86,"nodeType":"604","messageId":"605","endLine":5,"endColumn":90},{"ruleId":"602","severity":1,"message":"647","line":5,"column":92,"nodeType":"604","messageId":"605","endLine":5,"endColumn":105},{"ruleId":"602","severity":1,"message":"681","line":5,"column":115,"nodeType":"604","messageId":"605","endLine":5,"endColumn":120},{"ruleId":"602","severity":1,"message":"648","line":5,"column":122,"nodeType":"604","messageId":"605","endLine":5,"endColumn":133},{"ruleId":"602","severity":1,"message":"627","line":5,"column":135,"nodeType":"604","messageId":"605","endLine":5,"endColumn":138},{"ruleId":"602","severity":1,"message":"628","line":5,"column":140,"nodeType":"604","messageId":"605","endLine":5,"endColumn":143},{"ruleId":"602","severity":1,"message":"649","line":5,"column":145,"nodeType":"604","messageId":"605","endLine":5,"endColumn":149},{"ruleId":"602","severity":1,"message":"650","line":5,"column":151,"nodeType":"604","messageId":"605","endLine":5,"endColumn":156},{"ruleId":"602","severity":1,"message":"651","line":5,"column":158,"nodeType":"604","messageId":"605","endLine":5,"endColumn":167},{"ruleId":"602","severity":1,"message":"652","line":5,"column":169,"nodeType":"604","messageId":"605","endLine":5,"endColumn":180},{"ruleId":"602","severity":1,"message":"682","line":23,"column":8,"nodeType":"604","messageId":"605","endLine":23,"endColumn":14},{"ruleId":"602","severity":1,"message":"683","line":24,"column":8,"nodeType":"604","messageId":"605","endLine":24,"endColumn":20},{"ruleId":"602","severity":1,"message":"681","line":1,"column":16,"nodeType":"604","messageId":"605","endLine":1,"endColumn":21},{"ruleId":"661","severity":1,"message":"662","line":300,"column":32,"nodeType":"663","messageId":"617","endLine":300,"endColumn":34},{"ruleId":"661","severity":1,"message":"662","line":319,"column":31,"nodeType":"663","messageId":"617","endLine":319,"endColumn":33},{"ruleId":"661","severity":1,"message":"662","line":339,"column":31,"nodeType":"663","messageId":"617","endLine":339,"endColumn":33},{"ruleId":"653","severity":1,"message":"684","line":11,"column":69,"nodeType":"655","endLine":11,"endColumn":71,"suggestions":"685"},{"ruleId":"602","severity":1,"message":"664","line":2,"column":10,"nodeType":"604","messageId":"605","endLine":2,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":13,"column":58,"nodeType":"655","endLine":13,"endColumn":60,"suggestions":"687"},{"ruleId":"602","severity":1,"message":"642","line":3,"column":8,"nodeType":"604","messageId":"605","endLine":3,"endColumn":32},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":10,"column":15,"nodeType":"604","messageId":"605","endLine":10,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":13,"column":31,"nodeType":"663","messageId":"617","endLine":13,"endColumn":33},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"688","line":2,"column":8,"nodeType":"604","messageId":"605","endLine":2,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":7,"column":13,"nodeType":"604","messageId":"605","endLine":7,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":10,"column":15,"nodeType":"604","messageId":"605","endLine":10,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":14,"column":35,"nodeType":"663","messageId":"617","endLine":14,"endColumn":37},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"691","line":12,"column":41,"nodeType":"604","messageId":"605","endLine":12,"endColumn":44},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"661","severity":1,"message":"662","line":14,"column":31,"nodeType":"663","messageId":"617","endLine":14,"endColumn":33},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":9,"column":15,"nodeType":"604","messageId":"605","endLine":9,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":12,"column":30,"nodeType":"663","messageId":"617","endLine":12,"endColumn":32},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":9,"column":15,"nodeType":"604","messageId":"605","endLine":9,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":12,"column":35,"nodeType":"663","messageId":"617","endLine":12,"endColumn":37},{"ruleId":"602","severity":1,"message":"626","line":2,"column":51,"nodeType":"604","messageId":"605","endLine":2,"endColumn":60},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":10,"column":15,"nodeType":"604","messageId":"605","endLine":10,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":13,"column":31,"nodeType":"663","messageId":"617","endLine":13,"endColumn":33},{"ruleId":"602","severity":1,"message":"692","line":3,"column":8,"nodeType":"604","messageId":"605","endLine":3,"endColumn":24},{"ruleId":"602","severity":1,"message":"693","line":4,"column":8,"nodeType":"604","messageId":"605","endLine":4,"endColumn":25},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":10,"column":15,"nodeType":"604","messageId":"605","endLine":10,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":13,"column":31,"nodeType":"663","messageId":"617","endLine":13,"endColumn":33},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":10,"column":15,"nodeType":"604","messageId":"605","endLine":10,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":13,"column":31,"nodeType":"663","messageId":"617","endLine":13,"endColumn":33},{"ruleId":"602","severity":1,"message":"613","line":2,"column":34,"nodeType":"604","messageId":"605","endLine":2,"endColumn":40},{"ruleId":"653","severity":1,"message":"694","line":12,"column":55,"nodeType":"655","endLine":12,"endColumn":57,"suggestions":"695"},{"ruleId":"602","severity":1,"message":"664","line":1,"column":10,"nodeType":"604","messageId":"605","endLine":1,"endColumn":16},{"ruleId":"653","severity":1,"message":"696","line":13,"column":58,"nodeType":"655","endLine":13,"endColumn":60,"suggestions":"697"},{"ruleId":"602","severity":1,"message":"664","line":1,"column":10,"nodeType":"604","messageId":"605","endLine":1,"endColumn":16},{"ruleId":"602","severity":1,"message":"698","line":3,"column":42,"nodeType":"604","messageId":"605","endLine":3,"endColumn":47},{"ruleId":"653","severity":1,"message":"699","line":16,"column":63,"nodeType":"655","endLine":16,"endColumn":65,"suggestions":"700"},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":7,"column":13,"nodeType":"604","messageId":"605","endLine":7,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":10,"column":15,"nodeType":"604","messageId":"605","endLine":10,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":13,"column":31,"nodeType":"663","messageId":"617","endLine":13,"endColumn":33},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"688","line":2,"column":8,"nodeType":"604","messageId":"605","endLine":2,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":7,"column":13,"nodeType":"604","messageId":"605","endLine":7,"endColumn":19},{"ruleId":"661","severity":1,"message":"662","line":15,"column":31,"nodeType":"663","messageId":"617","endLine":15,"endColumn":33},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"701","line":3,"column":8,"nodeType":"604","messageId":"605","endLine":3,"endColumn":23},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"661","severity":1,"message":"662","line":14,"column":31,"nodeType":"663","messageId":"617","endLine":14,"endColumn":33},{"ruleId":"602","severity":1,"message":"664","line":1,"column":10,"nodeType":"604","messageId":"605","endLine":1,"endColumn":16},{"ruleId":"602","severity":1,"message":"698","line":3,"column":42,"nodeType":"604","messageId":"605","endLine":3,"endColumn":47},{"ruleId":"653","severity":1,"message":"702","line":13,"column":61,"nodeType":"655","endLine":13,"endColumn":63,"suggestions":"703"},{"ruleId":"602","severity":1,"message":"688","line":2,"column":8,"nodeType":"604","messageId":"605","endLine":2,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":7,"column":13,"nodeType":"604","messageId":"605","endLine":7,"endColumn":19},{"ruleId":"661","severity":1,"message":"662","line":15,"column":31,"nodeType":"663","messageId":"617","endLine":15,"endColumn":33},{"ruleId":"602","severity":1,"message":"613","line":3,"column":34,"nodeType":"604","messageId":"605","endLine":3,"endColumn":40},{"ruleId":"653","severity":1,"message":"704","line":14,"column":48,"nodeType":"655","endLine":14,"endColumn":50,"suggestions":"705"},{"ruleId":"602","severity":1,"message":"664","line":1,"column":10,"nodeType":"604","messageId":"605","endLine":1,"endColumn":16},{"ruleId":"602","severity":1,"message":"698","line":3,"column":42,"nodeType":"604","messageId":"605","endLine":3,"endColumn":47},{"ruleId":"653","severity":1,"message":"706","line":13,"column":56,"nodeType":"655","endLine":13,"endColumn":58,"suggestions":"707"},{"ruleId":"602","severity":1,"message":"688","line":1,"column":8,"nodeType":"604","messageId":"605","endLine":1,"endColumn":13},{"ruleId":"602","severity":1,"message":"689","line":6,"column":13,"nodeType":"604","messageId":"605","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"690","line":11,"column":15,"nodeType":"604","messageId":"605","endLine":11,"endColumn":29},{"ruleId":"661","severity":1,"message":"662","line":14,"column":31,"nodeType":"663","messageId":"617","endLine":14,"endColumn":33},{"ruleId":"602","severity":1,"message":"664","line":1,"column":10,"nodeType":"604","messageId":"605","endLine":1,"endColumn":16},{"ruleId":"653","severity":1,"message":"708","line":17,"column":53,"nodeType":"655","endLine":17,"endColumn":55,"suggestions":"709"},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'MDBTimePicker' is defined but never used.","'MDBCol' is defined but never used.","no-native-reassign",["710"],"no-negated-in-lhs",["711"],"'NavDropdown' is defined but never used.","'Button' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Carousel' is defined but never used.","'Jumbotron' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Tab' is defined but never used.","'Tabs' is defined but never used.","'getAllByAltText' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'ViewACandidateForTech' is defined but never used.","'techInterviewScheduleAdmin' is defined but never used.","'hrInterviewScheduleAdmin' is defined but never used.","'HelpBlock' is defined but never used.","'Spinner' is defined but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'ButtonToolbar' is defined but never used.","'ButtonGroup' is defined but never used.","'Grid' is defined but never used.","'Panel' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'CancelInterviewAction_Function'. Either include it or remove the dependency array.","ArrayExpression",["712"],"'useState' is defined but never used.","'SearchEmployeeAction' is defined but never used.","React Hook React.useEffect has a missing dependency: 'AddPanelMemberAction_Function'. Either include it or remove the dependency array.",["713"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'render' is defined but never used.","React Hook React.useEffect has a missing dependency: 'DeletePanelMemberAction_Function'. Either include it or remove the dependency array.",["714"],"'Box' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'PanelMemberList'. Either include it or remove the dependency array.",["715"],"React Hook React.useEffect has a missing dependency: 'GiveHrRatingAction_Function'. Either include it or remove the dependency array.",["716"],"React Hook React.useEffect has a missing dependency: 'ShowListForHrAction_Function'. Either include it or remove the dependency array.",["717"],["710"],["711"],"React Hook React.useEffect has a missing dependency: 'UpdateInterviewScheduleAction_Function'. Either include it or remove the dependency array.",["718"],"React Hook React.useEffect has a missing dependency: 'CancelHRInterviewAction_Function'. Either include it or remove the dependency array.",["719"],"'Table' is defined but never used.","'filter' is assigned a value but never used.","'initialState' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'UpdateHRInterviewScheduleAction_Function'. Either include it or remove the dependency array.",["720"],"React Hook React.useEffect has a missing dependency: 'SearchEmployeeAction_Function'. Either include it or remove the dependency array.",["721"],"'axios' is defined but never used.","'onLoad' is assigned a value but never used.","'serverResponse' is assigned a value but never used.","'err' is assigned a value but never used.","'ShowPanelMembers' is defined but never used.","'DeletePanelMember' is defined but never used.","React Hook React.useEffect has a missing dependency: 'InterviewMemberForTechList'. Either include it or remove the dependency array.",["722"],"React Hook React.useEffect has a missing dependency: 'GiveTechRatingAction_Function'. Either include it or remove the dependency array.",["723"],"'Modal' is defined but never used.","React Hook React.useEffect has a missing dependency: 'ViewaCandidateForHRAction_Function'. Either include it or remove the dependency array.",["724"],"'SearchCandidate' is defined but never used.","React Hook React.useEffect has a missing dependency: 'ViewaCandidateForTechAction_Func'. Either include it or remove the dependency array.",["725"],"React Hook React.useEffect has a missing dependency: 'InterviewMemberList'. Either include it or remove the dependency array.",["726"],"React Hook React.useEffect has a missing dependency: 'SurrenderAsATechAction_Func'. Either include it or remove the dependency array.",["727"],"React Hook React.useEffect has a missing dependency: 'SurrenderAsHRAction_Func'. Either include it or remove the dependency array.",["728"],"no-global-assign","no-unsafe-negation",{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},"Update the dependencies array to be: [CancelInterviewAction_Function]",{"range":"763","text":"764"},"Update the dependencies array to be: [AddPanelMemberAction_Function]",{"range":"765","text":"766"},"Update the dependencies array to be: [DeletePanelMemberAction_Function]",{"range":"767","text":"768"},"Update the dependencies array to be: [PanelMemberList]",{"range":"769","text":"770"},"Update the dependencies array to be: [GiveHrRatingAction_Function]",{"range":"771","text":"772"},"Update the dependencies array to be: [ShowListForHrAction_Function]",{"range":"773","text":"774"},"Update the dependencies array to be: [UpdateInterviewScheduleAction_Function]",{"range":"775","text":"776"},"Update the dependencies array to be: [CancelHRInterviewAction_Function]",{"range":"777","text":"778"},"Update the dependencies array to be: [UpdateHRInterviewScheduleAction_Function]",{"range":"779","text":"780"},"Update the dependencies array to be: [SearchEmployeeAction_Function]",{"range":"781","text":"782"},"Update the dependencies array to be: [InterviewMemberForTechList]",{"range":"783","text":"784"},"Update the dependencies array to be: [GiveTechRatingAction_Function]",{"range":"785","text":"786"},"Update the dependencies array to be: [ViewaCandidateForHRAction_Function]",{"range":"787","text":"788"},"Update the dependencies array to be: [ViewaCandidateForTechAction_Func]",{"range":"789","text":"790"},"Update the dependencies array to be: [InterviewMemberList]",{"range":"791","text":"792"},"Update the dependencies array to be: [SurrenderAsATechAction_Func]",{"range":"793","text":"794"},"Update the dependencies array to be: [SurrenderAsHRAction_Func]",{"range":"795","text":"796"},[486,488],"[CancelInterviewAction_Function]",[777,779],"[AddPanelMemberAction_Function]",[575,577],"[DeletePanelMemberAction_Function]",[461,463],"[PanelMemberList]",[560,562],"[GiveHrRatingAction_Function]",[609,611],"[ShowListForHrAction_Function]",[493,495],"[UpdateInterviewScheduleAction_Function]",[492,494],"[CancelHRInterviewAction_Function]",[503,505],"[UpdateHRInterviewScheduleAction_Function]",[544,546],"[SearchEmployeeAction_Function]",[502,504],"[InterviewMemberForTechList]",[571,573],"[GiveTechRatingAction_Function]",[561,563],"[ViewaCandidateForHRAction_Function]",[568,570],"[ViewaCandidateForTechAction_Func]",[558,560],"[InterviewMemberList]",[564,566],"[SurrenderAsATechAction_Func]",[546,548],"[SurrenderAsHRAction_Func]"]