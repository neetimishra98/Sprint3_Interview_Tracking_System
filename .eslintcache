[{"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\index.js":"1","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reportWebVitals.js":"2","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\App.js":"3","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminPanelMemberReducer.js":"4","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminEmployeeReducer.js":"5","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminCandidateReducer.js":"6","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminInterviewReducer.js":"7","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\techreducer.js":"8","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\hrReducer.js":"9","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\homeadmin.js":"10","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\homehr.js":"11","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\hometech.js":"12","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\about.js":"13","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\home.js":"14","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\admin.js":"15","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\tech.js":"16","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\hr.js":"17","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\CandidateForTech.js":"18","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\CandidateForHR.js":"19","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\employee\\EmployeeForAdmin.js":"20","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\CandidateForAdmin.js":"21","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js":"22","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js":"23","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\PanelMemberForAdmin.js":"24","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\PanelMemberForTech.js":"25","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\PanelMemberForHR.js":"26","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js":"27","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js":"28","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js":"29","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js":"30","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js":"31","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js":"32","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js":"33","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js":"34","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js":"35","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\services\\showpanelmember.js":"36","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\services\\deletepanelmember.js":"37","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\techservices\\surrendertechpanel.js":"38","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\services\\addpanelmember.js":"39","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrservices\\viewinterviewmemberhr.js":"40","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js":"41","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js":"42","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\adminservices\\addCandidate.js":"43","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\techservices\\viewtechcandidate.js":"44","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\adminservices\\viewCandidate.js":"45","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\services\\viewallinterviewmembersfortech.js":"46","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\employee\\services\\searchemployee.js":"47","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\hrservices\\viewhrcandidate.js":"48","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\services\\givetechrating.js":"49","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js":"50","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\hrservices\\surrenderashr.js":"51","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\InterviewScheduler.js":"52","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\hrInterviewScheduler.js":"53","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\get_candidates.js":"54","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\get_panel.js":"55","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\add_techinterview.js":"56","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\cancelinterview_action.js":"57","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\add_hrinterview.js":"58","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\cancelhrinterview_action.js":"59","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\updatehrinterviewschedule_action.js":"60","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\updateinterviewschedule_action.js":"61","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\showinterviewmembers_action.js":"62","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\showlistforhr_action.js":"63","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js":"64","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\givetechratingaction.js":"65","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\viewallinterviewmembersaction.js":"66","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\surrender_as_hr.js":"67","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctQualificationAction.js":"68","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctNameAction.js":"69","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\view_a_cand_tech_action.js":"70","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\employee\\searchemployee_action.js":"71","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\view_a_cand_hr.js":"72","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js":"73","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js":"74","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctLocationAction.js":"75","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js":"76","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctDesignationAction.js":"77","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctPrimarySkillAction.js":"78","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByNameAction.js":"79","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\Candidate.js":"80","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js":"81","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js":"82","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js":"83","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js":"84","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getLocationsAction.js":"85","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByAllAction.js":"86","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js":"87","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\addCandidateAction.js":"88","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\givehrrating_action.js":"89","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\addpanelmember_action.js":"90","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\surrender_as_tech_action.js":"91","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\deletepanelmember_action.js":"92","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\showpanelmembers_action.js":"93","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\getCandidatesFromTechAction.js":"94","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\loginReducer.js":"95","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\MultiLogin.js":"96","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\Login.js":"97","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\loginAction.js":"98"},{"size":1869,"mtime":1610900812634,"results":"99","hashOfConfig":"100"},{"size":375,"mtime":1610781308000,"results":"101","hashOfConfig":"100"},{"size":2718,"mtime":1610901172814,"results":"102","hashOfConfig":"100"},{"size":1013,"mtime":1610781308000,"results":"103","hashOfConfig":"100"},{"size":446,"mtime":1610781308000,"results":"104","hashOfConfig":"100"},{"size":1647,"mtime":1610900831684,"results":"105","hashOfConfig":"100"},{"size":1351,"mtime":1610889438911,"results":"106","hashOfConfig":"100"},{"size":1445,"mtime":1610781308000,"results":"107","hashOfConfig":"100"},{"size":1706,"mtime":1610781308000,"results":"108","hashOfConfig":"100"},{"size":500,"mtime":1610781308000,"results":"109","hashOfConfig":"100"},{"size":563,"mtime":1610781308000,"results":"110","hashOfConfig":"100"},{"size":629,"mtime":1610781308000,"results":"111","hashOfConfig":"100"},{"size":7838,"mtime":1610897265331,"results":"112","hashOfConfig":"100"},{"size":4746,"mtime":1610900736811,"results":"113","hashOfConfig":"100"},{"size":1556,"mtime":1610789784000,"results":"114","hashOfConfig":"100"},{"size":1292,"mtime":1610781308000,"results":"115","hashOfConfig":"100"},{"size":1222,"mtime":1610781308000,"results":"116","hashOfConfig":"100"},{"size":1346,"mtime":1610781308000,"results":"117","hashOfConfig":"100"},{"size":1226,"mtime":1610781308000,"results":"118","hashOfConfig":"100"},{"size":1344,"mtime":1610781308000,"results":"119","hashOfConfig":"100"},{"size":2118,"mtime":1610781308000,"results":"120","hashOfConfig":"100"},{"size":5476,"mtime":1610791210000,"results":"121","hashOfConfig":"100"},{"size":2730,"mtime":1610781308000,"results":"122","hashOfConfig":"100"},{"size":3105,"mtime":1610781308000,"results":"123","hashOfConfig":"100"},{"size":1260,"mtime":1610781308000,"results":"124","hashOfConfig":"100"},{"size":1360,"mtime":1610781308000,"results":"125","hashOfConfig":"100"},{"size":2372,"mtime":1610781308000,"results":"126","hashOfConfig":"100"},{"size":3239,"mtime":1610781308000,"results":"127","hashOfConfig":"100"},{"size":3211,"mtime":1610781308000,"results":"128","hashOfConfig":"100"},{"size":8777,"mtime":1610892162844,"results":"129","hashOfConfig":"100"},{"size":9928,"mtime":1610793898000,"results":"130","hashOfConfig":"100"},{"size":2276,"mtime":1610781308000,"results":"131","hashOfConfig":"100"},{"size":1621,"mtime":1610781308000,"results":"132","hashOfConfig":"100"},{"size":3481,"mtime":1610781308000,"results":"133","hashOfConfig":"100"},{"size":3511,"mtime":1610781308000,"results":"134","hashOfConfig":"100"},{"size":2695,"mtime":1610822273578,"results":"135","hashOfConfig":"100"},{"size":4095,"mtime":1610781308000,"results":"136","hashOfConfig":"100"},{"size":3720,"mtime":1610781308000,"results":"137","hashOfConfig":"100"},{"size":7618,"mtime":1610781308000,"results":"138","hashOfConfig":"100"},{"size":2802,"mtime":1610781308000,"results":"139","hashOfConfig":"100"},{"size":4212,"mtime":1610781308000,"results":"140","hashOfConfig":"100"},{"size":4270,"mtime":1610781308000,"results":"141","hashOfConfig":"100"},{"size":12536,"mtime":1610794140000,"results":"142","hashOfConfig":"100"},{"size":4401,"mtime":1610781308000,"results":"143","hashOfConfig":"100"},{"size":9165,"mtime":1610781308000,"results":"144","hashOfConfig":"100"},{"size":2830,"mtime":1610781308000,"results":"145","hashOfConfig":"100"},{"size":3393,"mtime":1610781308000,"results":"146","hashOfConfig":"100"},{"size":4339,"mtime":1610781308000,"results":"147","hashOfConfig":"100"},{"size":4172,"mtime":1610781308000,"results":"148","hashOfConfig":"100"},{"size":4364,"mtime":1610781308000,"results":"149","hashOfConfig":"100"},{"size":3747,"mtime":1610781308000,"results":"150","hashOfConfig":"100"},{"size":454,"mtime":1610781308000,"results":"151","hashOfConfig":"100"},{"size":448,"mtime":1610781308000,"results":"152","hashOfConfig":"100"},{"size":385,"mtime":1610888855372,"results":"153","hashOfConfig":"100"},{"size":368,"mtime":1610781308000,"results":"154","hashOfConfig":"100"},{"size":2134,"mtime":1610781308000,"results":"155","hashOfConfig":"100"},{"size":777,"mtime":1610781308000,"results":"156","hashOfConfig":"100"},{"size":1948,"mtime":1610781308000,"results":"157","hashOfConfig":"100"},{"size":789,"mtime":1610781828000,"results":"158","hashOfConfig":"100"},{"size":799,"mtime":1610781308000,"results":"159","hashOfConfig":"100"},{"size":787,"mtime":1610781308000,"results":"160","hashOfConfig":"100"},{"size":695,"mtime":1610781840000,"results":"161","hashOfConfig":"100"},{"size":757,"mtime":1610788226000,"results":"162","hashOfConfig":"100"},{"size":796,"mtime":1610781776000,"results":"163","hashOfConfig":"100"},{"size":749,"mtime":1610781844000,"results":"164","hashOfConfig":"100"},{"size":726,"mtime":1610781838000,"results":"165","hashOfConfig":"100"},{"size":846,"mtime":1610781308000,"results":"166","hashOfConfig":"100"},{"size":364,"mtime":1610781308000,"results":"167","hashOfConfig":"100"},{"size":336,"mtime":1610781308000,"results":"168","hashOfConfig":"100"},{"size":842,"mtime":1610781308000,"results":"169","hashOfConfig":"100"},{"size":797,"mtime":1610781308000,"results":"170","hashOfConfig":"100"},{"size":872,"mtime":1610781308000,"results":"171","hashOfConfig":"100"},{"size":370,"mtime":1610781308000,"results":"172","hashOfConfig":"100"},{"size":369,"mtime":1610781308000,"results":"173","hashOfConfig":"100"},{"size":348,"mtime":1610781308000,"results":"174","hashOfConfig":"100"},{"size":348,"mtime":1610781308000,"results":"175","hashOfConfig":"100"},{"size":357,"mtime":1610781308000,"results":"176","hashOfConfig":"100"},{"size":360,"mtime":1610781308000,"results":"177","hashOfConfig":"100"},{"size":351,"mtime":1610781308000,"results":"178","hashOfConfig":"100"},{"size":500,"mtime":1610781308000,"results":"179","hashOfConfig":"100"},{"size":339,"mtime":1610781308000,"results":"180","hashOfConfig":"100"},{"size":360,"mtime":1610781308000,"results":"181","hashOfConfig":"100"},{"size":340,"mtime":1610781308000,"results":"182","hashOfConfig":"100"},{"size":334,"mtime":1610781308000,"results":"183","hashOfConfig":"100"},{"size":329,"mtime":1610781308000,"results":"184","hashOfConfig":"100"},{"size":317,"mtime":1610781308000,"results":"185","hashOfConfig":"100"},{"size":336,"mtime":1610781308000,"results":"186","hashOfConfig":"100"},{"size":1089,"mtime":1610781308000,"results":"187","hashOfConfig":"100"},{"size":764,"mtime":1610781848000,"results":"188","hashOfConfig":"100"},{"size":1122,"mtime":1610877925932,"results":"189","hashOfConfig":"100"},{"size":761,"mtime":1610781702000,"results":"190","hashOfConfig":"100"},{"size":803,"mtime":1610781308000,"results":"191","hashOfConfig":"100"},{"size":647,"mtime":1610781308000,"results":"192","hashOfConfig":"100"},{"size":418,"mtime":1610889387756,"results":"193","hashOfConfig":"100"},{"size":373,"mtime":1610893938608,"results":"194","hashOfConfig":"100"},{"size":3717,"mtime":1610900848140,"results":"195","hashOfConfig":"100"},{"size":206,"mtime":1610803980000,"results":"196","hashOfConfig":"100"},{"size":781,"mtime":1610894039602,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vi2fvk",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"202"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"202"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"202"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"202"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"202"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"202"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"202"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"202"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"202"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"202"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"202"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"202"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"202"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"202"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"202"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"202"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"202"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"202"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"202"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"202"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"202"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"202"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"202"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"202"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"202"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"202"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"202"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"202"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"202"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"202"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"202"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"202"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"202"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"202"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"202"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"202"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"202"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"202"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"202"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"202"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"202"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"202"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"202"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"202"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"202"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"202"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"202"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"202"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"202"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"202"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"202"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\index.js",["446","447","448"],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reportWebVitals.js",[],["449","450"],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\App.js",["451","452","453"],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminPanelMemberReducer.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminEmployeeReducer.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminCandidateReducer.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\adminInterviewReducer.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\techreducer.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\hrReducer.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\homeadmin.js",["454","455","456","457","458","459","460"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport AdminComponent from './admin';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\n\r\nconst HomeAdminComponent = () => {\r\n    return (\r\n        <div>\r\n        \r\n            <AdminComponent></AdminComponent>\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeAdminComponent;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\homehr.js",["461","462","463","464","465","466","467"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport HRComponent from './hr';\r\n\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\n\r\nconst HomeHRComponent = () => {\r\n    return (\r\n        <div>\r\n            {/* Some Logic To Check If User Logged In Is Admin Or A Panel Member.... */}\r\n            <HRComponent></HRComponent>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeHRComponent;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\hometech.js",["468","469","470","471","472","473","474","475","476","477","478"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport TechComponent from './tech';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport {Tab,Tabs,Jumbotron,Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst HomeTechComponent = () => {\r\n    return (\r\n        <div>\r\n            \r\n                        \r\n           \r\n                    <TechComponent></TechComponent>\r\n            \r\n                    \r\n                \r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeTechComponent;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\about.js",["479","480","481"],"//About Us Component : CHECK WARNING.info FOR NOTES.....\r\n  \r\nimport { getAllByAltText } from '@testing-library/react';\r\nimport { Jumbotron, Button, Nav, Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst AboutUsComponent = () => {\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <Jumbotron style={{textAlign:\"left\", backgroundColor:'rgba(15,15,15,0.5)', filter: 'blur(10)', color: 'white', marginLeft: 10, marginRight: 10}}>\r\n                <h1><b><i>Interview Tracking App</i></b></h1>\r\n                <p>\r\n                    This is a service for tracking interview schedules in an organization, a simple project done by a team from Capgemini as a part of\r\n                    their training. ITS provides services that connect to RESTful APIs which handle with data from a postgre database with mock data. \r\n                    There are services for Admin and Panel Members who need to login to access the same. Employees, Panel Members and Candidate details can be operated on with these services.\r\n                </p>\r\n                <p>\r\n                    <Button variant=\"dark\" href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">Check code on Github</Button>\r\n                </p>\r\n            </Jumbotron>\r\n            <br></br>\r\n            <h1 style={{backgroundColor:'rgba(15,15,15,0.5)', color:\"white\"}}><b><i>Our Team</i></b></h1>\r\n            <br></br>\r\n            {/* MEMBERS */}\r\n            <Container>\r\n                <Row md={3}>\r\n                    {/* MEMBER IS FROM COL TO COL TAG.... */}\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Rutuja Patil</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Neeti Mishra</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Meetali Patidar</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Shrishti Singh</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Sneha Chitale</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Prasanna Mandapalli</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Priyanka Yadav</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Suraj Vijaykumar Mandal</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Yash Sandeep Kadam</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"https://www.linkedin.com/in/yash-kadam/\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <br></br>\r\n\r\n            <div style={{background: \"#151515\", color: \"#CECECE\", textAlign:\"left\", margin: 0}}>Content owned by the team of above mentioned individuals. Code available on <a href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">github</a>.</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutUsComponent;\r\n\r\n\r\n\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\home.js",["482","483","484","485","486","487","488","489"],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\admin.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\tech.js",["490"],"\r\n//import CandidateForTech from './candidate/CandidateForTech'\r\nimport InterviewSchedulerForTech from './interviewscheduler/InterviewSchedulerForTech'\r\nimport PanelMemberForTech from './panelmember/PanelMemberForTech'\r\nimport ViewACandidateForTech from './candidate/CandidateForTech';\r\n// Bootstrap\r\nimport CandidateForTech from './candidate/CandidateForTech'\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\n\r\nconst TechComponent = () => {\r\n    return (\r\n        <div style={{ backgroundColor: \"navy\" }}>\r\n            <br></br>\r\n            <h1 style={{ color: \"white\" }}><b><i>TECHNICAL SERVICES</i></b></h1>\r\n            <br></br>\r\n\r\n            <Tabs defaultActiveKey=\"Home\" id=\"uncontrolled-tab-example\" variant=\"pills\">\r\n                <Tab eventKey=\"InterviewSchedulerView\" title=\"Interview Scheduler\" >\r\n                    <InterviewSchedulerForTech></InterviewSchedulerForTech>\r\n                </Tab>\r\n                <Tab eventKey=\"Candidate\" title=\"Candidate\" >\r\n                <CandidateForTech></CandidateForTech>\r\n                </Tab>\r\n                <Tab eventKey=\"Panel Member\" title=\"Panel Member\">\r\n                <PanelMemberForTech></PanelMemberForTech>\r\n\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default TechComponent;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\hr.js",["491","492"],"import PanelMemberForHR from './panelmember/PanelMemberForHR'\r\nimport SearchCandidate from './candidate/CandidateForHR';\r\nimport InterviewSchedulerForHr from './interviewscheduler/InterviewSchedulerForHr';\r\n\r\n\r\n\r\nimport { Jumbotron, Button, Tab, Tabs } from 'react-bootstrap'\r\n\r\nconst HRComponent = () => {\r\n    return (\r\n        <div style={{ backgroundColor: \"navy\"}}>\r\n            <br></br>\r\n            <h1 style={{color: \"white\"}}><b><i>HR Panel Member Services</i></b></h1>\r\n            <br></br>\r\n\r\n            <Tabs defaultActiveKey=\"Home\"  id=\"uncontrolled-tab-example\" variant=\"pills\">\r\n\r\n                <Tab eventKey=\"InterviewSchedulerView\"title=\"View Interview Members\" >\r\n                    <InterviewSchedulerForHr></InterviewSchedulerForHr>\r\n                </Tab>\r\n                <Tab eventKey=\"Candidate\" title=\"Candidate Details\">\r\n                    <SearchCandidate></SearchCandidate></Tab>\r\n                <Tab eventKey=\"PanelMember\" title=\"Surrender As Panel\">\r\n                    <PanelMemberForHR></PanelMemberForHR>\r\n                </Tab>\r\n                \r\n            \r\n                \r\n                \r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HRComponent;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\CandidateForTech.js",["493"],"//Employee Services Accessible By The Admin....\r\n\r\nimport SearchCandidate from './hrservices/viewhrcandidate'\r\nimport ViewACandidateForTech from './techservices/viewtechcandidate'\r\nimport {Row, Col,Accordion, Card, Button } from 'react-bootstrap'\r\n//import CancelInterview from './services/cancelinterview.js'\r\n\r\nconst CandidateForTech = () => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Card>\r\n                <Accordion>\r\n                    <table className=\"marginLeft\">\r\n                        <Col className=\"align-items-center\">\r\n                            <Row>\r\n                                <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"32\"> \r\n                                    <center>View a Candidate</center>\r\n                                </Accordion.Toggle>\r\n                                \r\n                                <Accordion.Collapse eventKey=\"32\">\r\n                                <Card.Body class=\"bg-custom\"><ViewACandidateForTech></ViewACandidateForTech></Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Row>\r\n                        </Col>\r\n                    </table>\r\n                </Accordion>\r\n            </Card>\r\n        </div>\r\n    );\r\n    }\r\nexport default CandidateForTech;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\CandidateForHR.js",["494"],"import SearchCandidate from './hrservices/viewhrcandidate'\r\nimport {Accordion, Card, Button, Row, Col, table, Container} from 'react-bootstrap'\r\n//import CancelInterview from './services/cancelinterview.js'\r\n\r\nconst CandidateForHR = (props) => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Card>\r\n                <Accordion>\r\n                    <table className=\"marginLeft\">\r\n                        <Col className=\"align-items-center\">\r\n                            <Row>\r\n                                <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\"> \r\n                                    <center>View a Candidate</center>\r\n                                </Accordion.Toggle>\r\n                                \r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body class=\"bg-custom\"><SearchCandidate></SearchCandidate></Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Row>\r\n                        </Col>\r\n                    </table>\r\n                </Accordion>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CandidateForHR;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\employee\\EmployeeForAdmin.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\CandidateForAdmin.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js",["495","496"],"//Interview Services Accessible By The Admin....\r\nimport techInterviewScheduleAdmin from '../interviewscheduler/techInterviewScheduleAdmin';\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport HRShareandschedule from './adminhrServices/hrshareandschedule.js';\r\nimport HRCancelInterview from './adminhrServices/hrcancelinterview.js'\r\nimport HRUpdateInterview from \"./adminhrServices/hrupdatescheduleinterview\";\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\n\r\nimport { Row,Col,Container,Accordion, Card, Button } from 'react-bootstrap';\r\n\r\n//for normal image.\r\n//<img src=\"logo.jpg\" alt=\"pic\" />\r\n//  backgroundImage: \"url(/img/logo.png)\"\r\n\r\nconst InterviewSchedulerForAdmin = () => {\r\n \r\n\r\nreturn (\r\n  <div>\r\n \r\n      <Container className=\"mr-5\">\r\n      <card>\r\n      {/* All underlying operations from services */}\r\n      <Accordion>\r\n          \r\n         <table className=\"marginLeft\">\r\n         <Col className=\"align-items-center\">\r\n                   <Row>\r\n                  <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\">\r\n                      <center><h2><i>TECHNICAL INTERVIEW</i></h2></center>\r\n              </Accordion.Toggle>\r\n             \r\n              <Accordion.Collapse eventKey=\"0\">\r\n                  {/* Add Candidate component */}\r\n                  <Card.Body class=\"bg-custom\">\r\n                    <TechShareandschedule></TechShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <TechUpdateInterview></TechUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"2\">\r\n                        Cancel technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <TechCancelInterview></TechCancelInterview>\r\n\r\n                   </Card.Body>\r\n                  {/* Add an Candidate component */}\r\n              </Accordion.Collapse>\r\n              </Row>\r\n              <Row>\r\n              <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"1\">\r\n              <center><h2><i> HR INTERVIEW</i></h2></center>\r\n              </Accordion.Toggle>\r\n         \r\n          <Accordion.Collapse eventKey=\"1\">\r\n              {/* View Candidate component */}\r\n              <Card.Body class=\"bg-custom\">\r\n                    <HRShareandschedule></HRShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <HRUpdateInterview></HRUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                       Cancel HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <HRCancelInterview></HRCancelInterview>\r\n\r\n                   </Card.Body>\r\n              {/* View an Candidate component */}\r\n          </Accordion.Collapse>\r\n          </Row>\r\n        \r\n          </Col>\r\n          </table>\r\n      </Accordion>\r\n      </card>\r\n      </Container>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default InterviewSchedulerForAdmin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n   <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                       TECHNICAL INTERVIEW\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"3\">\r\n                  \r\n                    <Card.Body>\r\n\r\n                    \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                  \r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n               \r\n\r\n                \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                   \r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n             \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                \r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n            \r\n                    </Card.Body>\r\n                   \r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                */\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\PanelMemberForAdmin.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\PanelMemberForTech.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\PanelMemberForHR.js",["497","498"],"//Panel Services Accessible By The Admin....\r\nimport SurrenderAsHRPanel from './hrservices/surrenderashr'\r\nimport ShowPanelMembers from './services/showpanelmember'\r\nimport DeletePanelMember from './services/deletepanelmember'\r\n\r\nimport { Col,Row,Accordion, Card, Button } from 'react-bootstrap'\r\n\r\nconst PanelMemberForHR = (props) => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Card>\r\n                <Accordion>\r\n                    <table className=\"marginLeft\">\r\n                        <Col className=\"align-items-center\">\r\n                            <Row>\r\n                                <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\"> \r\n                                    <center>Surrender As HR Panel</center>\r\n                                </Accordion.Toggle>\r\n                                \r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                            \r\n                                <Card.Body class=\"bg-custom\"><SurrenderAsHRPanel></SurrenderAsHRPanel></Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Row>\r\n                        </Col>\r\n                    </table>\r\n                </Accordion>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PanelMemberForHR;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js",["499"],"import React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CancelHRInterviewAction from '../../../actions/interviewscheduler/cancelhrinterview_action';\r\n\r\n\r\nconst HRCancelInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let hrinterview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>CancelHRInterviewAction_Function(), [])\r\n        const CancelHRInterviewAction_Function = () => {\r\n            dispatcher(CancelHRInterviewAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"paths\").value;\r\n        console.log(pathVar);\r\n        dispatcher(CancelHRInterviewAction(pathVar));\r\n        renderData(hrinterview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Cancel</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"paths\"/>\r\n                        </Form.Group>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Cancel\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(hrinterview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertInterviewNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n                Interview with the mentioned id was not found.\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(hrinterview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", hrinterview);\r\n        if(hrinterview!==undefined && hrinterview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                       \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {/*<td>{interview.data.interviewid}</td>*/}\r\n                       \r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            );\r\n        }\r\n        if(hrinterview!==undefined && hrinterview===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertInterviewNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default HRCancelInterview;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js",["500"],"import React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CancelInterviewAction from '../../../actions/interviewscheduler/cancelinterview_action';\r\n\r\n\r\nconst TechCancelInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let interview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>CancelInterviewAction_Function(), [])\r\n        const CancelInterviewAction_Function = () => {\r\n            dispatcher(CancelInterviewAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"path\").value;\r\n        console.log(pathVar);\r\n        dispatcher(CancelInterviewAction(pathVar));\r\n        renderData(interview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Cancel</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"path\"/>\r\n                        </Form.Group>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Cancel\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(interview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertInterviewNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n                Interview with the mentioned id was not found.\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(interview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", interview);\r\n        if(interview!==undefined && interview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                       \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {/*<td>{interview.data.interviewid}</td>*/}\r\n                       \r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            );\r\n        }\r\n        if(interview!==undefined && interview===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertInterviewNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default TechCancelInterview;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js",["501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516"],"import React from 'react';\r\n    //import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n    //import React, { Component } from \"react\";\r\n    //import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\n    import { Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\n    import { useSelector, useDispatch } from 'react-redux';\r\n    import { useHistory } from \"react-router-dom\";\r\n    \r\n    import addHRInterviewAction from '../../../actions/interviewscheduler/add_hrinterview';\r\n    import hrInterviewScheduler from '../../../models/hrInterviewScheduler';\r\n    import showtechcandidatesAction from '../../../actions/interviewscheduler/getCandidatesFromTechAction'\r\n    import showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n    \r\n    \r\n    let dispatch;\r\n    let history;\r\n    let selectedCanId;\r\n    let selectedpanId;\r\n    const HRShareandschedule = (props) => {\r\n\r\n            dispatch = useDispatch();\r\n            history = useHistory();\r\n            //candidate\r\n            let candList = useSelector(state => state.InterviewReducer.techcand);\r\n            console.log(\"candListttttttttt: \", candList);\r\n            React.useEffect(() => {\r\n                candidateList()\r\n              }, []);\r\n            \r\n              const candidateList = () => {\r\n                dispatch(showtechcandidatesAction())\r\n              }\r\n    \r\n              if(!Array.isArray(candList)){\r\n                candList = [];\r\n                console.log(\"Set candList to blank array\");\r\n            } \r\n           //panel\r\n           let panList = useSelector(state => state.InterviewReducer.panels);\r\n            console.log(\"panList: \", panList);\r\n            React.useEffect(() => {\r\n                panelList()\r\n              }, []);\r\n            \r\n              const panelList = () => {\r\n                dispatch(showPanelAction())\r\n              }\r\n    \r\n              if(!Array.isArray(panList)){\r\n                panList = [];\r\n                console.log(\"Set panList to blank array\");\r\n            } \r\n    \r\n        return (\r\n            // All Final Operations and Functions\r\n    \r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n               \r\n            }}>\r\n                <Jumbotron style={{ width: 600 }}>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formGroupText\">\r\n                            <Form.Label>Share Candidate and Shecdule HR Interview</Form.Label>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>locations</Form.Label>\r\n                            <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Select Date</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\"/>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Start Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>End Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"end\" name=\"end\"/>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicExperience\">\r\n                            <Form.Label>HR Interview Rating</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                                <option>7</option>\r\n                                <option>8</option>\r\n                                <option>9</option>\r\n                                <option>10</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicButton\">\r\n                    <Button variant=\"dark\" type=\"submit\">SCEDULE HR INTERVIEW</Button>\r\n                    &nbsp; &nbsp;    \r\n                    <Button variant=\"primary\" type=\"reset\">Reset </Button>\r\n                    </Form.Group>\r\n  \r\n                    </Form>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    function handleChangecandidate(event) {\r\n       // console.log(\"candList: \", candList);\r\n        selectedCanId = event.target.value\r\n        console.log(\"selected candidate: \"+ selectedCanId);\r\n    }\r\n    \r\n    function handleChangepanel(event) {\r\n       // console.log(\"panellllllllll\", panList);\r\n        selectedpanId = event.target.value\r\n        console.log(\"selected panel member: \"+ selectedpanId);\r\n    }\r\n    \r\n    \r\n    function renderCandidates(candList){\r\n        console.log(\"candList: \", candList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return candList.map((candidate) => {\r\n           //const { candidateid } = candidate //destructuring //candidte id \r\n           return (\r\n            <option key={candidate} value={candidate}>{candidate}</option>\r\n           )\r\n        })\r\n     }\r\n    \r\n     \r\n    function renderpanels(panList){\r\n        console.log(\"panelList: \", panList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return panList.map((panel, index) => {\r\n           const { panelid } = panel //destructuring //candidte id \r\n           return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n           )\r\n        })\r\n     };\r\n     \r\n     function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const selectedCanId=data.get('candidate');\r\n        console.log(\"candidateid input  : \",selectedCanId);\r\n        const selectedpanId=data.get('panel');\r\n        const locations = data.get('loc');\r\n        console.log(\"Location input  : \",locations);\r\n        const date=data.get('date');\r\n        const hrrating=data.get('rate');\r\n        const finalstatus=data.get('status');\r\n        const start_time=data.get('start');\r\n        const end_time=data.get('end');\r\n        if(locations==='' ||locations===null) {\r\n            alert(\"Entries should not be blank\");\r\n            return;\r\n        }\r\n        const hrinterviewObj = new hrInterviewScheduler(selectedCanId,selectedpanId,locations,date,hrrating,finalstatus,start_time,end_time,);\r\n        console.log(\"Interview Object : \",hrinterviewObj);\r\n        dispatch(addHRInterviewAction(hrinterviewObj,selectedCanId,selectedpanId));\r\n        history.push('/admin');\r\n        alert(\"HR Interview Scheduled Successfully !\");\r\n    }\r\n    \r\n    \r\n    \r\nexport default HRShareandschedule;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js",["517","518","519","520","521","522","523","524","525","526","527","528","529","530","531"],"import React from 'react';\r\n//import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n//import React, { Component } from \"react\";\r\n//import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\nimport { HelpBlock, Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport addTechInterviewAction from '../../../actions/interviewscheduler/add_techinterview';\r\nimport InterviewScheduler from '../../../models/InterviewScheduler';\r\nimport showcandidatesAction from '../../../actions/interviewscheduler/get_candidates';\r\nimport showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n\r\nlet dispatch;\r\nlet history;\r\nlet selectedCanId;\r\nlet selectedpanId;\r\n\r\nconst TechShareandschedule = (props) => {\r\n\r\n    dispatch = useDispatch();\r\n    history = useHistory();\r\n    //candidate\r\n    let candList = useSelector(state => state.InterviewReducer.candidates);\r\n    console.log(\"candList: \", candList);\r\n    React.useEffect(() => {\r\n        candidateList()\r\n    }, []);\r\n\r\n    const candidateList = () => {\r\n        dispatch(showcandidatesAction())\r\n    }\r\n\r\n    if (!Array.isArray(candList)) {\r\n        candList = [];\r\n        console.log(\"Set candList to blank array\");\r\n    }\r\n    //panel\r\n    let panList = useSelector(state => state.InterviewReducer.panels);\r\n    console.log(\"panList: \", panList);\r\n    React.useEffect(() => {\r\n        panelList()\r\n    }, []);\r\n\r\n    const panelList = () => {\r\n        dispatch(showPanelAction())\r\n    }\r\n\r\n    if (!Array.isArray(panList)) {\r\n        panList = [];\r\n        console.log(\"Set panList to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Share Candidate and Shecdule Interview</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>locations</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\" />\r\n                    </Form.Group>\r\n\r\n                    <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                            \r\n                                <td>\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>Start Time</b> </h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                                    </Form.Group>\r\n\r\n                                </td>\r\n                             \r\n                                <td>\r\n\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>End Time </b></h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"end\" name=\"end\" />\r\n                                    </Form.Group>\r\n\r\n\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Form.Group controlId=\"formBasicExperience\">\r\n                        <Form.Label>Tech Interview Rating</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                            <option>0</option>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                            <option>7</option>\r\n                            <option>8</option>\r\n                            <option>9</option>\r\n                            <option>10</option>\r\n                        </Form.Control>\r\n\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n                               \r\n\r\n                        <Form.Group controlId=\"formBasicButton\">\r\n                    <Button variant=\"dark\" type=\"submit\">   SCEDULE TECHNICAL INTERVIEW </Button>\r\n                    &nbsp; &nbsp;    \r\n                    <Button variant=\"primary\" type=\"reset\">Reset </Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction handleChangecandidate(event) {\r\n    selectedCanId = event.target.value\r\n    console.log(\"selected candidate: \" + selectedCanId);\r\n}\r\n\r\nfunction handleChangepanel(event) {\r\n    selectedpanId = event.target.value\r\n    console.log(\"selected panel member: \" + selectedpanId);\r\n}\r\n\r\n\r\nfunction renderCandidates(candList) {\r\n    console.log(\"candList: \", candList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return candList.map((candidate) => {\r\n        const { candidateid } = candidate //destructuring //candidte id \r\n        return (\r\n            <option key={candidateid} value={candidateid}>{candidateid}</option>\r\n        )\r\n    })\r\n}\r\n\r\n\r\nfunction renderpanels(panList) {\r\n    console.log(\"panelList: \", panList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return panList.map((panel, index) => {\r\n        const { panelid } = panel //destructuring //candidte id \r\n        return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n        )\r\n    })\r\n};\r\n\r\nfunction handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const selectedCanId = data.get('candidate');\r\n    console.log(\"candidateid input  : \", selectedCanId);\r\n    const selectedpanId = data.get('panel');\r\n    const locations = data.get('loc');\r\n    console.log(\"Location input  : \", locations);\r\n    const date = data.get('date');\r\n    const techrating = data.get('rate');\r\n    const finalstatus = data.get('status');\r\n    const start_time = data.get('start');\r\n    const end_time = data.get('end');\r\n    if (locations === '' || locations === null) {\r\n        alert(\"Entries should not be blank\");\r\n        return;\r\n    }\r\n    const interviewObj = new InterviewScheduler(selectedCanId, selectedpanId, locations, date, techrating, finalstatus, start_time, end_time,);\r\n    console.log(\"Interview Object : \", interviewObj);\r\n    dispatch(addTechInterviewAction(interviewObj, selectedCanId, selectedpanId));\r\n    history.push('/admin');\r\n    alert(\"Technical Interview Sheduled Successfully !\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TechShareandschedule;\r\n\r\n\r\n\r\n/*\r\n getPickerValue = value => {\r\n        console.log(value);\r\n    }\r\n    ---------------\r\n <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time :</Form.Label>\r\n\r\n                        <MDBCol md=\"3\">\r\n                        <MDBTimePicker id=\"timePicker\" label=\"24hrs format\" hours={12} minutes={0} hoursFormat={24} getValue={this.getPickerValue} />\r\n                       </MDBCol>\r\n\r\n                        <Form.Control/>\r\n                    </Form.Group>\r\n\r\n-------------------------\r\n\r\n <TimePicker\r\n          onChange={this.onChange}\r\n          value={this.state.time}\r\n        />\r\n---------------\r\n <Form.Group controlId=\"formBasicExperience\">\r\n                    <Dropdown as={ButtonGroup}>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Technical Interview Rating</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  --------------\r\n  normal button:\r\n\r\n   <Button variant=\"dark\" type=\"submit\">\r\n                        SCEDULE AN INTERVIEW\r\n                    </Button>\r\n*/","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js",["532"],"//Interview Services Accessible By The Admin....\r\n\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst techInterviewScheduleAdmin = () => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Accordion>\r\n               <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n               \r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default techInterviewScheduleAdmin;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js",["533"],"import React from 'react'\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UpdateInterviewScheduleAction from '../../../actions/interviewscheduler/updateinterviewschedule_action';\r\n\r\nconst TechUpdateInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let updateinterview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>UpdateInterviewScheduleAction_Function(), [])\r\n        const UpdateInterviewScheduleAction_Function = () => {\r\n            dispatcher(UpdateInterviewScheduleAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"paths\").value;\r\n        console.log(pathVar);\r\n        dispatcher(UpdateInterviewScheduleAction(pathVar));\r\n        renderData(updateinterview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Update</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"paths\"/>\r\n                        </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>End Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control type=\"text\" />\r\n                    </Form.Group>\r\n                    \r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                           \r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Update\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(updateinterview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(updateinterview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", updateinterview);\r\n        if(updateinterview!==undefined && updateinterview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n               \r\n            </Table>\r\n            );\r\n        }\r\n    }        \r\n}\r\n\r\nexport default TechUpdateInterview;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js",["534"],"import React from 'react'\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UpdateHRInterviewScheduleAction from '../../../actions/interviewscheduler/updatehrinterviewschedule_action';\r\n\r\nconst TechUpdateHRInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let hrupdateinterview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>UpdateHRInterviewScheduleAction_Function(), [])\r\n        const UpdateHRInterviewScheduleAction_Function = () => {\r\n            dispatcher(UpdateHRInterviewScheduleAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"paths\").value;\r\n        console.log(pathVar);\r\n        dispatcher(UpdateHRInterviewScheduleAction(pathVar));\r\n        renderData(hrupdateinterview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Update</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"paths\"/>\r\n                        </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>End Time </Form.Label>\r\n                        <Form.Control type=\"time\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control type=\"text\" />\r\n                    </Form.Group>\r\n                    \r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                           \r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Update\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(hrupdateinterview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(hrupdateinterview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", hrupdateinterview);\r\n        if(hrupdateinterview!==undefined && hrupdateinterview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n               \r\n            </Table>\r\n            );\r\n        }\r\n    }        \r\n}\r\n\r\nexport default TechUpdateHRInterview;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\services\\showpanelmember.js",["535","536"],"import React from 'react';\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ShowPanelMemberAction from '../../../actions/panelmember/showpanelmembers_action'\r\n\r\n\r\nconst ShowPanelMembers = (props) => {\r\n\r\n    let panelMemberList = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => PanelMemberList(), [])\r\n    const PanelMemberList = () => {\r\n        dispatcher(ShowPanelMemberAction());\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMemberList);\r\n    if (!Array.isArray(panelMemberList)) {\r\n        panelMemberList = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>List All Panel Member.</Form.Label>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>Employee Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMemberList)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(panelMemberList) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMemberList);\r\n        return panelMemberList.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default ShowPanelMembers;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\services\\deletepanelmember.js",["537","538","539","540"],"\r\nimport { Form, Table, Jumbotron, Button, Modal } from 'react-bootstrap';\r\n\r\nimport { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DeletePanelMemberAction from '../../../actions/panelmember/deletepanelmember_action'\r\n\r\nconst DeletePanelMember = (props) => {\r\n\r\n    var pathVar = null;\r\n    let panelMember = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => DeletePanelMemberAction_Function(), [])\r\n    const DeletePanelMemberAction_Function = () => {\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        console.log(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\", pathVar);\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n        renderData(panelMember);\r\n        console.log(pathVar);\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMember);\r\n    if (!Array.isArray(panelMember)) {\r\n        panelMember = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label for=\"pathVariable\">Delete by valid Name</Form.Label>\r\n                        <Form.Control id=\"pathVariable\" type=\"text\" placeholder=\"Employee Name\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Delete\r\n                    </Button>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>EmployeeName</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMember)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //MODAL\r\n    function Box() {\r\n        const [show, setShow] = useState(true);\r\n        const handleClose = () => setShow(false);\r\n        const handleShow = () => setShow(true);\r\n\r\n        return (\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Employee Name Not Found</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Entered incorrect or blank name</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        OK\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    function renderData(panelMember) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMember);\r\n        return panelMember.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default DeletePanelMember;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\techservices\\surrendertechpanel.js",["541","542","543"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Modal, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SurrenderAsATechAction from '../../../actions/panelmember/surrender_as_tech_action';\r\n\r\nconst SurrenderAsTechPanel = (props) => {\r\n\r\n    var pathVar = null;\r\n    let panelMember = useSelector((state)=>state.TechReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>SurrenderAsATechAction_Func(), [])\r\n    const SurrenderAsATechAction_Func = () => {\r\n           dispatcher(SurrenderAsATechAction(pathVar));\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        dispatcher(SurrenderAsATechAction(pathVar));\r\n        renderData(panelMember);\r\n        renderData(panelMember);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter your Panel ID</Form.Label>\r\n                        <Form.Control id=\"pathVariable\" type=\"text\" placeholder=\"Panel ID\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Surrender\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(panelMember)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n      //ALERT\r\n    function AlertPanelNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Panel member Not Found</Alert.Heading>\r\n              <p>\r\n                Panel member with the mentioned id was not found. Maybe you entered wrong id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(panelMember) {   \r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMember);\r\n        if(panelMember!==undefined && panelMember!==null && panelMember.length!==0){\r\n            return(\r\n                <div>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Location</th>\r\n                            <th>Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{panelMember.data.panelid}</td>\r\n                            <td>{panelMember.data.location}</td>\r\n                            <td>{panelMember.data.type}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            {/*<Alert><Alert.Heading>Surrendered Successfully!</Alert.Heading></Alert>*/}\r\n            </div>\r\n\r\n            );\r\n        }\r\n      \r\n        if(panelMember!==undefined && panelMember===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertPanelNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default SurrenderAsTechPanel;\r\n\r\n\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\services\\addpanelmember.js",["544","545","546","547","548"],"import { Alert, Form, Table, Jumbotron, Button, Col, InputGroup, FormControl } from 'react-bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchEmployeeAction from '../../../actions/employee/searchemployee_action';\r\nimport AddPanelMemberAction from '../../../actions/panelmember/addpanelmember_action';\r\n\r\n\r\nconst AddPanelMember = () => {\r\n\r\n    let loc = null;\r\n    let panel = null;\r\n    let name = null;\r\n    let post_json = null;\r\n\r\n    let props_wrapper = {};\r\n\r\n    let panelMemberResponse = useSelector((state)=>state.PanelMemberReducer.panelupdate);\r\n    let dispatcher = useDispatch();\r\n    //ADD PANEL MEMBER WITH REACT USE EFFECT        \r\n    React.useEffect(()=>AddPanelMemberAction_Function(), [])\r\n        const AddPanelMemberAction_Function = () => {\r\n            dispatcher(AddPanelMemberAction(post_json, name));\r\n        }\r\n\r\n    function addPanelMember(){\r\n        loc = document.getElementById(\"location_add\").value;\r\n        panel = document.getElementById(\"panel_add\").value;\r\n        name = document.getElementById(\"empname\").value;\r\n        console.log(name, loc, panel);\r\n        post_json = { employeeEntity: null, location : loc, panelid: 10000000, type : panel };\r\n        props_wrapper = {body: post_json, pathVar: name}\r\n        if(loc!=\"null\" && panel!=\"null\"){\r\n            dispatcher(AddPanelMemberAction(props_wrapper));\r\n            confirmAddition(panelMemberResponse);\r\n        }\r\n        else{\r\n            panelMemberResponse = null;\r\n            confirmAddition(panelMemberResponse);\r\n        }\r\n    }\r\n\r\n    function clearAlerts(){\r\n        panelMemberResponse = undefined;\r\n        confirmAddition(panelMemberResponse);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 600}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>What is the name of the Employee?</Form.Label>\r\n                        {/* <Form.Control type=\"text\" placeholder=\"Name of the Employee\" id=\"searchParameter\"/> */}\r\n                        \r\n                        <br></br>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                            id=\"empname\"\r\n                            placeholder=\"Employee's Name\"\r\n                            aria-label=\"Employee's Name\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            />\r\n                            <InputGroup.Append>\r\n                            {/* Check Button for Employee will run search employee..... */}\r\n                                \r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <hr></hr>\r\n                        <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                                <td>Select a Department</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                                        <Form.Control id=\"panel_add\" as=\"select\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option value=\"hr\">Human Resources (HR)</option>\r\n                                            <option value=\"tech\">Technical</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Select Location</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\" >\r\n                                        <Form.Control as=\"select\" id=\"location_add\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option>Ahmedabad</option>\r\n                                            <option>Aurangabad</option>\r\n                                            <option>Bengaluru</option>\r\n                                            <option>Chennai</option>\r\n                                            <option>Delhi</option>\r\n                                            <option>Daman/Diu</option>\r\n                                            <option>Hyderabad</option>\r\n                                            <option>Indore</option>\r\n                                            <option>Lucknow</option>\r\n                                            <option>Mumbai</option>\r\n                                            <option>Nasik</option>\r\n                                            <option>Pune</option>\r\n                                            <option>Raipur</option>\r\n                                            <option>Thiruvananthapuram</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <br></br>\r\n                            <tr>\r\n                                <td>\r\n                                    <Button variant=\"danger\" type=\"reset\" call onClick={clearAlerts}>\r\n                                        Reset\r\n                                    </Button>\r\n                                </td>\r\n                                <td>\r\n                                    <Button variant=\"primary\" type=\"button\" call onClick={addPanelMember}>\r\n                                        Add Member\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                {/* Response  */}\r\n                <div>\r\n                    {confirmAddition(panelMemberResponse)}\r\n                </div>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n    function confirmAddition(panelMemberResponse){\r\n        console.log(panelMemberResponse);\r\n        \r\n        if(panelMemberResponse!==null && panelMemberResponse!==undefined  && panelMemberResponse.length!==0){\r\n            console.log(\"Added the specified panel member to the database\");\r\n            return(\r\n                <Alert variant=\"success\">\r\n                <Alert.Heading>SUCCESSFULLY added the panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Added Successfully!\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(panelMemberResponse===[] && post_json!==null){\r\n            return(\r\n                <Alert variant=\"danger\">\r\n                <Alert.Heading>FAILED to add panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Not Added! There was some error in processing your request.\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(panelMemberResponse===[] || panelMemberResponse===null){\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AddPanelMember;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrservices\\viewinterviewmemberhr.js",["549","550"],"//Hr Interview Scheduler Services Component : CHECK WARNING.info FOR NOTES.....\r\nimport React from 'react';\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ShowInterviewMemberAction from '../../../actions/interviewscheduler/showinterviewmembers_action';\r\n\r\n\r\n\r\nconst ShowInterviewMember = (props) => {\r\n\r\n\r\n    let interviewList= useSelector((state)=>state.HRReducer.viewmemberlistforhr);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>InterviewMemberList(), [])\r\n        const InterviewMemberList = () => {\r\n            dispatcher(ShowInterviewMemberAction());\r\n        }\r\n\r\n       \r\n        console.log(\"InterviewMemberList: \", interviewList);\r\n        if (!Array.isArray(interviewList)) {\r\n            interviewList = [];\r\n            console.log(\"Set interview Member to blank array\");\r\n        }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 800 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>List All Interview Member.</Form.Label>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                <tr>\r\n                <th>INTERVIEW ID</th>  \r\n                        <th>LOCATION</th>\r\n                        <th>DATE</th>\r\n                        <th>START_TIME</th>\r\n                        <th>END_TIME</th>\r\n                        <th>HRRATING</th>\r\n                        <th>FINAL<br></br>STATUS</th> \r\n                </tr>\r\n            </thead>\r\n            <hr></hr>\r\n                {renderData(interviewList)}\r\n       \r\n        </Table>\r\n        </Form>\r\n        </Jumbotron>\r\n    </div>\r\n\r\n    );\r\n\r\n\r\nfunction renderData(interviewList) {\r\n    console.log(\"interviewmember dispatcher object returned from the server : \", interviewList);\r\n    if(interviewList!==undefined) {\r\n      return interviewList.map((interviewmember,index) =>{\r\n        const {interviewid,location,date,start_time,end_time,hrrating,finalstatus} = interviewmember //destructuring\r\n        return(\r\n                    <tbody>\r\n                        <tr>\r\n                        <td>{interviewid}</td>     \r\n                        <td>{location}</td>\r\n                        <td>{date}</td>\r\n                        <td>{start_time}</td>\r\n                        <td>{end_time}</td>\r\n                        <td>{hrrating}</td>\r\n                        <td>{finalstatus}</td>    \r\n                </tr>\r\n                </tbody>\r\n    )\r\n});\r\n    }\r\n}\r\n}\r\nexport default ShowInterviewMember;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js",["551","552"],"import {render} from '@testing-library/react'\r\nimport GiveHrRatingAction from '../../../actions/interviewscheduler/givehrrating_action';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst GiveHrRating = (props) => {\r\n\r\n    var hrratinglist = null;\r\n    let interviewmember = useSelector((state)=>state.HRReducer.ratinglistcandidate);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>GiveHrRatingAction_Function(), [])\r\n        const GiveHrRatingAction_Function = () => {\r\n            dispatcher(GiveHrRatingAction(hrratinglist));\r\n    \r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        hrratinglist = document.getElementById(\"interviewidforhrrating\").value;\r\n        dispatcher(GiveHrRatingAction(hrratinglist));\r\n        renderData(interviewmember);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Give HrRating to a Candidate by Interviewid</Form.Label>\r\n                        <Form.Control   id=\"interviewidforhrrating\" type=\"text\"   placeholder=\"Interview ID\" />\r\n                        </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        SHOW\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(interviewmember)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //Alert\r\n    function AlertMemberNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n              Candidate with the mentioned id was not found. Maybe you entered wrong id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n    function renderData(interviewmember) {   \r\n        console.log(\"interview member with rating dispatcher object returned from the server : \", interviewmember);\r\n        if(interviewmember!==undefined && interviewmember!==null  && interviewmember.length!==0) {\r\n\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            \r\n                            <th>Interview ID</th>\r\n                            <th>Location</th>\r\n                            <th>Date</th>\r\n                            <th>Start Time</th>\r\n                            <th>End Time</th>\r\n                            <th>HrRating</th>\r\n                            <th>Final Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>{interviewmember.data.interviewid}</td>\r\n                            <td>{interviewmember.data.location}</td>\r\n                            <td>{interviewmember.data.date}</td>\r\n                            <td>{interviewmember.data.start_time}</td>\r\n                            <td>{interviewmember.data.end_time}</td>\r\n                            <td>{interviewmember.data.hrrating}</td>\r\n                            <td>{interviewmember.data.finalstatus}</td>\r\n                            \r\n                        </tr>\r\n                        </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n        if(interviewmember!==undefined && interviewmember===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertMemberNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default GiveHrRating;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js",["553"],"//Hr Interview Scheduler Services Component : CHECK WARNING.info FOR NOTES.....\r\nimport React from 'react'\r\nimport { Form, Table, Jumbotron, Button ,Alert} from 'react-bootstrap';\r\nimport  { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ShowListForHrAction from '../../../actions/interviewscheduler/showlistforhr_action';\r\n\r\n\r\n\r\nconst ViewListForHr = (props) => {\r\n\r\n    var hrinterviewlist = null;\r\n    let member = useSelector((state)=>state.HRReducer.viewmemberforhr);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ShowListForHrAction_Function(), [])\r\n        const ShowListForHrAction_Function = () => {\r\n            dispatcher(ShowListForHrAction(hrinterviewlist));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        hrinterviewlist = document.getElementById(\"vareab\").value;\r\n        dispatcher(ShowListForHrAction(hrinterviewlist));\r\n        renderTableDataHr(member);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label> View Candidate Using interviewid</Form.Label>\r\n                        <Form.Control id=\"vareab\" type=\"text\" placeholder=\"Interview ID\"/>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Search\r\n                        </Button>\r\n                    </Form.Group>\r\n                        <tbody id=\"table_content\">\r\n                        {renderTableDataHr(member)}\r\n                        </tbody>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n //ALERT\r\n function AlertInterviewMemberNotFound() {\r\n    const [show, setShow] = useState(true);\r\n    console.log(show, setShow);\r\n    if (show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>Interview Not Found</Alert.Heading>\r\n          <p>\r\n            Interview with the mentioned  id was not found. Maybe you entered id. Please check once!\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    else{\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n    \r\n    \r\n}\r\n\r\n    function renderTableDataHr(member) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", member);\r\n        if(member!==undefined && member!==null  && member.length!==0){\r\n            return(\r\n           <Table striped bordered hover size=\"sm\">\r\n\r\n                <thead>\r\n                    <tr>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience</th>\r\n                            <th>Primary<br></br>Skills</th>\r\n                            <th>Secondary <br></br>Skills</th>\r\n                            <th>Notice <br></br>Period</th>\r\n                        </tr>\r\n                        </thead>\r\n                    <tbody>\r\n\r\n\r\n                <tr>\r\n                    <td>{member.data.candidateid}</td>\r\n                    <td>{member.data.candidatename}</td>\r\n                    <td>{member.data.location}</td>\r\n                    <td>{member.data.qualification}</td>\r\n                    <td>{member.data.designation}</td>\r\n                    <td>{member.data.experience}</td>\r\n                    <td>{member.data.primaryskills}</td>\r\n                    <td>{member.data.secondaryskills}</td>\r\n                    <td>{member.data.noticeperiod}</td>\r\n                </tr>\r\n                </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n            if(member!==undefined && member===null){\r\n                console.log(\"called the alert\");\r\n            return(<AlertInterviewMemberNotFound show=\"true\"/>);\r\n        }\r\n    \r\n    }        \r\n}\r\n\r\nexport default ViewListForHr;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\adminservices\\addCandidate.js",["554","555","556","557","558"],"import { Alert,Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport addCandidateAction from '../../../actions/candidate/adminactions/addCandidateAction'\r\nimport getDesignationsAction from '../../../actions/candidate/adminactions/getDesignationsAction'\r\nimport getLocationsAction from '../../../actions/candidate/adminactions/getLocationsAction'\r\nimport getPrimarySkillsAction from '../../../actions/candidate/adminactions/getPrimarySkillsAction'\r\nimport getSecondarySkillsAction from '../../../actions/candidate/adminactions/getSecondarySkillsAction'\r\nimport getQualificationsAction from '../../../actions/candidate/adminactions/getQualificationsAction'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Candidate from '../../../models/Candidate';\r\n\r\n\r\nlet dispatch;\r\nlet history;\r\nlet location;\r\nlet qualification;\r\nlet designation; \r\nlet primaryskill;\r\nlet secondaryskill;\r\nlet selectedPrimary;\r\nlet selectedSecondary;\r\n\r\nconst AddCandidate = () => {\r\n\r\n    dispatch = useDispatch();\r\n    history = useHistory();\r\n\r\n    let locationList = useSelector(state => state.CandidateReducer.location);\r\n\r\n   React.useEffect(() => {\r\n       LocationList()\r\n      }, []);\r\n    \r\n    const LocationList = () => {\r\n        dispatch(getLocationsAction())\r\n      }\r\n      \r\n     if(!Array.isArray(locationList)){\r\n         locationList = [];\r\n         console.log(\"Set locationList to blank array\");\r\n     } \r\n    console.log(\"mmmmmmlocationList: \", locationList);\r\n\r\n    \r\n    let qualificationList = useSelector(state => state.CandidateReducer.qualification);\r\n\r\n    React.useEffect(() => {\r\n       QualificationList()\r\n      }, []);\r\n    \r\n      const QualificationList = () => {\r\n        dispatch(getQualificationsAction())\r\n      }\r\n      if(!Array.isArray(qualificationList)){\r\n        qualificationList = [];\r\n        console.log(\"Set locationList to blank array\");\r\n    } \r\n   console.log(\"qualificationList: \", qualificationList);  \r\n   \r\n   let designationList = useSelector(state => state.CandidateReducer.designation);\r\n\r\n    React.useEffect(() => {\r\n       DesignationList()\r\n      }, []);\r\n    \r\n      const DesignationList = () => {\r\n        dispatch(getDesignationsAction())\r\n      }\r\n      if(!Array.isArray(designationList)){\r\n        designationList = [];\r\n        console.log(\"Set designationList to blank array\");\r\n    } \r\n   console.log(\"designationList: \", designationList); \r\n   \r\n   let primaryskillsList = useSelector(state => state.CandidateReducer.primaryskill);\r\n\r\n    React.useEffect(() => {\r\n       PrimarySkillsList()\r\n      }, []);\r\n    \r\n      const PrimarySkillsList = () => {\r\n        dispatch(getPrimarySkillsAction())\r\n      }\r\n      if(!Array.isArray(primaryskillsList)){\r\n        primaryskillsList = [];\r\n        console.log(\"Set primaryskillsList to blank array\");\r\n    } \r\n   console.log(\"primaryskillsList: \", primaryskillsList); \r\n\r\n   let secondaryskillsList = useSelector(state => state.CandidateReducer.secondaryskill);\r\n\r\n    React.useEffect(() => {\r\n       SecondarySkillsList()\r\n      }, []);\r\n    \r\n      const SecondarySkillsList = () => {\r\n        dispatch(getSecondarySkillsAction())\r\n      }\r\n      if(!Array.isArray(secondaryskillsList)){\r\n        secondaryskillsList = [];\r\n        console.log(\"Set secondaryskillsList to blank array\");\r\n    } \r\n   console.log(\"secondaryskillsList: \", secondaryskillsList); \r\n\r\n\r\n   return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Add Candidate Details</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Enter Name</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter name\" onBlur={validateCandidateName}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicLocation\">\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"loc\" name=\"loc\" onChange={handleChangeLoc}>\r\n                        <option>select</option>\r\n                        {renderLocations(locationList)}       \r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"formBasicQualification\">\r\n                    <Form.Label>Qualification</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"qual\" name=\"qual\" onChange={handleChangeQual}>\r\n                        <option>select</option>\r\n                        {renderQualifications(qualificationList)}       \r\n                    </Form.Control>\r\n                    \r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicDesignation\">\r\n                        <Form.Label>Designation</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"desig\" name=\"design\" onChange={handleChangeDesign}>\r\n                        <option>select</option>\r\n                        {renderDesignations(designationList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicExperience\">\r\n                        <Form.Label>Experience in Years</Form.Label>\r\n                        <Form.Control type=\"Number\"  id=\"exp\" name=\"exp\" onBlur={validateExperience}/>\r\n                    </Form.Group>                    \r\n\r\n                    <Form.Group controlId=\"formBasicPrimarySkill\">\r\n                        <Form.Label>Primary Skill</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"ps\" name=\"ps\" onChange={handleChangePs} onBlur={validatePs}>\r\n                        <option>select</option>\r\n                        {renderPrimarySkills(primaryskillsList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicSecondarySkill\">\r\n                        <Form.Label>Secondary Skill</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"ss\" name=\"ss\" onChange={handleChangeSs} onBlur={validateSs}>\r\n                        <option>select</option>\r\n                        {renderSecondarySkills(secondaryskillsList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicNoticePeriod\">\r\n                        <Form.Label>NoticePeriod in Months</Form.Label>\r\n                        <Form.Control type=\"Number\" id=\"np\" name=\"np\" onBlur={validateNoticePeriod}/>\r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"formBasicButton\">\r\n                    <Button variant=\"dark\" type=\"submit\">Submit </Button>\r\n                    &nbsp; &nbsp;    \r\n                    <Button variant=\"primary\" type=\"reset\">Reset </Button>\r\n                    </Form.Group>\r\n  \r\n\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction validatePs(event) {\r\n    selectedPrimary = event.target.value;\r\n  console.log(\"Selected option: \" + selectedPrimary);\r\n}\r\n\r\nfunction validateSs(event){\r\n    selectedSecondary = event.target.value;\r\n  console.log(\"Selected option: \" + selectedSecondary);\r\n\r\n  if(selectedSecondary === selectedPrimary)\r\n  {\r\n      alert(\"Skill you entered is already your primary skill, enter another skill!\");\r\n  }\r\n  \r\n}\r\n\r\nfunction handleChangeLoc(event) {\r\n    location = event.target.value\r\n    console.log(\"location: \", location);\r\n}\r\n\r\nfunction renderLocations(locationList) {\r\n    console.log(\"locationList: \", locationList);\r\n    return locationList.map((loc, index) => {\r\n       //const { location } = loc //destructuring\r\n       \r\n       return (\r\n        <option key={loc.location} value={loc.location}>{loc.location}</option>\r\n       )\r\n    })\r\n };\r\n \r\n\r\n function handleChangeQual(event){\r\n     qualification = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"qualification: \", qualification);\r\n }\r\n\r\n function renderQualifications(qualificationList){\r\n    console.log(\"qualificationList: \", qualificationList);\r\n    return qualificationList.map((qual, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={qual.qualification} value={qual.qualification}>{qual.qualification}</option>\r\n       )\r\n    })\r\n };\r\n\r\n \r\n function handleChangeDesign(event){\r\n    designation = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"designation: \", designation);\r\n }\r\n\r\n function renderDesignations(designationList){\r\n    console.log(\"designationList: \", designationList);\r\n    return designationList.map((desig, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={desig.designation} value={desig.designation}>{desig.designation}</option>\r\n       )\r\n    })\r\n };\r\n\r\n\r\n function handleChangePs(event){\r\n    primaryskill = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"primaryskill: \", primaryskill);\r\n }\r\n\r\n function renderPrimarySkills(primaryskillsList){\r\n    console.log(\"primaryskillsList: \", primaryskillsList);\r\n    return primaryskillsList.map((ps, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={ps.primaryskill} value={ps.primaryskill}>{ps.primaryskill}</option>\r\n       )\r\n    })\r\n };\r\n\r\nfunction handleChangeSs(event){\r\n    secondaryskill = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"secondaryskill: \", secondaryskill);\r\n}\r\n\r\nfunction renderSecondarySkills(secondaryskillsList){\r\n    console.log(\"secondaryskillsList: \", secondaryskillsList);\r\n    return secondaryskillsList.map((ss, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={ss.secondaryskill} value={ss.secondaryskill}>{ss.secondaryskill}</option>\r\n       )\r\n    })\r\n };\r\n\r\n\r\n function validateCandidateName(event)\r\n {\r\n     const data = event.target.value;\r\n     console.log(\"target\", data);\r\n\r\n     let regex = /^([A-Z][a-zA-Z]{3,})$/;\r\n     let str = data;\r\n     console.log(regex, str);\r\n\r\n     if(regex.test(str) && str != \"\" && str != null)\r\n     {\r\n         console.log(\"valid\");\r\n     }\r\n     else\r\n     {\r\n         alert(\"Enter valid name, it should only contain characters and cannot be null or blank!\");\r\n     }\r\n }\r\n\r\n function validateExperience(event)\r\n {\r\n    const data = event.target.value;\r\n    console.log(\"target\", data);\r\n\r\n    let regex = /^[0-9]$/;\r\n    let str = data;\r\n    console.log(regex, str);\r\n\r\n    if(regex.test(str) && str != \"\")\r\n    {\r\n        console.log(\"valid\");\r\n    }\r\n    else\r\n    {\r\n        alert(\"Enter valid Experience, it cannot be negative or blank!\");\r\n    }\r\n }\r\n\r\n\r\n function validateNoticePeriod(event) {\r\n\r\n    const data = event.target.value;\r\n    console.log(\"target\", data);\r\n\r\n    let regex = /^[2-9]$/;\r\n    let str = data;\r\n    console.log(regex, str);\r\n\r\n    if(regex.test(str) && str != \"\")\r\n    {\r\n        console.log(\"valid\");\r\n    }\r\n    else\r\n    {\r\n        alert(\"Enter valid Notice Period, it cannot be blank and must be atleat 2 months!\");\r\n    }\r\n }\r\n\r\n\r\n\r\n\r\n function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const candidatename = data.get('name');\r\n    console.log(\"nameeeeeeeee\",candidatename);\r\n   // const designation = data.get('design');\r\n   // const qualification = data.get('qualification');\r\n    const experience = data.get('exp');\r\n    const primaryskill = data.get('ps');\r\n    const secondaryskill = data.get('ss');\r\n    const noticeperiod = data.get('np');\r\n\r\n    const candObj = new Candidate(candidatename, location, qualification, designation, experience, primaryskill, secondaryskill, noticeperiod);\r\n    console.log('Candidate object', candObj);\r\n    dispatch(addCandidateAction(candObj));\r\n    history.push('/admin');\r\n    alert(\"Candidate Details added Successfully!\");\r\n}\r\n\r\nexport default AddCandidate;\r\n\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\techservices\\viewtechcandidate.js",["559","560","561"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Modal, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ViewaCandidateForTechAction from '../../../actions/candidate/view_a_cand_tech_action';\r\n\r\nconst ViewACandidateForTech = (props) => {\r\n\r\n    var pathVar = null;\r\n    let candidate = useSelector((state)=>state.TechReducer.candidates);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ViewaCandidateForTechAction_Function(), [])\r\n    const ViewaCandidateForTechAction_Function = () => {\r\n        console.log(pathVar);\r\n            dispatcher(ViewaCandidateForTechAction(pathVar));\r\n\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathV\").value;\r\n        dispatcher(ViewaCandidateForTechAction(pathVar));\r\n\r\n        renderData(candidate);\r\n        renderData(candidate);\r\n\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 800}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Search by valid name/id</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name or Candidate ID\" id=\"pathV\"/>\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        View a candidate\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(candidate)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n      //ALERT\r\n    function AlertCandidateNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Candidate Not Found</Alert.Heading>\r\n              <p>\r\n                Candidate with the mentioned id was not found. Maybe you entered wrong name/id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(candidate) {   \r\n        console.log(\"candidate dispatcher object returned from the server : \", candidate);\r\n        if(candidate!==undefined && candidate!==null && candidate.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience(In Years)</th>\r\n                            <th>Primary Skills</th>\r\n                            <th>Secondary Skills</th>\r\n                            <th>Notice Period(In Months)</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{candidate.data.candidateid}</td>\r\n                            <td>{candidate.data.candidatename}</td>\r\n                            <td>{candidate.data.location}</td>\r\n                            <td>{candidate.data.qualification}</td>\r\n                            <td>{candidate.data.designation}</td>\r\n                            <td>{candidate.data.experience}</td>\r\n                            <td>{candidate.data.primaryskills}</td>\r\n                            <td>{candidate.data.secondaryskills}</td>\r\n                            <td>{candidate.data.noticeperiod}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n        if(candidate!==undefined && candidate===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertCandidateNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default ViewACandidateForTech;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\adminservices\\viewCandidate.js",["562","563"],"import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport viewByAllAction from '../../../actions/candidate/adminactions/viewByAllAction'\r\nimport viewByNameAction from '../../../actions/candidate/adminactions/viewByNameAction'\r\nimport viewByLocationAction from '../../../actions/candidate/adminactions/viewByLocationAction'\r\nimport viewByQualificationAction from '../../../actions/candidate/adminactions/viewByQualificationAction'\r\nimport viewByDesignationAction from '../../../actions/candidate/adminactions/viewByDesignationAction'\r\nimport viewByPrimarySkillsAction from '../../../actions/candidate/adminactions/viewByPrimarySkillsAction'\r\n\r\nimport getDistinctNameAction from '../../../actions/candidate/adminactions/getDistinctNameAction'\r\nimport getDistinctDesignationAction from '../../../actions/candidate/adminactions/getDistinctDesignationAction'\r\nimport getDistinctLocationAction from '../../../actions/candidate/adminactions/getDistinctLocationAction'\r\nimport getDistinctPrimarySkillAction from '../../../actions/candidate/adminactions/getDistinctPrimarySkillAction'\r\nimport getDistinctQualificationAction from '../../../actions/candidate/adminactions/getDistinctQualificationAction'\r\n\r\nlet dispatch;\r\nlet selectedview;\r\nlet selectedOption;\r\nconst ViewCandidate = (props) => {\r\n\r\n  let [filter, setFilter] = useState();\r\n  let [initialState, setInitialState] = useState();\r\n  let candidateList = useSelector(state => state.CandidateReducer.candidates);\r\n  let filterList = useSelector(state => state.CandidateReducer.filter);\r\n  \r\n   dispatch = useDispatch();\r\n\r\n  \r\n/*React.useEffect(() => {\r\n      CandidateList()\r\n    }, []);\r\n  \r\n    const CandidateList = () => {\r\n      //dispatch()\r\n    }*/\r\n\r\n  console.log(\"candidateLists: \", candidateList);\r\n  if(!Array.isArray(candidateList)) {\r\n      candidateList = [];\r\n      console.log(\"Set candidateList to blank array\");\r\n  }\r\n\r\n  if(!Array.isArray(filterList)) {\r\n    \r\n    filterList=[];\r\n    console.log(\"Set candidateList to blank array\");\r\n}\r\n\r\n\r\nconst searchHandleChange = (event) => {\r\n  selectedOption = event.target.value;\r\n  console.log(\"Selected option: \" + selectedOption);\r\n  if(selectedOption === \"Name\") {\r\n      dispatch(getDistinctNameAction())\r\n      .then((response) => {\r\n          console.log(\"REsponse: \", response);\r\n          console.log(\"filterList: \", filterList);\r\n          setFilter(filterList);\r\n      });\r\n  } else if(selectedOption === \"Location\") {\r\n      dispatch(getDistinctLocationAction())\r\n      .then((response) => {\r\n          console.log(\"REsponse: \", response);\r\n          console.log(\"filterList: \", filterList);\r\n          setFilter(filterList);\r\n      });\r\n  } else if(selectedOption === \"Qualification\") {\r\n      dispatch(getDistinctQualificationAction())\r\n      .then((response) => {\r\n          console.log(\"REsponse: \", response);\r\n          console.log(\"filterList: \", filterList);\r\n          setFilter(filterList);\r\n      });\r\n  }\r\n  else if(selectedOption === \"Designation\") {\r\n    dispatch(getDistinctDesignationAction())\r\n    .then((response) => {\r\n        console.log(\"REsponse: \", response);\r\n        console.log(\"filterList: \", filterList);\r\n        setFilter(filterList);\r\n    });\r\n}\r\nelse if(selectedOption === \"Primary Skills\"){\r\n  dispatch(getDistinctPrimarySkillAction())\r\n  .then((response) => {\r\n      console.log(\"REsponse: \", response);\r\n      console.log(\"filterList: \", filterList);\r\n      setFilter(filterList);\r\n  });\r\n}\r\n}\r\n\r\n\r\nfunction handleSearch(event) {\r\n  event.preventDefault();\r\n  if(selectedOption===\"All\"){\r\n    dispatch(viewByAllAction())\r\n    .then((response) => {\r\n      console.log(\"Response: \", response);\r\n      console.log(\"List: \", candidateList);\r\n      setInitialState(candidateList);\r\n  });\r\n}\r\n else if(selectedOption===\"Name\"){\r\n    dispatch(viewByNameAction(selectedview))\r\n    .then((response) => {\r\n      console.log(\"Response: \", response);\r\n      console.log(\"List: \", candidateList);\r\n      setInitialState(candidateList);\r\n  });\r\n  }else if(selectedOption===\"Location\")\r\n  {\r\n    dispatch(viewByLocationAction(selectedview))\r\n    .then((response) => {\r\n      console.log(\"Response: \", response);\r\n      console.log(\"List: \", candidateList);\r\n      setInitialState(candidateList);\r\n  });\r\n  }else if(selectedOption===\"Qualification\")\r\n  {\r\n    dispatch(viewByQualificationAction(selectedview))\r\n    .then((response) => {\r\n      console.log(\"Response: \", response);\r\n      console.log(\"List: \", candidateList);\r\n      setInitialState(candidateList);\r\n  });\r\n  }else if(selectedOption===\"Designation\")\r\n  {\r\n    dispatch(viewByDesignationAction(selectedview))\r\n    .then((response) => {\r\n      console.log(\"Response: \", response);\r\n      console.log(\"List: \", candidateList);\r\n      setInitialState(candidateList);\r\n  });\r\n  }\r\n  else if(selectedOption===\"Primary Skills\")\r\n  {\r\n    dispatch(viewByPrimarySkillsAction(selectedview))\r\n    .then((response) => {\r\n      console.log(\"Response: \", response);\r\n      console.log(\"List: \", candidateList);\r\n      setInitialState(candidateList);\r\n  });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form onSubmit={handleSearch}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>View Candidate Details</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicView\">\r\n                        <Form.Label for=\"view\">View By</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"view\" onChange={searchHandleChange} required>\r\n                            <option>Select View By</option>\r\n                            <option>All</option>\r\n                            <option>Name</option>\r\n                            <option>Location</option>\r\n                            <option>Qualification</option>\r\n                            <option>Designation</option>\r\n                            <option>Primary Skills</option>\r\n                        </Form.Control>\r\n\r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label for=\"view\">Filter</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"filter\" onChange={filterHandleChange}>\r\n                              <option>select</option>\r\n                              {renderFilterList(filterList)}       \r\n                            </Form.Control>\r\n                       </Form.Group>\r\n\r\n                      <Form.Group>\r\n                            <Button variant=\"dark\" type=\"submit\">\r\n                                View\r\n                    </Button>\r\n                        </Form.Group>\r\n\r\n                    </Form.Group>\r\n                    <Table striped bordered hover variant=\"dark\" size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                \r\n                                <th>ID</th>\r\n                                <th>Candidate Name</th>\r\n                                <th>Location</th>\r\n                                <th>Qualification</th>\r\n                                <th>Designation</th>\r\n                                <th>Experience</th>\r\n                                <th>Primary Skills</th>\r\n                                <th>Secondary Skills</th>\r\n                                <th>Notice Period</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {renderTableData(candidateList)}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderTableData(candidateList) {\r\n    console.log(\"candidateList: \", candidateList);\r\n    return candidateList.map((candidate, index) => {\r\n       const {candidateid, candidatename, location, qualification, designation, experience, primaryskills, secondaryskills, noticeperiod} = candidate //destructuring\r\n       return (\r\n          <tr key={candidateid}>\r\n             <td>{candidateid}</td>\r\n             <td>{candidatename}</td>\r\n             <td>{location}</td>\r\n             <td>{qualification}</td>\r\n             <td>{designation}</td>\r\n             <td>{experience}</td>\r\n             <td>{primaryskills}</td>\r\n             <td>{secondaryskills}</td>\r\n             <td>{noticeperiod}</td>\r\n          </tr>\r\n       )\r\n    })\r\n  };\r\n  \r\n\r\n  function filterHandleChange(event) {\r\n    selectedview = event.target.value\r\n    console.log(\"Selected view: \" + selectedview);\r\n  }\r\n  \r\n  function renderFilterList(filterList) {\r\n    console.log(\"filterList\", filterList);\r\n    return filterList.map((value) => {\r\n        return (\r\n            <option value = {value}>{value}</option>\r\n        )\r\n    })\r\n  }\r\n  \r\n  \r\n\r\n export default ViewCandidate;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\services\\viewallinterviewmembersfortech.js",["564","565"],"import React from 'react';\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ViewAllInterviewMembersForTechAction from '../../../actions/interviewscheduler/viewallinterviewmembersaction'\r\n\r\n\r\nconst ViewAllInterviewMembers = (props) => {\r\n\r\n\r\n    let interviewListForTech= useSelector((state)=>state.TechReducer.viewalltech);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>InterviewMemberForTechList(), [])\r\n        const InterviewMemberForTechList = () => {\r\n            dispatcher(ViewAllInterviewMembersForTechAction());\r\n        }\r\n\r\n       \r\n        console.log(\"InterviewMemberList: \", interviewListForTech);\r\n        if (!Array.isArray(interviewListForTech)) {\r\n            interviewListForTech = [];\r\n            console.log(\"Set interview Member to blank array\");\r\n        }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 800 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>List of All Interview Members</Form.Label>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                <tr>\r\n                <th>Interview ID</th>  \r\n                        <th>Location</th>\r\n                        <th>Date</th>\r\n                        <th>Start_Time</th>\r\n                        <th>End_Time</th>\r\n                        <th>TechRating</th>\r\n                        <th>Final<br></br>Status</th> \r\n                </tr>\r\n            </thead>\r\n            <hr></hr>\r\n                {renderData(interviewListForTech)}\r\n       \r\n        </Table>\r\n        </Form>\r\n        </Jumbotron>\r\n    </div>\r\n\r\n    );\r\n\r\n\r\nfunction renderData(interviewListForTech) {\r\n    console.log(\"interviewmember dispatcher object returned from the server : \", interviewListForTech);\r\n    if(interviewListForTech!==undefined) {\r\n      return interviewListForTech.map((interviewmember,index) =>{\r\n        const {interviewid,location,date,start_time,end_time,techrating,finalstatus} = interviewmember //destructuring\r\n        return(\r\n                    <tbody>\r\n                        <tr>\r\n                        <td>{interviewid}</td>     \r\n                        <td>{location}</td>\r\n                        <td>{date}</td>\r\n                        <td>{start_time}</td>\r\n                        <td>{end_time}</td>\r\n                        <td>{techrating}</td>\r\n                        <td>{finalstatus}</td>    \r\n                </tr>\r\n                </tbody>\r\n    )\r\n});\r\n    }\r\n}\r\n}\r\nexport default ViewAllInterviewMembers;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\employee\\services\\searchemployee.js",["566","567"],"  \r\nimport { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchEmployeeAction from '../../../actions/employee/searchemployee_action'\r\n\r\nconst SearchEmployee = (props) => {\r\n\r\n    var pathVar = null;\r\n    let employee = useSelector((state)=>state.EmployeeReducer.employees);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>SearchEmployeeAction_Function(), [])\r\n    const SearchEmployeeAction_Function = () => {\r\n        console.log(pathVar);\r\n            dispatcher(SearchEmployeeAction(pathVar));\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"emptosearch\").value;\r\n        dispatcher(SearchEmployeeAction(pathVar));\r\n        // renderData(employee);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Search by valid name/id</Form.Label>\r\n                        <Form.Control id=\"emptosearch\" type=\"text\" placeholder=\"Name or Employee ID\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(employee)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertEmployeeNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Employee Not Found</Alert.Heading>\r\n              <p>\r\n                Employee with the mentioned name or id was not found. Maybe you entered wrong name/id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    \r\n    }\r\n\r\n    function renderData(employee) {   \r\n        console.log(\"employee dispatcher object returned from the server : \", employee);\r\n        if(employee!==undefined && employee!==null && employee.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{employee.employeeid}</td>\r\n                            <td>{employee.name}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n        if(employee!==undefined && employee===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertEmployeeNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\n\r\nexport default SearchEmployee;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\candidate\\hrservices\\viewhrcandidate.js",["568","569","570"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Modal, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ViewaCandidateForHRAction from '../../../actions/candidate/view_a_cand_hr';\r\n\r\nconst ViewACandidateForHR = (props) => {\r\n\r\n    var pathVar = null;\r\n\r\n\r\n\r\n    let candidate = useSelector((state)=>state.HRReducer.candidates);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ViewaCandidateForHRAction_Function(), [])\r\n    const ViewaCandidateForHRAction_Function = () => {\r\n        console.log(pathVar);\r\n            dispatcher(ViewaCandidateForHRAction(pathVar));\r\n\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathV\").value;\r\n        dispatcher(ViewaCandidateForHRAction(pathVar));\r\n\r\n        renderData(candidate);\r\n        //renderData(candidate);\r\n\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 800}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Search by valid name/id</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name or Candidate ID\" id=\"pathV\"/>\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        View a candidate\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(candidate)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n      //ALERT\r\n    function AlertCandidateNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Candidate Not Found</Alert.Heading>\r\n              <p>\r\n                Candidate with the mentioned id was not found. Maybe you entered wrong name/id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(candidate) {   \r\n        console.log(\"candidate dispatcher object returned from the server : \", candidate);\r\n        if(candidate!==undefined && candidate!==null && candidate.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience(In Years)</th>\r\n                            <th>Primary Skills</th>\r\n                            <th>Secondary Skills</th>\r\n                            <th>Notice Period(In Months)</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{candidate.candidateid}</td>\r\n                            <td>{candidate.candidatename}</td>\r\n                            <td>{candidate.location}</td>\r\n                            <td>{candidate.qualification}</td>\r\n                            <td>{candidate.designation}</td>\r\n                            <td>{candidate.experience}</td>\r\n                            <td>{candidate.primaryskills}</td>\r\n                            <td>{candidate.secondaryskills}</td>\r\n                            <td>{candidate.noticeperiod}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n        if(candidate!==undefined && candidate===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertCandidateNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default ViewACandidateForHR;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\services\\givetechrating.js",["571","572"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport GiveTechRatingAction from '../../../actions/interviewscheduler/givetechratingaction'\r\n\r\nconst GiveTechRating = (props) => {\r\n\r\n    var techratinglist = null;\r\n    let interviewmember = useSelector(state => state.TechReducer.ratinglistcandidate);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>GiveTechRatingAction_Function(), [])\r\n    const GiveTechRatingAction_Function = () => {\r\n            dispatcher(GiveTechRatingAction(techratinglist));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        techratinglist = document.getElementById(\"interviewidforrating\").value;\r\n        dispatcher(GiveTechRatingAction(techratinglist));\r\n        renderData(interviewmember);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 800}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Give TechRating to a Candidate by Interviewid</Form.Label>\r\n                        <Form.Control id=\"interviewidforrating\" type=\"text\" placeholder=\"Interview ID\" />\r\n                        </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(interviewmember)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //Alert\r\n    function AlertMemberNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n              Candidate with the mentioned id was not found. Maybe you entered wrong id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n    function renderData(interviewmember) {   \r\n        console.log(\"candidate dispatcher object returned from the server : \", interviewmember);\r\n        if(interviewmember!==undefined && interviewmember!==null && interviewmember.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Interview ID</th>\r\n                            <th>Location</th>\r\n                            <th>Date</th>\r\n                            <th>Start Time</th>\r\n                            <th>End Time</th>\r\n                            <th>TechRating</th>\r\n                            <th>Final Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>{interviewmember.data.interviewid}</td>\r\n                            <td>{interviewmember.data.location}</td>\r\n                            <td>{interviewmember.data.date}</td>\r\n                            <td>{interviewmember.data.start_time}</td>\r\n                            <td>{interviewmember.data.end_time}</td>\r\n                            <td>{interviewmember.data.techrating}</td>\r\n                            <td>{interviewmember.data.finalstatus}</td>\r\n                            \r\n                        </tr>\r\n                        </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n        if(interviewmember!==undefined && interviewmember===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertMemberNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default GiveTechRating;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js",["573"],"import React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ViewInterviewMemberForTechAction from '../../../actions/interviewscheduler/viewinterviewmemberfortechaction';\r\n\r\nconst ViewInterviewMemberForTech = (props) => {\r\n\r\n    var techinterviewlist = null;\r\n    let member = useSelector(state => state.TechReducer.viewmemberfortech);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ViewInterviewMemberForTechAction_Function(), [])\r\n    const ViewInterviewMemberForTechAction_Function = () => {\r\n            dispatcher(ViewInterviewMemberForTechAction(techinterviewlist));\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        techinterviewlist = document.getElementById(\"intid\").value;\r\n        dispatcher(ViewInterviewMemberForTechAction(techinterviewlist));\r\n        renderData(member);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 800}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>View Candidate Using interviewid</Form.Label>\r\n                        <Form.Control id=\"intid\" type=\"text\" placeholder=\"Interview ID\" />\r\n                        </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(member)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //Alert\r\n    function AlertMemberNotFoundTech() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Member Not Found</Alert.Heading>\r\n              <p>\r\n              Candidate with the mentioned interview id was not found. Maybe you entered wrong id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n    function renderData(member) {   \r\n        console.log(\"candidate dispatcher object returned from the server : \", member);\r\n        if(member!==undefined && member!==null && member.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience</th>\r\n                            <th>Primary<br></br>Skills</th>\r\n                            <th>Secondary <br></br>Skills</th>\r\n                            <th>Notice <br></br>Period</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>{member.data.candidateid}</td>\r\n                            <td>{member.data.candidatename}</td>\r\n                            <td>{member.data.location}</td>\r\n                            <td>{member.data.qualification}</td>\r\n                            <td>{member.data.designation}</td>\r\n                            <td>{member.data.experience}</td>\r\n                            <td>{member.data.primaryskills}</td>\r\n                            <td>{member.data.secondaryskills}</td>\r\n                            <td>{member.data.noticeperiod}</td>\r\n                            \r\n                        </tr>\r\n                        </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n        if(member!==undefined && member===null){\r\n            console.log(\"called the alert for tech\");\r\n            return(<AlertMemberNotFoundTech show=\"true\"/>);\r\n        }\r\n    }        \r\n\r\n}\r\n\r\nexport default ViewInterviewMemberForTech;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\panelmember\\hrservices\\surrenderashr.js",["574","575"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SurrenderAsHRAction from '../../../actions/panelmember/surrender_as_hr';\r\n\r\nconst SurrenderAsHRPanel = (props) => {\r\n\r\n    var pathVar = null;\r\n\r\n\r\n\r\n    let panelMember = useSelector((state)=>state.HRReducer.panelmembers);\r\n\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>SurrenderAsHRAction_Func(), [])\r\n        const SurrenderAsHRAction_Func = () => {\r\n            dispatcher(SurrenderAsHRAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathVar\").value;\r\n        dispatcher(SurrenderAsHRAction(pathVar));\r\n        //renderData(panelMember);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter your Panel ID</Form.Label>\r\n                        <Form.Control id=\"pathVar\" type=\"text\" placeholder=\"Panel ID\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Surrender\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(panelMember)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertPanelMemberNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Panel Member Not Found</Alert.Heading>\r\n              <p>\r\n                Panel Member with the mentioned panel id was not found. Maybe you entered wrong panel id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n      }\r\n\r\n    function renderData(panelMember) {   \r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMember);\r\n        if(panelMember!==undefined && panelMember!==null && panelMember.length!==0){\r\n            console.log(\"Surrendered successfully!\");\r\n            return(\r\n                <div>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Panel ID</th>\r\n                            <th>Location</th>\r\n                            <th>Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{panelMember.panelid}</td>\r\n                            <td>{panelMember.location}</td>\r\n                            <td>{panelMember.type}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Alert><Alert.Heading>Surrendered Successfully!</Alert.Heading></Alert>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        if(panelMember!==undefined && panelMember===null){\r\n            //return(<Box/>);\r\n            console.log(\"called the alert\");\r\n            return(<AlertPanelMemberNotFound show=\"true\"/>);\r\n        }\r\n        \r\n    }        \r\n\r\n}\r\n\r\nexport default SurrenderAsHRPanel;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\InterviewScheduler.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\hrInterviewScheduler.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\get_candidates.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\get_panel.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\add_techinterview.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\cancelinterview_action.js",["576","577","578","579"],"import axios from 'axios'\r\n\r\nconst CancelInterviewAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewschedulerdel/'+props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'CANCEL_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'CANCEL_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default CancelInterviewAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\add_hrinterview.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\cancelhrinterview_action.js",["580","581","582","583"],"import axios from 'axios'\r\n\r\nconst CancelHRInterviewAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/hrinterviewschedulerdel/'+props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'CANCEL_HR_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'CANCEL_HR_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default CancelHRInterviewAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\updatehrinterviewschedule_action.js",["584","585","586","587"],"import axios from 'axios'\r\n\r\nconst UpdateHRInterviewScheduleAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/hrinterviewscheduler/'+props;\r\n        const serverResponse = await axios.put(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'UPDATE_HR_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'UPDATE_HR_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateHRInterviewScheduleAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\updateinterviewschedule_action.js",["588","589","590","591"],"import axios from 'axios'\r\n\r\nconst UpdateInterviewScheduleAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/'+props;\r\n        const serverResponse = await axios.put(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'UPDATE_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'UPDATE_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateInterviewScheduleAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\showinterviewmembers_action.js",["592"],"import axios from 'axios'\r\n\r\nconst ShowInterviewMemberAction = ()=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewmembers';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_LIST_FOR_HR', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!=null || serverResponse==null){\r\n            console.log(\"Something went wrong while connecting to srver\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShowInterviewMemberAction;\r\n\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\showlistforhr_action.js",["593","594","595","596"],"import axios from 'axios'\r\n\r\nconst ShowListForHrAction  = (props)=> {\r\n    return async function(dispatch){\r\n        var err= null;\r\n        var onLoad =0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/hr/'+ props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_HR', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!=null && props!=undefined){\r\n            console.log(\"No user Found\");\r\n            dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_HR', payload: null});\r\n        }\r\n    }\r\n}\r\nexport default ShowListForHrAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js",["597","598","599","600"],"import axios from 'axios'\r\n\r\nconst ViewInterviewMemberForTechAction = (props)=> {\r\n\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/tech/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_TECH', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_TECH', payload: null});\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ViewInterviewMemberForTechAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\givetechratingaction.js",["601","602","603","604"],"import axios from 'axios'\r\n\r\nconst GiveTechRatingAction = (props)=> {\r\n\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/tech/rating/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'GIVE_TECH_RATING', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'GIVE_TECH_RATING', payload: null});\r\n        }\r\n    }\r\n\r\n}\r\nexport default GiveTechRatingAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\viewallinterviewmembersaction.js",["605"],"import axios from 'axios'\r\n\r\nconst ViewAllInterviewMembersForTechAction = ()=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/tech';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_LIST_FOR_TECH', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!=null || serverResponse==null){\r\n            console.log(\"Something went wrong while connecting to srver\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewAllInterviewMembersForTechAction;\r\n\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\surrender_as_hr.js",["606","607","608"],"//Action for viewing a candidate for HR panel\r\nimport axios from 'axios'\r\n\r\nconst SurrenderAsHRAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/panelmember/hr/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'SURRENDER_AS_HR', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        console.log(serverResponse);\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'SURRENDER_AS_HR', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SurrenderAsHRAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctQualificationAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctNameAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\view_a_cand_tech_action.js",["609","610","611"],"import axios from 'axios'\r\n\r\nconst ViewaCandidateForTechAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/candidate/techp/search/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_A_CANDIDATE_FOR_TECH', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        console.log(serverResponse);\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'VIEW_A_CANDIDATE_FOR_TECH', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewaCandidateForTechAction;\r\n\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\employee\\searchemployee_action.js",["612","613","614"],"import axios from 'axios'\r\n\r\nconst SearchEmployeeAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/employee/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'SEARCH_EMPLOYEE', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        console.log(serverResponse);\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'SEARCH_EMPLOYEE', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchEmployeeAction;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\view_a_cand_hr.js",["615","616","617"],"//Action for viewing a candidate for hr panel\r\nimport axios from 'axios'\r\n\r\nconst ViewaCandidateForHRAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/candidate/hr/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_A_CANDIDATE_FOR_HR', payload: response.data}))\r\n        .catch(error => console.log(err=error));\r\n        console.log(serverResponse);\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'VIEW_A_CANDIDATE_FOR_HR', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewaCandidateForHRAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctLocationAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctDesignationAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDistinctPrimarySkillAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByNameAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\Candidate.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getLocationsAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\viewByAllAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\candidate\\adminactions\\addCandidateAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\givehrrating_action.js",["618","619","620","621"],"import axios from 'axios';\r\n\r\nconst GiveHrRatingAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/interviewscheduler/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'GIVE_HR_RATING', payload:response}))\r\n            .catch(error => console.log(err=error));\r\n            if(err!==null && props!=undefined){\r\n                console.log(\"No User Found\");\r\n                dispatch({type:'GIVE_HR_RATING', payload: null});\r\n            }\r\n        }\r\n    }\r\n\r\nexport default GiveHrRatingAction;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\addpanelmember_action.js",["622","623"],"import axios from 'axios'\r\n\r\nconst AddPanelMemberAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        if(props!=null){\r\n            console.log(props.pathVar, props.body);\r\n            const url = 'http://localhost:9090/cgits/panelmember/'+props.pathVar;\r\n            const serverResponse = await axios.post(url, props.body) //await can only be used with async function....\r\n            .then(response => dispatch({type: 'ADD_PANEL_MEMBER', payload: response.data}))\r\n            .catch(error => console.log(err=error));\r\n            \r\n            console.log(serverResponse);\r\n            if(serverResponse.data===undefined){\r\n            console.log(\"COULD NOT ADD PANEL MEMBER, SINCE EMPLOYEE WAS NOT FOUND\");\r\n        }\r\n        }\r\n        if(err!==null && props!==undefined){\r\n            console.log(\"Operation could not be completed, error from server\");\r\n            dispatch({type: 'ADD_PANEL_MEMBER', payload: null});\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default AddPanelMemberAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\surrender_as_tech_action.js",["624","625","626","627"],"import axios from 'axios'\r\n\r\nconst SurrenderAsATechAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/panelmember/tech/search/'+props;\r\n\r\n       \r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'SURRENDER_AS_A_TECH', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'SURRENDER_AS_A_TECH', payload: null});\r\n        }\r\n    }\r\n}\r\nexport default SurrenderAsATechAction;\r\n","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\deletepanelmember_action.js",["628","629","630","631"],"\r\nimport axios from 'axios';\r\n\r\nconst DeletePanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/panelmember/' + props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'DELETE_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(err = error));\r\n        console.log(props);\r\n        if (err !== null && props != undefined) {\r\n            console.log(\"No User Found\");\r\n            dispatch({ type: 'DELETE_PANELMEMBER', payload: null });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeletePanelMemberAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\panelmember\\showpanelmembers_action.js",["632","633","634"],"import axios from 'axios';\r\n\r\nconst ShowPanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/panelmembers';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'SHOW_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(err = error));\r\n        console.log(serverResponse);\r\n    }\r\n}\r\n\r\nexport default ShowPanelMemberAction;","F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\interviewscheduler\\getCandidatesFromTechAction.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\reducers\\loginReducer.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\components\\MultiLogin.js",["635","636","637","638","639"],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\models\\Login.js",[],"F:\\Combine_Sprint2_Sprint3\\RunningRutu\\ITS DEMO\\src\\actions\\loginAction.js",[],{"ruleId":"640","severity":1,"message":"641","line":10,"column":57,"nodeType":"642","messageId":"643","endLine":10,"endColumn":64},{"ruleId":"640","severity":1,"message":"644","line":12,"column":10,"nodeType":"642","messageId":"643","endLine":12,"endColumn":23},{"ruleId":"640","severity":1,"message":"645","line":12,"column":25,"nodeType":"642","messageId":"643","endLine":12,"endColumn":31},{"ruleId":"646","replacedBy":"647"},{"ruleId":"648","replacedBy":"649"},{"ruleId":"640","severity":1,"message":"650","line":10,"column":8,"nodeType":"642","messageId":"643","endLine":10,"endColumn":30},{"ruleId":"640","severity":1,"message":"651","line":14,"column":23,"nodeType":"642","messageId":"643","endLine":14,"endColumn":34},{"ruleId":"640","severity":1,"message":"652","line":15,"column":10,"nodeType":"642","messageId":"643","endLine":15,"endColumn":16},{"ruleId":"640","severity":1,"message":"653","line":6,"column":10,"nodeType":"642","messageId":"643","endLine":6,"endColumn":15},{"ruleId":"640","severity":1,"message":"654","line":6,"column":17,"nodeType":"642","messageId":"643","endLine":6,"endColumn":21},{"ruleId":"640","severity":1,"message":"655","line":6,"column":23,"nodeType":"642","messageId":"643","endLine":6,"endColumn":29},{"ruleId":"640","severity":1,"message":"656","line":8,"column":10,"nodeType":"642","messageId":"643","endLine":8,"endColumn":16},{"ruleId":"640","severity":1,"message":"657","line":8,"column":18,"nodeType":"642","messageId":"643","endLine":8,"endColumn":21},{"ruleId":"640","severity":1,"message":"651","line":8,"column":23,"nodeType":"642","messageId":"643","endLine":8,"endColumn":34},{"ruleId":"640","severity":1,"message":"652","line":9,"column":10,"nodeType":"642","messageId":"643","endLine":9,"endColumn":16},{"ruleId":"640","severity":1,"message":"653","line":7,"column":10,"nodeType":"642","messageId":"643","endLine":7,"endColumn":15},{"ruleId":"640","severity":1,"message":"654","line":7,"column":17,"nodeType":"642","messageId":"643","endLine":7,"endColumn":21},{"ruleId":"640","severity":1,"message":"655","line":7,"column":23,"nodeType":"642","messageId":"643","endLine":7,"endColumn":29},{"ruleId":"640","severity":1,"message":"656","line":9,"column":10,"nodeType":"642","messageId":"643","endLine":9,"endColumn":16},{"ruleId":"640","severity":1,"message":"657","line":9,"column":18,"nodeType":"642","messageId":"643","endLine":9,"endColumn":21},{"ruleId":"640","severity":1,"message":"651","line":9,"column":23,"nodeType":"642","messageId":"643","endLine":9,"endColumn":34},{"ruleId":"640","severity":1,"message":"652","line":10,"column":10,"nodeType":"642","messageId":"643","endLine":10,"endColumn":16},{"ruleId":"640","severity":1,"message":"653","line":6,"column":10,"nodeType":"642","messageId":"643","endLine":6,"endColumn":15},{"ruleId":"640","severity":1,"message":"654","line":6,"column":17,"nodeType":"642","messageId":"643","endLine":6,"endColumn":21},{"ruleId":"640","severity":1,"message":"655","line":6,"column":23,"nodeType":"642","messageId":"643","endLine":6,"endColumn":29},{"ruleId":"640","severity":1,"message":"658","line":8,"column":9,"nodeType":"642","messageId":"643","endLine":8,"endColumn":12},{"ruleId":"640","severity":1,"message":"659","line":8,"column":13,"nodeType":"642","messageId":"643","endLine":8,"endColumn":17},{"ruleId":"640","severity":1,"message":"660","line":8,"column":18,"nodeType":"642","messageId":"643","endLine":8,"endColumn":27},{"ruleId":"640","severity":1,"message":"661","line":8,"column":28,"nodeType":"642","messageId":"643","endLine":8,"endColumn":37},{"ruleId":"640","severity":1,"message":"656","line":8,"column":39,"nodeType":"642","messageId":"643","endLine":8,"endColumn":45},{"ruleId":"640","severity":1,"message":"657","line":8,"column":47,"nodeType":"642","messageId":"643","endLine":8,"endColumn":50},{"ruleId":"640","severity":1,"message":"651","line":8,"column":52,"nodeType":"642","messageId":"643","endLine":8,"endColumn":63},{"ruleId":"640","severity":1,"message":"652","line":9,"column":10,"nodeType":"642","messageId":"643","endLine":9,"endColumn":16},{"ruleId":"640","severity":1,"message":"662","line":3,"column":10,"nodeType":"642","messageId":"643","endLine":3,"endColumn":25},{"ruleId":"640","severity":1,"message":"657","line":4,"column":29,"nodeType":"642","messageId":"643","endLine":4,"endColumn":32},{"ruleId":"663","severity":1,"message":"664","line":156,"column":173,"nodeType":"665","endLine":156,"endColumn":264},{"ruleId":"640","severity":1,"message":"656","line":1,"column":10,"nodeType":"642","messageId":"643","endLine":1,"endColumn":16},{"ruleId":"640","severity":1,"message":"666","line":1,"column":18,"nodeType":"642","messageId":"643","endLine":1,"endColumn":26},{"ruleId":"640","severity":1,"message":"652","line":1,"column":39,"nodeType":"642","messageId":"643","endLine":1,"endColumn":45},{"ruleId":"640","severity":1,"message":"657","line":1,"column":47,"nodeType":"642","messageId":"643","endLine":1,"endColumn":50},{"ruleId":"640","severity":1,"message":"661","line":1,"column":58,"nodeType":"642","messageId":"643","endLine":1,"endColumn":67},{"ruleId":"667","severity":1,"message":"668","line":36,"column":19,"nodeType":"665","endLine":36,"endColumn":22},{"ruleId":"667","severity":1,"message":"668","line":55,"column":19,"nodeType":"665","endLine":55,"endColumn":22},{"ruleId":"667","severity":1,"message":"668","line":74,"column":19,"nodeType":"665","endLine":74,"endColumn":22},{"ruleId":"640","severity":1,"message":"669","line":5,"column":8,"nodeType":"642","messageId":"643","endLine":5,"endColumn":29},{"ruleId":"640","severity":1,"message":"660","line":7,"column":10,"nodeType":"642","messageId":"643","endLine":7,"endColumn":19},{"ruleId":"640","severity":1,"message":"652","line":7,"column":21,"nodeType":"642","messageId":"643","endLine":7,"endColumn":27},{"ruleId":"640","severity":1,"message":"670","line":3,"column":8,"nodeType":"642","messageId":"643","endLine":3,"endColumn":23},{"ruleId":"640","severity":1,"message":"661","line":2,"column":51,"nodeType":"642","messageId":"643","endLine":2,"endColumn":60},{"ruleId":"640","severity":1,"message":"671","line":2,"column":8,"nodeType":"642","messageId":"643","endLine":2,"endColumn":34},{"ruleId":"640","severity":1,"message":"672","line":3,"column":8,"nodeType":"642","messageId":"643","endLine":3,"endColumn":32},{"ruleId":"640","severity":1,"message":"673","line":3,"column":8,"nodeType":"642","messageId":"643","endLine":3,"endColumn":24},{"ruleId":"640","severity":1,"message":"674","line":4,"column":8,"nodeType":"642","messageId":"643","endLine":4,"endColumn":25},{"ruleId":"675","severity":1,"message":"676","line":12,"column":61,"nodeType":"677","endLine":12,"endColumn":63,"suggestions":"678"},{"ruleId":"675","severity":1,"message":"679","line":12,"column":59,"nodeType":"677","endLine":12,"endColumn":61,"suggestions":"680"},{"ruleId":"640","severity":1,"message":"657","line":5,"column":14,"nodeType":"642","messageId":"643","endLine":5,"endColumn":17},{"ruleId":"640","severity":1,"message":"681","line":5,"column":19,"nodeType":"642","messageId":"643","endLine":5,"endColumn":26},{"ruleId":"640","severity":1,"message":"682","line":5,"column":28,"nodeType":"642","messageId":"643","endLine":5,"endColumn":36},{"ruleId":"640","severity":1,"message":"656","line":5,"column":38,"nodeType":"642","messageId":"643","endLine":5,"endColumn":44},{"ruleId":"640","severity":1,"message":"651","line":5,"column":46,"nodeType":"642","messageId":"643","endLine":5,"endColumn":57},{"ruleId":"640","severity":1,"message":"683","line":5,"column":59,"nodeType":"642","messageId":"643","endLine":5,"endColumn":67},{"ruleId":"640","severity":1,"message":"659","line":5,"column":86,"nodeType":"642","messageId":"643","endLine":5,"endColumn":90},{"ruleId":"640","severity":1,"message":"684","line":5,"column":92,"nodeType":"642","messageId":"643","endLine":5,"endColumn":105},{"ruleId":"640","severity":1,"message":"685","line":5,"column":115,"nodeType":"642","messageId":"643","endLine":5,"endColumn":120},{"ruleId":"640","severity":1,"message":"686","line":5,"column":122,"nodeType":"642","messageId":"643","endLine":5,"endColumn":133},{"ruleId":"640","severity":1,"message":"687","line":5,"column":135,"nodeType":"642","messageId":"643","endLine":5,"endColumn":138},{"ruleId":"640","severity":1,"message":"688","line":5,"column":140,"nodeType":"642","messageId":"643","endLine":5,"endColumn":143},{"ruleId":"640","severity":1,"message":"689","line":5,"column":145,"nodeType":"642","messageId":"643","endLine":5,"endColumn":149},{"ruleId":"640","severity":1,"message":"690","line":5,"column":151,"nodeType":"642","messageId":"643","endLine":5,"endColumn":156},{"ruleId":"640","severity":1,"message":"691","line":5,"column":158,"nodeType":"642","messageId":"643","endLine":5,"endColumn":167},{"ruleId":"640","severity":1,"message":"692","line":5,"column":169,"nodeType":"642","messageId":"643","endLine":5,"endColumn":180},{"ruleId":"640","severity":1,"message":"693","line":5,"column":10,"nodeType":"642","messageId":"643","endLine":5,"endColumn":19},{"ruleId":"640","severity":1,"message":"657","line":5,"column":21,"nodeType":"642","messageId":"643","endLine":5,"endColumn":24},{"ruleId":"640","severity":1,"message":"681","line":5,"column":26,"nodeType":"642","messageId":"643","endLine":5,"endColumn":33},{"ruleId":"640","severity":1,"message":"682","line":5,"column":35,"nodeType":"642","messageId":"643","endLine":5,"endColumn":43},{"ruleId":"640","severity":1,"message":"656","line":5,"column":45,"nodeType":"642","messageId":"643","endLine":5,"endColumn":51},{"ruleId":"640","severity":1,"message":"651","line":5,"column":53,"nodeType":"642","messageId":"643","endLine":5,"endColumn":64},{"ruleId":"640","severity":1,"message":"683","line":5,"column":66,"nodeType":"642","messageId":"643","endLine":5,"endColumn":74},{"ruleId":"640","severity":1,"message":"659","line":5,"column":93,"nodeType":"642","messageId":"643","endLine":5,"endColumn":97},{"ruleId":"640","severity":1,"message":"684","line":5,"column":99,"nodeType":"642","messageId":"643","endLine":5,"endColumn":112},{"ruleId":"640","severity":1,"message":"686","line":5,"column":129,"nodeType":"642","messageId":"643","endLine":5,"endColumn":140},{"ruleId":"640","severity":1,"message":"687","line":5,"column":142,"nodeType":"642","messageId":"643","endLine":5,"endColumn":145},{"ruleId":"640","severity":1,"message":"689","line":5,"column":152,"nodeType":"642","messageId":"643","endLine":5,"endColumn":156},{"ruleId":"640","severity":1,"message":"690","line":5,"column":158,"nodeType":"642","messageId":"643","endLine":5,"endColumn":163},{"ruleId":"640","severity":1,"message":"691","line":5,"column":165,"nodeType":"642","messageId":"643","endLine":5,"endColumn":174},{"ruleId":"640","severity":1,"message":"692","line":5,"column":176,"nodeType":"642","messageId":"643","endLine":5,"endColumn":187},{"ruleId":"640","severity":1,"message":"672","line":3,"column":8,"nodeType":"642","messageId":"643","endLine":3,"endColumn":32},{"ruleId":"675","severity":1,"message":"694","line":11,"column":67,"nodeType":"677","endLine":11,"endColumn":69,"suggestions":"695"},{"ruleId":"675","severity":1,"message":"696","line":11,"column":69,"nodeType":"677","endLine":11,"endColumn":71,"suggestions":"697"},{"ruleId":"640","severity":1,"message":"652","line":2,"column":34,"nodeType":"642","messageId":"643","endLine":2,"endColumn":40},{"ruleId":"675","severity":1,"message":"698","line":12,"column":46,"nodeType":"677","endLine":12,"endColumn":48,"suggestions":"699"},{"ruleId":"640","severity":1,"message":"700","line":4,"column":10,"nodeType":"642","messageId":"643","endLine":4,"endColumn":16},{"ruleId":"675","severity":1,"message":"701","line":15,"column":63,"nodeType":"677","endLine":15,"endColumn":65,"suggestions":"702"},{"ruleId":"640","severity":1,"message":"703","line":69,"column":14,"nodeType":"642","messageId":"643","endLine":69,"endColumn":17},{"ruleId":"640","severity":1,"message":"704","line":72,"column":15,"nodeType":"642","messageId":"643","endLine":72,"endColumn":25},{"ruleId":"640","severity":1,"message":"700","line":1,"column":10,"nodeType":"642","messageId":"643","endLine":1,"endColumn":16},{"ruleId":"640","severity":1,"message":"705","line":3,"column":42,"nodeType":"642","messageId":"643","endLine":3,"endColumn":47},{"ruleId":"675","severity":1,"message":"706","line":13,"column":56,"nodeType":"677","endLine":13,"endColumn":58,"suggestions":"707"},{"ruleId":"640","severity":1,"message":"708","line":2,"column":17,"nodeType":"642","messageId":"643","endLine":2,"endColumn":25},{"ruleId":"640","severity":1,"message":"709","line":4,"column":8,"nodeType":"642","messageId":"643","endLine":4,"endColumn":28},{"ruleId":"675","severity":1,"message":"710","line":20,"column":58,"nodeType":"677","endLine":20,"endColumn":60,"suggestions":"711"},{"ruleId":"712","severity":1,"message":"713","line":32,"column":15,"nodeType":"714","messageId":"715","endLine":32,"endColumn":17},{"ruleId":"712","severity":1,"message":"713","line":32,"column":32,"nodeType":"714","messageId":"715","endLine":32,"endColumn":34},{"ruleId":"640","severity":1,"message":"652","line":3,"column":34,"nodeType":"642","messageId":"643","endLine":3,"endColumn":40},{"ruleId":"675","severity":1,"message":"716","line":14,"column":48,"nodeType":"677","endLine":14,"endColumn":50,"suggestions":"717"},{"ruleId":"640","severity":1,"message":"700","line":1,"column":9,"nodeType":"642","messageId":"643","endLine":1,"endColumn":15},{"ruleId":"675","severity":1,"message":"718","line":14,"column":56,"nodeType":"677","endLine":14,"endColumn":58,"suggestions":"719"},{"ruleId":"675","severity":1,"message":"720","line":15,"column":57,"nodeType":"677","endLine":15,"endColumn":59,"suggestions":"721"},{"ruleId":"640","severity":1,"message":"722","line":1,"column":10,"nodeType":"642","messageId":"643","endLine":1,"endColumn":15},{"ruleId":"640","severity":1,"message":"685","line":1,"column":22,"nodeType":"642","messageId":"643","endLine":1,"endColumn":27},{"ruleId":"712","severity":1,"message":"713","line":301,"column":32,"nodeType":"714","messageId":"715","endLine":301,"endColumn":34},{"ruleId":"712","severity":1,"message":"713","line":320,"column":31,"nodeType":"714","messageId":"715","endLine":320,"endColumn":33},{"ruleId":"712","severity":1,"message":"713","line":340,"column":31,"nodeType":"714","messageId":"715","endLine":340,"endColumn":33},{"ruleId":"640","severity":1,"message":"700","line":1,"column":10,"nodeType":"642","messageId":"643","endLine":1,"endColumn":16},{"ruleId":"640","severity":1,"message":"705","line":3,"column":42,"nodeType":"642","messageId":"643","endLine":3,"endColumn":47},{"ruleId":"675","severity":1,"message":"723","line":13,"column":65,"nodeType":"677","endLine":13,"endColumn":67,"suggestions":"724"},{"ruleId":"640","severity":1,"message":"725","line":23,"column":8,"nodeType":"642","messageId":"643","endLine":23,"endColumn":14},{"ruleId":"640","severity":1,"message":"726","line":24,"column":8,"nodeType":"642","messageId":"643","endLine":24,"endColumn":20},{"ruleId":"640","severity":1,"message":"652","line":2,"column":34,"nodeType":"642","messageId":"643","endLine":2,"endColumn":40},{"ruleId":"675","severity":1,"message":"727","line":12,"column":55,"nodeType":"677","endLine":12,"endColumn":57,"suggestions":"728"},{"ruleId":"640","severity":1,"message":"700","line":2,"column":10,"nodeType":"642","messageId":"643","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"729","line":13,"column":58,"nodeType":"677","endLine":13,"endColumn":60,"suggestions":"730"},{"ruleId":"640","severity":1,"message":"700","line":1,"column":10,"nodeType":"642","messageId":"643","endLine":1,"endColumn":16},{"ruleId":"640","severity":1,"message":"705","line":3,"column":42,"nodeType":"642","messageId":"643","endLine":3,"endColumn":47},{"ruleId":"675","severity":1,"message":"731","line":16,"column":63,"nodeType":"677","endLine":16,"endColumn":65,"suggestions":"732"},{"ruleId":"640","severity":1,"message":"700","line":1,"column":10,"nodeType":"642","messageId":"643","endLine":1,"endColumn":16},{"ruleId":"675","severity":1,"message":"733","line":13,"column":58,"nodeType":"677","endLine":13,"endColumn":60,"suggestions":"734"},{"ruleId":"675","severity":1,"message":"735","line":12,"column":70,"nodeType":"677","endLine":12,"endColumn":72,"suggestions":"736"},{"ruleId":"640","severity":1,"message":"700","line":1,"column":10,"nodeType":"642","messageId":"643","endLine":1,"endColumn":16},{"ruleId":"675","severity":1,"message":"737","line":17,"column":53,"nodeType":"677","endLine":17,"endColumn":55,"suggestions":"738"},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":10,"column":15,"nodeType":"642","messageId":"643","endLine":10,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":13,"column":31,"nodeType":"714","messageId":"715","endLine":13,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":10,"column":15,"nodeType":"642","messageId":"643","endLine":10,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":13,"column":31,"nodeType":"714","messageId":"715","endLine":13,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":10,"column":15,"nodeType":"642","messageId":"643","endLine":10,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":13,"column":31,"nodeType":"714","messageId":"715","endLine":13,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":10,"column":15,"nodeType":"642","messageId":"643","endLine":10,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":13,"column":31,"nodeType":"714","messageId":"715","endLine":13,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":9,"column":15,"nodeType":"642","messageId":"643","endLine":9,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":12,"column":30,"nodeType":"714","messageId":"715","endLine":12,"endColumn":32},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":7,"column":13,"nodeType":"642","messageId":"643","endLine":7,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":10,"column":15,"nodeType":"642","messageId":"643","endLine":10,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":13,"column":31,"nodeType":"714","messageId":"715","endLine":13,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":7,"column":13,"nodeType":"642","messageId":"643","endLine":7,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":10,"column":15,"nodeType":"642","messageId":"643","endLine":10,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":13,"column":31,"nodeType":"714","messageId":"715","endLine":13,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"739","line":2,"column":8,"nodeType":"642","messageId":"643","endLine":2,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":7,"column":13,"nodeType":"642","messageId":"643","endLine":7,"endColumn":19},{"ruleId":"712","severity":1,"message":"713","line":15,"column":31,"nodeType":"714","messageId":"715","endLine":15,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"712","severity":1,"message":"713","line":14,"column":31,"nodeType":"714","messageId":"715","endLine":14,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"712","severity":1,"message":"713","line":14,"column":31,"nodeType":"714","messageId":"715","endLine":14,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":2,"column":8,"nodeType":"642","messageId":"643","endLine":2,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":7,"column":13,"nodeType":"642","messageId":"643","endLine":7,"endColumn":19},{"ruleId":"712","severity":1,"message":"713","line":15,"column":31,"nodeType":"714","messageId":"715","endLine":15,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":9,"column":15,"nodeType":"642","messageId":"643","endLine":9,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":12,"column":35,"nodeType":"714","messageId":"715","endLine":12,"endColumn":37},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":11,"column":15,"nodeType":"642","messageId":"643","endLine":11,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":14,"column":31,"nodeType":"714","messageId":"715","endLine":14,"endColumn":33},{"ruleId":"640","severity":1,"message":"739","line":2,"column":8,"nodeType":"642","messageId":"643","endLine":2,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":7,"column":13,"nodeType":"642","messageId":"643","endLine":7,"endColumn":19},{"ruleId":"640","severity":1,"message":"741","line":10,"column":15,"nodeType":"642","messageId":"643","endLine":10,"endColumn":29},{"ruleId":"712","severity":1,"message":"713","line":14,"column":35,"nodeType":"714","messageId":"715","endLine":14,"endColumn":37},{"ruleId":"640","severity":1,"message":"739","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"740","line":6,"column":13,"nodeType":"642","messageId":"643","endLine":6,"endColumn":19},{"ruleId":"640","severity":1,"message":"742","line":12,"column":41,"nodeType":"642","messageId":"643","endLine":12,"endColumn":44},{"ruleId":"640","severity":1,"message":"685","line":6,"column":16,"nodeType":"642","messageId":"643","endLine":6,"endColumn":21},{"ruleId":"640","severity":1,"message":"743","line":11,"column":5,"nodeType":"642","messageId":"643","endLine":11,"endColumn":10},{"ruleId":"640","severity":1,"message":"744","line":12,"column":5,"nodeType":"642","messageId":"643","endLine":12,"endColumn":13},{"ruleId":"712","severity":1,"message":"713","line":65,"column":32,"nodeType":"714","messageId":"715","endLine":65,"endColumn":34},{"ruleId":"712","severity":1,"message":"713","line":81,"column":32,"nodeType":"714","messageId":"715","endLine":81,"endColumn":34},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'MDBTimePicker' is defined but never used.","'MDBCol' is defined but never used.","no-native-reassign",["745"],"no-negated-in-lhs",["746"],"'MultipleLoginComponent' is defined but never used.","'NavDropdown' is defined but never used.","'Button' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Jumbotron' is defined but never used.","'Container' is defined but never used.","'getAllByAltText' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Carousel' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ViewACandidateForTech' is defined but never used.","'SearchCandidate' is defined but never used.","'techInterviewScheduleAdmin' is defined but never used.","'hrInterviewScheduleAdmin' is defined but never used.","'ShowPanelMembers' is defined but never used.","'DeletePanelMember' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'CancelHRInterviewAction_Function'. Either include it or remove the dependency array.","ArrayExpression",["747"],"React Hook React.useEffect has a missing dependency: 'CancelInterviewAction_Function'. Either include it or remove the dependency array.",["748"],"'Spinner' is defined but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'ButtonToolbar' is defined but never used.","'Table' is defined but never used.","'ButtonGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Grid' is defined but never used.","'Panel' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'HelpBlock' is defined but never used.","React Hook React.useEffect has a missing dependency: 'UpdateInterviewScheduleAction_Function'. Either include it or remove the dependency array.",["749"],"React Hook React.useEffect has a missing dependency: 'UpdateHRInterviewScheduleAction_Function'. Either include it or remove the dependency array.",["750"],"React Hook React.useEffect has a missing dependency: 'PanelMemberList'. Either include it or remove the dependency array.",["751"],"'render' is defined but never used.","React Hook React.useEffect has a missing dependency: 'DeletePanelMemberAction_Function'. Either include it or remove the dependency array.",["752"],"'Box' is defined but never used.","'handleShow' is assigned a value but never used.","'Modal' is defined but never used.","React Hook React.useEffect has a missing dependency: 'SurrenderAsATechAction_Func'. Either include it or remove the dependency array.",["753"],"'useState' is defined but never used.","'SearchEmployeeAction' is defined but never used.","React Hook React.useEffect has a missing dependency: 'AddPanelMemberAction_Function'. Either include it or remove the dependency array.",["754"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'InterviewMemberList'. Either include it or remove the dependency array.",["755"],"React Hook React.useEffect has a missing dependency: 'GiveHrRatingAction_Function'. Either include it or remove the dependency array.",["756"],"React Hook React.useEffect has a missing dependency: 'ShowListForHrAction_Function'. Either include it or remove the dependency array.",["757"],"'Alert' is defined but never used.","React Hook React.useEffect has a missing dependency: 'ViewaCandidateForTechAction_Function'. Either include it or remove the dependency array.",["758"],"'filter' is assigned a value but never used.","'initialState' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'InterviewMemberForTechList'. Either include it or remove the dependency array.",["759"],"React Hook React.useEffect has a missing dependency: 'SearchEmployeeAction_Function'. Either include it or remove the dependency array.",["760"],"React Hook React.useEffect has a missing dependency: 'ViewaCandidateForHRAction_Function'. Either include it or remove the dependency array.",["761"],"React Hook React.useEffect has a missing dependency: 'GiveTechRatingAction_Function'. Either include it or remove the dependency array.",["762"],"React Hook React.useEffect has a missing dependency: 'ViewInterviewMemberForTechAction_Function'. Either include it or remove the dependency array.",["763"],"React Hook React.useEffect has a missing dependency: 'SurrenderAsHRAction_Func'. Either include it or remove the dependency array.",["764"],"'axios' is defined but never used.","'onLoad' is assigned a value but never used.","'serverResponse' is assigned a value but never used.","'err' is assigned a value but never used.","'email' is defined but never used.","'password' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},"Update the dependencies array to be: [CancelHRInterviewAction_Function]",{"range":"801","text":"802"},"Update the dependencies array to be: [CancelInterviewAction_Function]",{"range":"803","text":"804"},"Update the dependencies array to be: [UpdateInterviewScheduleAction_Function]",{"range":"805","text":"806"},"Update the dependencies array to be: [UpdateHRInterviewScheduleAction_Function]",{"range":"807","text":"808"},"Update the dependencies array to be: [PanelMemberList]",{"range":"809","text":"810"},"Update the dependencies array to be: [DeletePanelMemberAction_Function]",{"range":"811","text":"812"},"Update the dependencies array to be: [SurrenderAsATechAction_Func]",{"range":"813","text":"814"},"Update the dependencies array to be: [AddPanelMemberAction_Function]",{"range":"815","text":"816"},"Update the dependencies array to be: [InterviewMemberList]",{"range":"817","text":"818"},"Update the dependencies array to be: [GiveHrRatingAction_Function]",{"range":"819","text":"820"},"Update the dependencies array to be: [ShowListForHrAction_Function]",{"range":"821","text":"822"},"Update the dependencies array to be: [ViewaCandidateForTechAction_Function]",{"range":"823","text":"824"},"Update the dependencies array to be: [InterviewMemberForTechList]",{"range":"825","text":"826"},"Update the dependencies array to be: [SearchEmployeeAction_Function]",{"range":"827","text":"828"},"Update the dependencies array to be: [ViewaCandidateForHRAction_Function]",{"range":"829","text":"830"},"Update the dependencies array to be: [GiveTechRatingAction_Function]",{"range":"831","text":"832"},"Update the dependencies array to be: [ViewInterviewMemberForTechAction_Function]",{"range":"833","text":"834"},"Update the dependencies array to be: [SurrenderAsHRAction_Func]",{"range":"835","text":"836"},[492,494],"[CancelHRInterviewAction_Function]",[486,488],"[CancelInterviewAction_Function]",[493,495],"[UpdateInterviewScheduleAction_Function]",[503,505],"[UpdateHRInterviewScheduleAction_Function]",[461,463],"[PanelMemberList]",[575,577],"[DeletePanelMemberAction_Function]",[564,566],"[SurrenderAsATechAction_Func]",[777,779],"[AddPanelMemberAction_Function]",[558,560],"[InterviewMemberList]",[560,562],"[GiveHrRatingAction_Function]",[609,611],"[ShowListForHrAction_Function]",[572,574],"[ViewaCandidateForTechAction_Function]",[499,501],"[InterviewMemberForTechList]",[544,546],"[SearchEmployeeAction_Function]",[561,563],"[ViewaCandidateForHRAction_Function]",[571,573],"[GiveTechRatingAction_Function]",[562,564],"[ViewInterviewMemberForTechAction_Function]",[546,548],"[SurrenderAsHRAction_Func]"]