[{"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\index.js":"1","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reportWebVitals.js":"2","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminInterviewReducer.js":"3","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminPanelMemberReducer.js":"4","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminCandidateReducer.js":"5","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\App.js":"6","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\hometech.js":"7","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\homeadmin.js":"8","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\home.js":"9","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\about.js":"10","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\homehr.js":"11","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\admin.js":"12","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\tech.js":"13","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\hr.js":"14","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\EmployeeForAdmin.js":"15","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForAdmin.js":"16","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForHR.js":"17","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js":"18","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js":"19","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForAdmin.js":"20","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForHR.js":"21","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js":"22","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\givetechrating.js":"23","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js":"24","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js":"25","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js":"26","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js":"27","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js":"28","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js":"29","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js":"30","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\addpanelmember.js":"31","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js":"32","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\deletepanelmember.js":"33","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js":"34","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\showpanelmember.js":"35","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\viewCandidate.js":"36","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js":"37","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\services\\searchemployee.js":"38","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\addCandidate.js":"39","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewallinterviewmembers.js":"40","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\hrservices\\surrenderashr.js":"41","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\hrservices\\viewhrcandidate.js":"42","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js":"43","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givetechratingaction.js":"44","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_panel.js":"45","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_candidates.js":"46","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\models\\Candidate.js":"47","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_hr.js":"48","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_hr.js":"49","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js":"50","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js":"51","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js":"52","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js":"53","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getLocationsAction.js":"54","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js":"55","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByIdAction.js":"56","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\addCandidateAction.js":"57","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\employee\\searchemployee_action.js":"58","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js":"59","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js":"60","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js":"61","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByNameAction.js":"62","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByAllAction.js":"63","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\showpanelmembers_action.js":"64","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\addpanelmember_action.js":"65","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\deletepanelmember_action.js":"66","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\models\\hrInterviewScheduler.js":"67","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\models\\InterviewScheduler.js":"68","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_hrinterview.js":"69","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_techinterview.js":"70","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\hrReducer.js":"71","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\techreducer.js":"72","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminEmployeeReducer.js":"73","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js":"74","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelinterview_action.js":"75"},{"size":2005,"mtime":1610700180691,"results":"76","hashOfConfig":"77"},{"size":375,"mtime":1610690097135,"results":"78","hashOfConfig":"77"},{"size":1005,"mtime":1610699062897,"results":"79","hashOfConfig":"77"},{"size":1013,"mtime":1610699062899,"results":"80","hashOfConfig":"77"},{"size":1084,"mtime":1610690097132,"results":"81","hashOfConfig":"77"},{"size":2264,"mtime":1610690096700,"results":"82","hashOfConfig":"77"},{"size":629,"mtime":1610690096838,"results":"83","hashOfConfig":"77"},{"size":500,"mtime":1610690096834,"results":"84","hashOfConfig":"77"},{"size":1036,"mtime":1610690096833,"results":"85","hashOfConfig":"77"},{"size":7685,"mtime":1610690096803,"results":"86","hashOfConfig":"77"},{"size":563,"mtime":1610701007410,"results":"87","hashOfConfig":"77"},{"size":1519,"mtime":1610690096805,"results":"88","hashOfConfig":"77"},{"size":842,"mtime":1610699062894,"results":"89","hashOfConfig":"77"},{"size":1021,"mtime":1610690096839,"results":"90","hashOfConfig":"77"},{"size":1344,"mtime":1610690096828,"results":"91","hashOfConfig":"77"},{"size":3105,"mtime":1610690097029,"results":"92","hashOfConfig":"77"},{"size":1409,"mtime":1610690097032,"results":"93","hashOfConfig":"77"},{"size":2535,"mtime":1610690096965,"results":"94","hashOfConfig":"77"},{"size":5487,"mtime":1610699062851,"results":"95","hashOfConfig":"77"},{"size":2118,"mtime":1610690096807,"results":"96","hashOfConfig":"77"},{"size":1012,"mtime":1610690096810,"results":"97","hashOfConfig":"77"},{"size":4249,"mtime":1610699062889,"results":"98","hashOfConfig":"77"},{"size":4172,"mtime":1610699062888,"results":"99","hashOfConfig":"77"},{"size":1116,"mtime":1610690096982,"results":"100","hashOfConfig":"77"},{"size":9666,"mtime":1610690096978,"results":"101","hashOfConfig":"77"},{"size":8419,"mtime":1610690096984,"results":"102","hashOfConfig":"77"},{"size":3211,"mtime":1610699062860,"results":"103","hashOfConfig":"77"},{"size":1621,"mtime":1610690096986,"results":"104","hashOfConfig":"77"},{"size":2276,"mtime":1610690097028,"results":"105","hashOfConfig":"77"},{"size":1168,"mtime":1610690096980,"results":"106","hashOfConfig":"77"},{"size":7468,"mtime":1610690097057,"results":"107","hashOfConfig":"77"},{"size":1164,"mtime":1610690096985,"results":"108","hashOfConfig":"77"},{"size":4095,"mtime":1610699062891,"results":"109","hashOfConfig":"77"},{"size":1181,"mtime":1610690096987,"results":"110","hashOfConfig":"77"},{"size":2695,"mtime":1610699062892,"results":"111","hashOfConfig":"77"},{"size":5914,"mtime":1610690096818,"results":"112","hashOfConfig":"77"},{"size":1749,"mtime":1610690096990,"results":"113","hashOfConfig":"77"},{"size":3393,"mtime":1610700686304,"results":"114","hashOfConfig":"77"},{"size":10203,"mtime":1610690096816,"results":"115","hashOfConfig":"77"},{"size":1612,"mtime":1610690096988,"results":"116","hashOfConfig":"77"},{"size":3726,"mtime":1610701270966,"results":"117","hashOfConfig":"77"},{"size":4296,"mtime":1610701281223,"results":"118","hashOfConfig":"77"},{"size":579,"mtime":1610690096766,"results":"119","hashOfConfig":"77"},{"size":749,"mtime":1610699062826,"results":"120","hashOfConfig":"77"},{"size":368,"mtime":1610690096747,"results":"121","hashOfConfig":"77"},{"size":385,"mtime":1610690096746,"results":"122","hashOfConfig":"77"},{"size":500,"mtime":1610690097127,"results":"123","hashOfConfig":"77"},{"size":841,"mtime":1610700005525,"results":"124","hashOfConfig":"77"},{"size":867,"mtime":1610699976203,"results":"125","hashOfConfig":"77"},{"size":339,"mtime":1610690096728,"results":"126","hashOfConfig":"77"},{"size":334,"mtime":1610690096727,"results":"127","hashOfConfig":"77"},{"size":340,"mtime":1610690096729,"results":"128","hashOfConfig":"77"},{"size":336,"mtime":1610690096724,"results":"129","hashOfConfig":"77"},{"size":329,"mtime":1610690096726,"results":"130","hashOfConfig":"77"},{"size":369,"mtime":1610690096735,"results":"131","hashOfConfig":"77"},{"size":393,"mtime":1610690096733,"results":"132","hashOfConfig":"77"},{"size":1089,"mtime":1610690096723,"results":"133","hashOfConfig":"77"},{"size":797,"mtime":1610699334953,"results":"134","hashOfConfig":"77"},{"size":370,"mtime":1610690096736,"results":"135","hashOfConfig":"77"},{"size":348,"mtime":1610690096734,"results":"136","hashOfConfig":"77"},{"size":360,"mtime":1610690096732,"results":"137","hashOfConfig":"77"},{"size":351,"mtime":1610690096734,"results":"138","hashOfConfig":"77"},{"size":317,"mtime":1610699062805,"results":"139","hashOfConfig":"77"},{"size":647,"mtime":1610699062836,"results":"140","hashOfConfig":"77"},{"size":950,"mtime":1610690096768,"results":"141","hashOfConfig":"77"},{"size":803,"mtime":1610699062833,"results":"142","hashOfConfig":"77"},{"size":448,"mtime":1610690097130,"results":"143","hashOfConfig":"77"},{"size":454,"mtime":1610690097128,"results":"144","hashOfConfig":"77"},{"size":1948,"mtime":1610690096741,"results":"145","hashOfConfig":"77"},{"size":2134,"mtime":1610690096743,"results":"146","hashOfConfig":"77"},{"size":691,"mtime":1610700897920,"results":"147","hashOfConfig":"77"},{"size":854,"mtime":1610699062900,"results":"148","hashOfConfig":"77"},{"size":446,"mtime":1610699062896,"results":"149","hashOfConfig":"77"},{"size":1620,"mtime":1610699062858,"results":"150","hashOfConfig":"77"},{"size":777,"mtime":1610699062823,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13s02o1",{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"159"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"159"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"159"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"159"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"159"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"159"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"159"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"159"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"159"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"159"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"159"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"159"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"159"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"159"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"159"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"159"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"159"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"159"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"159"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\index.js",["325","326","327"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reportWebVitals.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminInterviewReducer.js",["328","329"],"const InterviewReducer = (state={interviewschedules: [],candidates: [],panels: [],hr: []}, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TECHINTERVIEW':\r\n            console.log(\"In technical Reducer\",action.payload);\r\n            state.interviewschedules.push(action.payload);\r\n            return state;\r\n        case 'SHOW_CANDIDATES':\r\n            state.candidates = action.payload;\r\n            return state;\r\n        case 'SHOW_PANEL':\r\n            state.panels = action.payload;     \r\n            return state;\r\n        case 'ADD_HRINTERVIEW':\r\n            console.log(\"In hr Reducer\",action.payload);\r\n            state.hr.push(action.payload);\r\n            return state;\r\n           //case to cancel the Interview\r\n           case 'CANCEL_INTERVIEW': return action.payload;\r\n\r\n           //CASE TO update the Interview\r\n           case 'UPDATE_INTERVIEW': return action.payload;\r\n         \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default InterviewReducer;\r\n\r\n",["330","331"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminPanelMemberReducer.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminCandidateReducer.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\App.js",["332","333"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\hometech.js",["334","335","336","337","338","339","340","341","342","343","344"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport TechComponent from './tech';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport {Tab,Tabs,Jumbotron,Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst HomeTechComponent = () => {\r\n    return (\r\n        <div>\r\n            \r\n                        \r\n           \r\n                    <TechComponent></TechComponent>\r\n            \r\n                    \r\n                \r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeTechComponent;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\homeadmin.js",["345","346","347","348","349","350","351"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport AdminComponent from './admin';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\n\r\nconst HomeAdminComponent = () => {\r\n    return (\r\n        <div>\r\n        \r\n            <AdminComponent></AdminComponent>\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeAdminComponent;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\home.js",["352","353","354","355","356","357","358","359","360"],"import { Carousel, Jumbotron, Button, Nav, Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst HomeComponent = () => {\r\n  return (\r\n    <div className='container-fluid' >\r\n      <Carousel>\r\n        <Carousel.Item style={{ 'height': \"700px\" }} >\r\n          <img style={{ 'height': \"700px\" }}\r\n            className=\"d-block w-100\"\r\n            src={'assets/img/int1.jpg'} />\r\n          <Carousel.Caption>\r\n            <h3><b>INTERVIEW TRACKING SYSTEM</b></h3>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item style={{ 'height': \"700px\" }}>\r\n          <img style={{ 'height': \"700px\" }}\r\n            className=\"d-block w-100\"\r\n            src={'assets/img/int3.jpg'} />\r\n          <Carousel.Caption>\r\n            <center>\r\n            <h3><b>INTERVIEW TRACKING SYSTEM</b></h3>\r\n            </center>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default HomeComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\about.js",["361","362","363"],"//About Us Component : CHECK WARNING.info FOR NOTES.....\r\n  \r\nimport { getAllByAltText } from '@testing-library/react';\r\nimport { Jumbotron, Button, Nav, Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst AboutUsComponent = () => {\r\n    return (\r\n        <div>\r\n            <Jumbotron style={{textAlign:\"left\", backdropFilter: \"blur(10px)\", marginLeft: 10, marginRight: 10}}>\r\n                <h1>Interview Tracking App</h1>\r\n                <p>\r\n                    This is a service for tracking interview schedules in an organization, a simple project done by a team from Capgemini as a part of\r\n                    their training. ITS provides services that connect to RESTful APIs which handle with data from a postgre database with mock data. \r\n                    There are services for Admin and Panel Members who need to login to access the same. Employees, Panel Members and Candidate details can be operated on with these services.\r\n                </p>\r\n                <p>\r\n                    <Button variant=\"dark\" href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">Check code on Github</Button>\r\n                </p>\r\n            </Jumbotron>\r\n            <br></br>\r\n            <h1>Our Team</h1>\r\n            <br></br>\r\n            {/* MEMBERS */}\r\n            <Container>\r\n                <Row md={3}>\r\n                    {/* MEMBER IS FROM COL TO COL TAG.... */}\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Rutuja Patil</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Neeti Mishra</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Meetali Patidar</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Shrishti Singh</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Sneha Chitale</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Prasanna Mandapalli</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Priyanka Yadav</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Suraj Vijaykumar Mandal</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Yash Sandeep Kadam</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"https://www.linkedin.com/in/yash-kadam/\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <br></br>\r\n\r\n            <div style={{background: \"#151515\", color: \"#CECECE\", textAlign:\"left\", margin: 0}}>Content owned by the team of above mentioned individuals. Code available on <a href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">github</a>.</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AboutUsComponent;\r\n\r\n\r\n\r\n","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\homehr.js",["364","365","366","367","368","369","370"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\admin.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\tech.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\hr.js",["371"],"//Admin Services Component : CHECK WARNING.info FOR NOTES.....\r\n//import InterviewSchedulerForAdmin from './interviewscheduler/InterviewSchedulerForAdmin'\r\n\r\n//import InterviewSchedulerForAdmin from './interviewscheduler/InterviewSchedulerForAdmin'\r\n//import PanelMemberForAdmin from './panelmember/PanelMemberForAdmin'\r\n\r\n// Bootstrap\r\n\r\n\r\n\r\n\r\nimport PanelMemberForHR from './panelmember/PanelMemberForHR'\r\nimport SearchCandidate from './candidate/CandidateForHR';\r\nimport InterviewSchedulerForHr from './interviewscheduler/InterviewSchedulerForHr';\r\n\r\n\r\n\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\n\r\nconst HRComponent = () => {\r\n    return (\r\n        <div>\r\n            <Tabs id=\"uncontrolled-tab-example\">\r\n\r\n                <Tab eventKey=\"PanelMember\" title=\"HR INTERVIEW\">\r\n                <SearchCandidate></SearchCandidate>\r\n                    <PanelMemberForHR></PanelMemberForHR>\r\n                    \r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HRComponent;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\EmployeeForAdmin.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForAdmin.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForHR.js",["372","373"],"//Panel Services Accessible By The Admin....\r\nimport SurrenderAsHRPanel from './hrservices/surrenderashr'\r\nimport ShowPanelMembers from './services/showpanelmember'\r\nimport DeletePanelMember from './services/deletepanelmember'\r\n\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\nconst PanelMemberForHR = () => {\r\n    return (\r\n        <div style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundImage:`url(/logo.png)`,\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',\r\n            height: \"100px\"\r\n    \r\n    \r\n        }}>\r\n            {/* All underlying operations from services */}\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            Surrender As HR Panel\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    {/* Search an Panel component */}\r\n                    <Card.Body class=\"bg-custom\"><SurrenderAsHRPanel></SurrenderAsHRPanel></Card.Body>\r\n                    {/* Search an Panel component */}\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PanelMemberForHR;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js",["374","375"],"//Interview Services Accessible By The Admin....\r\nimport techInterviewScheduleAdmin from '../interviewscheduler/techInterviewScheduleAdmin';\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport HRShareandschedule from './adminhrServices/hrshareandschedule.js';\r\nimport HRCancelInterview from './adminhrServices/hrcancelinterview.js'\r\nimport HRUpdateInterview from \"./adminhrServices/hrupdatescheduleinterview\";\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\n\r\nimport { Row,Col,Container,Accordion, Card, Button } from 'react-bootstrap';\r\n\r\n//for normal image.\r\n//<img src=\"logo.jpg\" alt=\"pic\" />\r\n//  backgroundImage: \"url(/img/logo.png)\"\r\n\r\nconst InterviewSchedulerForAdmin = () => {\r\n \r\n\r\nreturn (\r\n  <div>\r\n \r\n      <Container className=\"mr-5\">\r\n      <card>\r\n      {/* All underlying operations from services */}\r\n      <Accordion>\r\n          \r\n         <table className=\"marginLeft\">\r\n         <Col className=\"align-items-center\">\r\n                   <Row>\r\n                  <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\">\r\n                      <center><h2><b><i>  TECH INTERVIEW</i></b></h2></center>\r\n              </Accordion.Toggle>\r\n             \r\n              <Accordion.Collapse eventKey=\"0\">\r\n                  {/* Add Candidate component */}\r\n                  <Card.Body class=\"bg-custom\">\r\n                    <TechShareandschedule></TechShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <TechUpdateInterview></TechUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"2\">\r\n                        Cancel technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <TechCancelInterview></TechCancelInterview>\r\n\r\n                   </Card.Body>\r\n                  {/* Add an Candidate component */}\r\n              </Accordion.Collapse>\r\n              </Row>\r\n              <Row>\r\n              <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"1\">\r\n              <center><h2><b><i> HR INTERVIEW</i></b></h2></center>\r\n              </Accordion.Toggle>\r\n         \r\n          <Accordion.Collapse eventKey=\"1\">\r\n              {/* View Candidate component */}\r\n              <Card.Body class=\"bg-custom\">\r\n                    <HRShareandschedule></HRShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <HRUpdateInterview></HRUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                       Cancel HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <HRCancelInterview></HRCancelInterview>\r\n\r\n                   </Card.Body>\r\n              {/* View an Candidate component */}\r\n          </Accordion.Collapse>\r\n          </Row>\r\n        \r\n          </Col>\r\n          </table>\r\n      </Accordion>\r\n      </card>\r\n      </Container>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default InterviewSchedulerForAdmin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n   <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                       TECHNICAL INTERVIEW\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"3\">\r\n                  \r\n                    <Card.Body>\r\n\r\n                    \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                  \r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n               \r\n\r\n                \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                   \r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n             \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                \r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n            \r\n                    </Card.Body>\r\n                   \r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                */\r\n","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForAdmin.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForHR.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js",["376"],"import React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ViewInterviewMemberForTechAction from '../../../actions/interviewscheduler/viewinterviewmemberfortechaction';\r\n\r\nconst ViewInterviewMemberForTech = (props) => {\r\n\r\n    var techinterviewlist = null;\r\n    let member = useSelector((state) => state.TechReducer.viewmemberfortech);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ViewInterviewMemberForTechAction_Function(), [])\r\n    const ViewInterviewMemberForTechAction_Function = () => {\r\n            dispatcher(ViewInterviewMemberForTechAction(techinterviewlist));\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        techinterviewlist = document.getElementById(\"intid\").value;\r\n        dispatcher(ViewInterviewMemberForTechAction(techinterviewlist));\r\n        renderData(member);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label> View Candidate Using interviewid</Form.Label>\r\n                        <Form.Control id=\"intid\" type=\"text\" placeholder=\"Interview ID\"/>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Search\r\n                        </Button>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience</th>\r\n                            <th>Primary<br></br>Skills</th>\r\n                            <th>Secondary <br></br>Skills</th>\r\n                            <th>Notice <br></br>Period</th>\r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                        {renderData(member)}\r\n                        </tbody>\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n        //Alert\r\n    function AlertMemberNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Member Not Found</Alert.Heading>\r\n              <p>\r\n              Candidate with the mentioned id was not found. Maybe you entered wrong id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function renderData(member) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", member);\r\n        if(member!==undefined && member!==null && member.length!==0){\r\n            return(\r\n                <tr>\r\n                    <td>{member.data.candidateid}</td>\r\n                    <td>{member.data.candidatename}</td>\r\n                    <td>{member.data.location}</td>\r\n                    <td>{member.data.qualification}</td>\r\n                    <td>{member.data.designation}</td>\r\n                    <td>{member.data.experience}</td>\r\n                    <td>{member.data.primaryskills}</td>\r\n                    <td>{member.data.secondaryskills}</td>\r\n                    <td>{member.data.noticeperiod}</td>\r\n                </tr>\r\n            );\r\n        }\r\n        if(member!==undefined && member===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertMemberNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default ViewInterviewMemberForTech;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\givetechrating.js",["377","378","379","380","381"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport GiveTechRatingAction from '../../../actions/interviewscheduler/givetechratingaction'\r\n\r\nconst GiveTechRating = (props) => {\r\n\r\n    var techratinglist = null;\r\n    let interviewmember = useSelector(state => state.TechReducer.ratinglistcandidate);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>GiveTechRatingAction_Function(), [])\r\n    const GiveTechRatingAction_Function = () => {\r\n            dispatcher(GiveTechRatingAction(techratinglist));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        techratinglist = document.getElementById(\"interviewidforrating\").value;\r\n        dispatcher(GiveTechRatingAction(techratinglist));\r\n        renderData(interviewmember);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Give TechRating to a Candidate by Interviewid</Form.Label>\r\n                        <Form.Control id=\"interviewidforrating\" type=\"text\" placeholder=\"Interview ID\" />\r\n                        </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(interviewmember)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //Alert\r\n    function AlertMemberNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n              Candidate with the mentioned id was not found. Maybe you entered wrong id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n    function renderData(interviewmember) {   \r\n        console.log(\"candidate dispatcher object returned from the server : \", interviewmember);\r\n        if(interviewmember!==undefined && interviewmember!==null && interviewmember.length!==0){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Interview ID</th>\r\n                            <th>Location</th>\r\n                            <th>Date</th>\r\n                            <th>Start Time</th>\r\n                            <th>End Time</th>\r\n                            <th>TechRating</th>\r\n                            <th>Final Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>{interviewmember.data.interviewid}</td>\r\n                            <td>{interviewmember.data.location}</td>\r\n                            <td>{interviewmember.data.date}</td>\r\n                            <td>{interviewmember.data.start_time}</td>\r\n                            <td>{interviewmember.data.end_time}</td>\r\n                            <td>{interviewmember.data.techrating}</td>\r\n                            <td>{interviewmember.data.finalstatus}</td>\r\n                            \r\n                        </tr>\r\n                        </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n        if(interviewmember!==undefined && interviewmember===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertMemberNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default GiveTechRating;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js",["382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React from 'react';\r\n//import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n//import React, { Component } from \"react\";\r\n//import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\nimport { HelpBlock, Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport addTechInterviewAction from '../../../actions/interviewscheduler/add_techinterview';\r\nimport InterviewScheduler from '../../../models/InterviewScheduler';\r\nimport showcandidatesAction from '../../../actions/interviewscheduler/get_candidates';\r\nimport showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n\r\nlet dispatch;\r\nlet history;\r\nlet selectedCanId;\r\nlet selectedpanId;\r\n\r\nconst TechShareandschedule = (props) => {\r\n\r\n    dispatch = useDispatch();\r\n    history = useHistory();\r\n    //candidate\r\n    let candList = useSelector(state => state.InterviewReducer.candidates);\r\n    console.log(\"candList: \", candList);\r\n    React.useEffect(() => {\r\n        candidateList()\r\n    }, []);\r\n\r\n    const candidateList = () => {\r\n        dispatch(showcandidatesAction())\r\n    }\r\n\r\n    if (!Array.isArray(candList)) {\r\n        candList = [];\r\n        console.log(\"Set candList to blank array\");\r\n    }\r\n    //panel\r\n    let panList = useSelector(state => state.InterviewReducer.panels);\r\n    console.log(\"panList: \", panList);\r\n    React.useEffect(() => {\r\n        panelList()\r\n    }, []);\r\n\r\n    const panelList = () => {\r\n        dispatch(showPanelAction())\r\n    }\r\n\r\n    if (!Array.isArray(panList)) {\r\n        panList = [];\r\n        console.log(\"Set panList to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Share Candidate and Shecdule Interview</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>locations</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\" />\r\n                    </Form.Group>\r\n\r\n                    <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                            \r\n                                <td>\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>Start Time</b> </h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                                    </Form.Group>\r\n\r\n                                </td>\r\n                             \r\n                                <td>\r\n\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>End Time </b></h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"end\" name=\"end\" />\r\n                                    </Form.Group>\r\n\r\n\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Form.Group controlId=\"formBasicExperience\">\r\n                        <Form.Label>Tech Interview Rating</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                            <option>0</option>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                            <option>7</option>\r\n                            <option>8</option>\r\n                            <option>9</option>\r\n                            <option>10</option>\r\n                        </Form.Control>\r\n\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n                               \r\n\r\n                    <Button variant=\"dark\" type=\"submit\" call>\r\n                        ADD\r\n                    </Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction handleChangecandidate(event) {\r\n    selectedCanId = event.target.value\r\n    console.log(\"selected candidate: \" + selectedCanId);\r\n}\r\n\r\nfunction handleChangepanel(event) {\r\n    selectedpanId = event.target.value\r\n    console.log(\"selected panel member: \" + selectedpanId);\r\n}\r\n\r\n\r\nfunction renderCandidates(candList) {\r\n    console.log(\"candList: \", candList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return candList.map((candidate) => {\r\n        const { candidateid } = candidate //destructuring //candidte id \r\n        return (\r\n            <option key={candidateid} value={candidateid}>{candidateid}</option>\r\n        )\r\n    })\r\n}\r\n\r\n\r\nfunction renderpanels(panList) {\r\n    console.log(\"panelList: \", panList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return panList.map((panel, index) => {\r\n        const { panelid } = panel //destructuring //candidte id \r\n        return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n        )\r\n    })\r\n};\r\n\r\nfunction handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const selectedCanId = data.get('candidate');\r\n    console.log(\"candidateid input  : \", selectedCanId);\r\n    const selectedpanId = data.get('panel');\r\n    const locations = data.get('loc');\r\n    console.log(\"Location input  : \", locations);\r\n    const date = data.get('date');\r\n    const techrating = data.get('rate');\r\n    const finalstatus = data.get('status');\r\n    const start_time = data.get('start');\r\n    const end_time = data.get('end');\r\n    if (locations === '' || locations === null) {\r\n        alert(\"Name cannot be blank\");\r\n        return;\r\n    }\r\n    const interviewObj = new InterviewScheduler(selectedCanId, selectedpanId, locations, date, techrating, finalstatus, start_time, end_time,);\r\n    console.log(\"Interview Object : \", interviewObj);\r\n    dispatch(addTechInterviewAction(interviewObj, selectedCanId, selectedpanId));\r\n    history.push('/');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TechShareandschedule;\r\n\r\n\r\n\r\n/*\r\n getPickerValue = value => {\r\n        console.log(value);\r\n    }\r\n    ---------------\r\n <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time :</Form.Label>\r\n\r\n                        <MDBCol md=\"3\">\r\n                        <MDBTimePicker id=\"timePicker\" label=\"24hrs format\" hours={12} minutes={0} hoursFormat={24} getValue={this.getPickerValue} />\r\n                       </MDBCol>\r\n\r\n                        <Form.Control/>\r\n                    </Form.Group>\r\n\r\n-------------------------\r\n\r\n <TimePicker\r\n          onChange={this.onChange}\r\n          value={this.state.time}\r\n        />\r\n---------------\r\n <Form.Group controlId=\"formBasicExperience\">\r\n                    <Dropdown as={ButtonGroup}>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Technical Interview Rating</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  --------------\r\n  normal button:\r\n\r\n   <Button variant=\"dark\" type=\"submit\">\r\n                        SCEDULE AN INTERVIEW\r\n                    </Button>\r\n*/","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"import React from 'react';\r\n    //import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n    //import React, { Component } from \"react\";\r\n    //import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\n    import { Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\n    import { useSelector, useDispatch } from 'react-redux';\r\n    import { useHistory } from \"react-router-dom\";\r\n    \r\n    import addHRInterviewAction from '../../../actions/interviewscheduler/add_hrinterview';\r\n    import hrInterviewScheduler from '../../../models/hrInterviewScheduler';\r\n    import showcandidatesAction from '../../../actions/interviewscheduler/get_candidates';\r\n    import showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n    \r\n    \r\n    let dispatch;\r\n    let history;\r\n    let selectedCanId;\r\n    let selectedpanId;\r\n    const HRShareandschedule = (props) => {\r\n\r\n            dispatch = useDispatch();\r\n            history = useHistory();\r\n            //candidate\r\n            let candList = useSelector(state => state.InterviewReducer.candidates);\r\n            console.log(\"candList: \", candList);\r\n            React.useEffect(() => {\r\n                candidateList()\r\n              }, []);\r\n            \r\n              const candidateList = () => {\r\n                dispatch(showcandidatesAction())\r\n              }\r\n    \r\n              if(!Array.isArray(candList)){\r\n                candList = [];\r\n                console.log(\"Set candList to blank array\");\r\n            } \r\n           //panel\r\n           let panList = useSelector(state => state.InterviewReducer.panels);\r\n            console.log(\"panList: \", panList);\r\n            React.useEffect(() => {\r\n                panelList()\r\n              }, []);\r\n            \r\n              const panelList = () => {\r\n                dispatch(showPanelAction())\r\n              }\r\n    \r\n              if(!Array.isArray(panList)){\r\n                panList = [];\r\n                console.log(\"Set panList to blank array\");\r\n            } \r\n    \r\n        return (\r\n            // All Final Operations and Functions\r\n    \r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n               \r\n            }}>\r\n                <Jumbotron style={{ width: 600 }}>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formGroupText\">\r\n                            <Form.Label>Share Candidate and Shecdule HR Interview</Form.Label>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>locations</Form.Label>\r\n                            <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Select Date</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\"/>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Start Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>End Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"end\" name=\"end\"/>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicExperience\">\r\n                            <Form.Label>HR Interview Rating</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                                <option>7</option>\r\n                                <option>8</option>\r\n                                <option>9</option>\r\n                                <option>10</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n    \r\n                        <Button variant=\"dark\" type=\"submit\" call>\r\n                           ADD\r\n                        </Button>\r\n                    </Form>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    function handleChangecandidate(event) {\r\n        selectedCanId = event.target.value\r\n        console.log(\"selected candidate: \"+ selectedCanId);\r\n    }\r\n    \r\n    function handleChangepanel(event) {\r\n        selectedpanId = event.target.value\r\n        console.log(\"selected panel member: \"+ selectedpanId);\r\n    }\r\n    \r\n    \r\n    function renderCandidates(candList){\r\n        console.log(\"candList: \", candList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return candList.map((candidate) => {\r\n           const { candidateid } = candidate //destructuring //candidte id \r\n           return (\r\n            <option key={candidateid} value={candidateid}>{candidateid}</option>\r\n           )\r\n        })\r\n     }\r\n    \r\n     \r\n    function renderpanels(panList){\r\n        console.log(\"panelList: \", panList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return panList.map((panel, index) => {\r\n           const { panelid } = panel //destructuring //candidte id \r\n           return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n           )\r\n        })\r\n     };\r\n     \r\n     function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const selectedCanId=data.get('candidate');\r\n        console.log(\"candidateid input  : \",selectedCanId);\r\n        const selectedpanId=data.get('panel');\r\n        const locations = data.get('loc');\r\n        console.log(\"Location input  : \",locations);\r\n        const date=data.get('date');\r\n        const hrrating=data.get('rate');\r\n        const finalstatus=data.get('status');\r\n        const start_time=data.get('start');\r\n        const end_time=data.get('end');\r\n        if(locations==='' ||locations===null) {\r\n            alert(\"Name cannot be blank\");\r\n            return;\r\n        }\r\n        const hrinterviewObj = new hrInterviewScheduler(selectedCanId,selectedpanId,locations,date,hrrating,finalstatus,start_time,end_time,);\r\n        console.log(\"Interview Object : \",hrinterviewObj);\r\n        dispatch(addHRInterviewAction(hrinterviewObj,selectedCanId,selectedpanId));\r\n        history.push('/');\r\n    }\r\n    \r\n    \r\n    \r\nexport default HRShareandschedule;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js",["413"],"//Interview Services Accessible By The Admin....\r\n\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst techInterviewScheduleAdmin = () => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Accordion>\r\n               <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n               \r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default techInterviewScheduleAdmin;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\addpanelmember.js",["414","415","416","417","418"],"import { Alert, Form, Table, Jumbotron, Button, Col, InputGroup, FormControl } from 'react-bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchEmployeeAction from '../../../actions/employee/searchemployee_action';\r\nimport AddPanelMemberAction from '../../../actions/panelmember/addpanelmember_action';\r\n\r\n\r\nconst AddPanelMember = () => {\r\n\r\n    let loc = null;\r\n    let panel = null;\r\n    let name = null;\r\n    let post_json = null;\r\n\r\n    let props_wrapper = {};\r\n\r\n\r\n    let employee = useSelector((state)=>state.PanelMemberReducer);\r\n    let dispatcher = useDispatch();\r\n    \r\n    //ADD PANEL MEMBER WITH REACT USE EFFECT        \r\n    React.useEffect(()=>AddPanelMemberAction_Function(), [])\r\n        const AddPanelMemberAction_Function = () => {\r\n            dispatcher(AddPanelMemberAction(post_json, name));\r\n        }\r\n\r\n    function addPanelMember(){\r\n        loc = document.getElementById(\"location\").value;\r\n        panel = document.getElementById(\"panel\").value;\r\n        name = document.getElementById(\"name\").value;\r\n        console.log(name, loc, panel);\r\n        post_json = { employeeEntity: null, location : loc, panelid: 10000000, type : panel };\r\n        props_wrapper = {body: post_json, pathVar: name}\r\n        if(loc!=\"null\" && panel!=\"null\"){\r\n            dispatcher(AddPanelMemberAction(props_wrapper));\r\n            confirmAddition(employee);\r\n        }\r\n        else{\r\n            employee = null;\r\n            confirmAddition(employee);\r\n        }\r\n    }\r\n\r\n    function clearAlerts(){\r\n        employee = undefined;\r\n        confirmAddition(employee);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 600}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>What is the name of the Employee?</Form.Label>\r\n                        {/* <Form.Control type=\"text\" placeholder=\"Name of the Employee\" id=\"searchParameter\"/> */}\r\n                        \r\n                        <br></br>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                            id=\"name\"\r\n                            placeholder=\"Employee's Name\"\r\n                            aria-label=\"Employee's Name\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            />\r\n                            <InputGroup.Append>\r\n                            {/* Check Button for Employee will run search employee..... */}\r\n                                \r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <hr></hr>\r\n                        <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                                <td>Select a Department</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                                        <Form.Control id=\"panel\" as=\"select\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option value=\"hr\">Human Resources (HR)</option>\r\n                                            <option value=\"tech\">Technical</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Select Location</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\" >\r\n                                        <Form.Control as=\"select\" id=\"location\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option>Ahmedabad</option>\r\n                                            <option>Aurangabad</option>\r\n                                            <option>Bengaluru</option>\r\n                                            <option>Chennai</option>\r\n                                            <option>Delhi</option>\r\n                                            <option>Daman/Diu</option>\r\n                                            <option>Hyderabad</option>\r\n                                            <option>Indore</option>\r\n                                            <option>Lucknow</option>\r\n                                            <option>Mumbai</option>\r\n                                            <option>Nasik</option>\r\n                                            <option>Pune</option>\r\n                                            <option>Raipur</option>\r\n                                            <option>Thiruvananthapuram</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <br></br>\r\n                            <tr>\r\n                                <td>\r\n                                    <Button variant=\"danger\" type=\"reset\" call onClick={clearAlerts}>\r\n                                        Reset\r\n                                    </Button>\r\n                                </td>\r\n                                <td>\r\n                                    <Button variant=\"primary\" type=\"button\" call onClick={addPanelMember}>\r\n                                        Add Member\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                {/* Response  */}\r\n                <div>\r\n                    {confirmAddition(employee)}\r\n                </div>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n    function confirmAddition(employee){\r\n        console.log(employee);\r\n        if(employee!==null && employee!==undefined){\r\n            console.log(\"Added the specified panel member to the database\");\r\n            return(\r\n                <Alert variant=\"success\">\r\n                <Alert.Heading>SUCCESSFULLY added the panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Added Successfully! Check \"SHOW_PANEL_MEMBERS\" to view all.\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(employee===null&& employee!==undefined){\r\n            return(\r\n                <Alert variant=\"danger\">\r\n                <Alert.Heading>FAILED to add panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Not Added! There was some error in processing your request.\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(employee===undefined){\r\n            console.log(\"Alerts Cleared\");\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AddPanelMember;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\deletepanelmember.js",["419","420","421","422"],"\r\nimport { Form, Table, Jumbotron, Button, Modal } from 'react-bootstrap';\r\n\r\nimport { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DeletePanelMemberAction from '../../../actions/panelmember/deletepanelmember_action'\r\n\r\nconst DeletePanelMember = (props) => {\r\n\r\n    var pathVar = null;\r\n    let panelMember = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => DeletePanelMemberAction_Function(), [])\r\n    const DeletePanelMemberAction_Function = () => {\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        console.log(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\", pathVar);\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n        renderData(panelMember);\r\n        console.log(pathVar);\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMember);\r\n    if (!Array.isArray(panelMember)) {\r\n        panelMember = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label for=\"pathVariable\">Delete by valid Name</Form.Label>\r\n                        <Form.Control id=\"pathVariable\" type=\"text\" placeholder=\"Employee Name\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Delete\r\n                    </Button>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>EmployeeName</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMember)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //MODAL\r\n    function Box() {\r\n        const [show, setShow] = useState(true);\r\n        const handleClose = () => setShow(false);\r\n        const handleShow = () => setShow(true);\r\n\r\n        return (\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Employee Name Not Found</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Entered incorrect or blank name</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        OK\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    function renderData(panelMember) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMember);\r\n        return panelMember.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default DeletePanelMember;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\showpanelmember.js",["423","424"],"import React from 'react';\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ShowPanelMemberAction from '../../../actions/panelmember/showpanelmembers_action'\r\n\r\n\r\nconst ShowPanelMembers = (props) => {\r\n\r\n    let panelMemberList = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => PanelMemberList(), [])\r\n    const PanelMemberList = () => {\r\n        dispatcher(ShowPanelMemberAction());\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMemberList);\r\n    if (!Array.isArray(panelMemberList)) {\r\n        panelMemberList = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>List All Panel Member.</Form.Label>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>Employee Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMemberList)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(panelMemberList) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMemberList);\r\n        return panelMemberList.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default ShowPanelMembers;\r\n","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\viewCandidate.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\services\\searchemployee.js",["425","426"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\addCandidate.js",["427"],"import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport addCandidateAction from '../../../actions/candidate/adminactions/addCandidateAction'\r\nimport getDesignationsAction from '../../../actions/candidate/adminactions/getDesignationsAction'\r\nimport getLocationsAction from '../../../actions/candidate/adminactions/getLocationsAction'\r\nimport getPrimarySkillsAction from '../../../actions/candidate/adminactions/getPrimarySkillsAction'\r\nimport getSecondarySkillsAction from '../../../actions/candidate/adminactions/getSecondarySkillsAction'\r\nimport getQualificationsAction from '../../../actions/candidate/adminactions/getQualificationsAction'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Candidate from '../../../models/Candidate';\r\n\r\n\r\nlet dispatch;\r\nlet history;\r\nlet location;\r\nlet qualification;\r\nlet designation; \r\nlet primaryskill;\r\nlet secondaryskill;\r\n\r\nconst AddCandidate = () => {\r\n\r\n    dispatch = useDispatch();\r\n    history = useHistory();\r\n\r\n    let locationList = useSelector(state => state.CandidateReducer.location);\r\n\r\n   React.useEffect(() => {\r\n       LocationList()\r\n      }, []);\r\n    \r\n    const LocationList = () => {\r\n        dispatch(getLocationsAction())\r\n      }\r\n      \r\n     if(!Array.isArray(locationList)){\r\n         locationList = [];\r\n         console.log(\"Set locationList to blank array\");\r\n     } \r\n    console.log(\"mmmmmmlocationList: \", locationList);\r\n\r\n    \r\n    let qualificationList = useSelector(state => state.CandidateReducer.qualification);\r\n\r\n    React.useEffect(() => {\r\n       QualificationList()\r\n      }, []);\r\n    \r\n      const QualificationList = () => {\r\n        dispatch(getQualificationsAction())\r\n      }\r\n      if(!Array.isArray(qualificationList)){\r\n        qualificationList = [];\r\n        console.log(\"Set locationList to blank array\");\r\n    } \r\n   console.log(\"qualificationList: \", qualificationList);  \r\n   \r\n   let designationList = useSelector(state => state.CandidateReducer.designation);\r\n\r\n    React.useEffect(() => {\r\n       DesignationList()\r\n      }, []);\r\n    \r\n      const DesignationList = () => {\r\n        dispatch(getDesignationsAction())\r\n      }\r\n      if(!Array.isArray(designationList)){\r\n        designationList = [];\r\n        console.log(\"Set designationList to blank array\");\r\n    } \r\n   console.log(\"designationList: \", designationList); \r\n   \r\n   let primaryskillsList = useSelector(state => state.CandidateReducer.primaryskill);\r\n\r\n    React.useEffect(() => {\r\n       PrimarySkillsList()\r\n      }, []);\r\n    \r\n      const PrimarySkillsList = () => {\r\n        dispatch(getPrimarySkillsAction())\r\n      }\r\n      if(!Array.isArray(primaryskillsList)){\r\n        primaryskillsList = [];\r\n        console.log(\"Set primaryskillsList to blank array\");\r\n    } \r\n   console.log(\"primaryskillsList: \", primaryskillsList); \r\n\r\n   let secondaryskillsList = useSelector(state => state.CandidateReducer.secondaryskill);\r\n\r\n    React.useEffect(() => {\r\n       SecondarySkillsList()\r\n      }, []);\r\n    \r\n      const SecondarySkillsList = () => {\r\n        dispatch(getSecondarySkillsAction())\r\n      }\r\n      if(!Array.isArray(secondaryskillsList)){\r\n        secondaryskillsList = [];\r\n        console.log(\"Set secondaryskillsList to blank array\");\r\n    } \r\n   console.log(\"secondaryskillsList: \", secondaryskillsList); \r\n\r\n\r\n   return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label><b>Add Candidate Details</b></Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Enter Name</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter name\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicLocation\">\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"loc\" name=\"loc\" onChange={handleChangeLoc}>\r\n                        {renderLocations(locationList)}       \r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"formBasicQualification\">\r\n                    <Form.Label>Qualification</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"qual\" name=\"qual\" onChange={handleChangeQual}>\r\n                        {renderQualifications(qualificationList)}       \r\n                    </Form.Control>\r\n                    \r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicDesignation\">\r\n                        <Form.Label>Designation</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"desig\" name=\"design\" onChange={handleChangeDesign}>\r\n                        {renderDesignations(designationList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicExperience\">\r\n                        <Form.Label>Experience in Years</Form.Label>\r\n                        <Form.Control type=\"Number\"  id=\"exp\" name=\"exp\"/>\r\n                    </Form.Group>                    \r\n\r\n                    <Form.Group controlId=\"formBasicPrimarySkill\">\r\n                        <Form.Label>Primary Skill</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"ps\" name=\"ps\" onChange={handleChangePs}>\r\n                        {renderPrimarySkills(primaryskillsList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicSecondarySkill\">\r\n                        <Form.Label>Secondary Skill</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"ss\" name=\"ss\" onChange={handleChangeSs}>\r\n                        {renderSecondarySkills(secondaryskillsList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicNoticePeriod\">\r\n                        <Form.Label>NoticePeriod in Months</Form.Label>\r\n                        <Form.Control type=\"Number\" id=\"np\" name=\"np\"/>\r\n                    </Form.Group> \r\n\r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Submit\r\n  </Button>\r\n\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction handleChangeLoc(event) {\r\n    location = event.target.value\r\n    console.log(\"location: \", location);\r\n}\r\n\r\nfunction renderLocations(locationList) {\r\n    console.log(\"locationList: \", locationList);\r\n    return locationList.map((loc, index) => {\r\n       //const { location } = loc //destructuring\r\n       \r\n       return (\r\n        <option key={loc.location} value={loc.location}>{loc.location}</option>\r\n       )\r\n    })\r\n };\r\n \r\n\r\n function handleChangeQual(event){\r\n     qualification = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"qualification: \", qualification);\r\n }\r\n\r\n function renderQualifications(qualificationList){\r\n    console.log(\"qualificationList: \", qualificationList);\r\n    return qualificationList.map((qual, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={qual.qualification} value={qual.qualification}>{qual.qualification}</option>\r\n       )\r\n    })\r\n };\r\n\r\n \r\n function handleChangeDesign(event){\r\n    designation = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"designation: \", designation);\r\n }\r\n\r\n function renderDesignations(designationList){\r\n    console.log(\"designationList: \", designationList);\r\n    return designationList.map((desig, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={desig.designation} value={desig.designation}>{desig.designation}</option>\r\n       )\r\n    })\r\n };\r\n\r\n\r\n function handleChangePs(event){\r\n    primaryskill = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"primaryskill: \", primaryskill);\r\n }\r\n\r\n function renderPrimarySkills(primaryskillsList){\r\n    console.log(\"primaryskillsList: \", primaryskillsList);\r\n    return primaryskillsList.map((ps, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={ps.primaryskill} value={ps.primaryskill}>{ps.primaryskill}</option>\r\n       )\r\n    })\r\n };\r\n\r\nfunction handleChangeSs(event){\r\n    secondaryskill = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"secondaryskill: \", secondaryskill);\r\n}\r\n\r\nfunction renderSecondarySkills(secondaryskillsList){\r\n    console.log(\"secondaryskillsList: \", secondaryskillsList);\r\n    return secondaryskillsList.map((ss, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={ss.secondaryskill} value={ss.secondaryskill}>{ss.secondaryskill}</option>\r\n       )\r\n    })\r\n };\r\n\r\n\r\n function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const candidatename = data.get('name');\r\n    console.log(\"nameeeeeeeee\",candidatename);\r\n   // const designation = data.get('design');\r\n   // const qualification = data.get('qualification');\r\n    const experience = data.get('exp');\r\n    const primaryskill = data.get('ps');\r\n    const secondaryskill = data.get('ss');\r\n    const noticeperiod = data.get('np');\r\n\r\n    const candObj = new Candidate(candidatename, location, qualification, designation, experience, primaryskill, secondaryskill, noticeperiod);\r\n    console.log('Candidate object', candObj);\r\n    dispatch(addCandidateAction(candObj));\r\n    history.push('/');\r\n}\r\n\r\nexport default AddCandidate;\r\n\r\n","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewallinterviewmembers.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\hrservices\\surrenderashr.js",["428","429"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\hrservices\\viewhrcandidate.js",["430","431","432"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js",["433","434","435"],"import axios from 'axios'\r\n\r\nconst ViewInterviewMemberForTechAction = (props)=> {\r\n    return async function(dispatch){\r\n        let error;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:8080/cgits/interviewscheduler/tech/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_TECH', payload: response}))\r\n        .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\nexport default ViewInterviewMemberForTechAction;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givetechratingaction.js",["436","437","438","439"],"import axios from 'axios'\r\n\r\nconst GiveTechRatingAction = (props)=> {\r\n\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:8080/cgits/interviewscheduler/tech/rating/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'GIVE_TECH_RATING', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'GIVE_TECH_RATING', payload: null});\r\n        }\r\n    }\r\n\r\n}\r\nexport default GiveTechRatingAction;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_panel.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_candidates.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\models\\Candidate.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_hr.js",["440","441","442"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_hr.js",["443","444","445"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getLocationsAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByIdAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\addCandidateAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\employee\\searchemployee_action.js",["446","447","448"],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByNameAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByAllAction.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\showpanelmembers_action.js",["449","450","451"],"import axios from 'axios';\r\n\r\nconst ShowPanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        console.log(props);\r\n        const url = 'http://localhost:9090/cgits/panelmembers';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'SHOW_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(err = error));\r\n        console.log(serverResponse);\r\n    }\r\n}\r\n\r\nexport default ShowPanelMemberAction;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\addpanelmember_action.js",["452","453"],"import axios from 'axios'\r\n\r\nconst AddPanelMemberAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        if(props!=null){\r\n            console.log(props.pathVar, props.body);\r\n            const url = 'http://localhost:8080/cgits/panelmember/'+props.pathVar;\r\n            const serverResponse = await axios.post(url, props.body) //await can only be used with async function....\r\n            .then(response => dispatch({type: 'ADD_PANEL_MEMBER', payload: response}))\r\n            .catch(error => console.log(err=error));\r\n            \r\n            console.log(serverResponse);\r\n        }\r\n        if(err!==null && props!==undefined){\r\n            console.log(\"Operation could not be completed, error from server\");\r\n            dispatch({type: 'ADD_PANEL_MEMBER', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddPanelMemberAction;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\deletepanelmember_action.js",["454","455","456","457"],"\r\nimport axios from 'axios';\r\n\r\nconst DeletePanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/panelmember/' + props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'DELETE_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(err = error));\r\n        console.log(props);\r\n        if (err !== null && props != undefined) {\r\n            console.log(\"No User Found\");\r\n            dispatch({ type: 'DELETE_PANELMEMBER', payload: null });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeletePanelMemberAction;","C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\models\\hrInterviewScheduler.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\models\\InterviewScheduler.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_hrinterview.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_techinterview.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\hrReducer.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\techreducer.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminEmployeeReducer.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js",[],"C:\\Project\\sprint\\react\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelinterview_action.js",["458","459","460","461"],{"ruleId":"462","severity":1,"message":"463","line":10,"column":57,"nodeType":"464","messageId":"465","endLine":10,"endColumn":64},{"ruleId":"462","severity":1,"message":"466","line":12,"column":10,"nodeType":"464","messageId":"465","endLine":12,"endColumn":23},{"ruleId":"462","severity":1,"message":"467","line":12,"column":25,"nodeType":"464","messageId":"465","endLine":12,"endColumn":31},{"ruleId":"468","severity":1,"message":"469","line":22,"column":12,"nodeType":"470","messageId":"471","endLine":22,"endColumn":59},{"ruleId":"468","severity":1,"message":"469","line":25,"column":12,"nodeType":"470","messageId":"471","endLine":25,"endColumn":59},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","replacedBy":"475"},{"ruleId":"462","severity":1,"message":"476","line":13,"column":23,"nodeType":"464","messageId":"465","endLine":13,"endColumn":34},{"ruleId":"462","severity":1,"message":"477","line":14,"column":10,"nodeType":"464","messageId":"465","endLine":14,"endColumn":16},{"ruleId":"462","severity":1,"message":"478","line":6,"column":10,"nodeType":"464","messageId":"465","endLine":6,"endColumn":15},{"ruleId":"462","severity":1,"message":"479","line":6,"column":17,"nodeType":"464","messageId":"465","endLine":6,"endColumn":21},{"ruleId":"462","severity":1,"message":"480","line":6,"column":23,"nodeType":"464","messageId":"465","endLine":6,"endColumn":29},{"ruleId":"462","severity":1,"message":"481","line":8,"column":9,"nodeType":"464","messageId":"465","endLine":8,"endColumn":12},{"ruleId":"462","severity":1,"message":"482","line":8,"column":13,"nodeType":"464","messageId":"465","endLine":8,"endColumn":17},{"ruleId":"462","severity":1,"message":"483","line":8,"column":18,"nodeType":"464","messageId":"465","endLine":8,"endColumn":27},{"ruleId":"462","severity":1,"message":"484","line":8,"column":28,"nodeType":"464","messageId":"465","endLine":8,"endColumn":37},{"ruleId":"462","severity":1,"message":"485","line":8,"column":39,"nodeType":"464","messageId":"465","endLine":8,"endColumn":45},{"ruleId":"462","severity":1,"message":"486","line":8,"column":47,"nodeType":"464","messageId":"465","endLine":8,"endColumn":50},{"ruleId":"462","severity":1,"message":"476","line":8,"column":52,"nodeType":"464","messageId":"465","endLine":8,"endColumn":63},{"ruleId":"462","severity":1,"message":"477","line":9,"column":10,"nodeType":"464","messageId":"465","endLine":9,"endColumn":16},{"ruleId":"462","severity":1,"message":"478","line":6,"column":10,"nodeType":"464","messageId":"465","endLine":6,"endColumn":15},{"ruleId":"462","severity":1,"message":"479","line":6,"column":17,"nodeType":"464","messageId":"465","endLine":6,"endColumn":21},{"ruleId":"462","severity":1,"message":"480","line":6,"column":23,"nodeType":"464","messageId":"465","endLine":6,"endColumn":29},{"ruleId":"462","severity":1,"message":"485","line":8,"column":10,"nodeType":"464","messageId":"465","endLine":8,"endColumn":16},{"ruleId":"462","severity":1,"message":"486","line":8,"column":18,"nodeType":"464","messageId":"465","endLine":8,"endColumn":21},{"ruleId":"462","severity":1,"message":"476","line":8,"column":23,"nodeType":"464","messageId":"465","endLine":8,"endColumn":34},{"ruleId":"462","severity":1,"message":"477","line":9,"column":10,"nodeType":"464","messageId":"465","endLine":9,"endColumn":16},{"ruleId":"462","severity":1,"message":"483","line":1,"column":20,"nodeType":"464","messageId":"465","endLine":1,"endColumn":29},{"ruleId":"462","severity":1,"message":"477","line":1,"column":31,"nodeType":"464","messageId":"465","endLine":1,"endColumn":37},{"ruleId":"462","severity":1,"message":"486","line":1,"column":39,"nodeType":"464","messageId":"465","endLine":1,"endColumn":42},{"ruleId":"462","severity":1,"message":"487","line":1,"column":44,"nodeType":"464","messageId":"465","endLine":1,"endColumn":48},{"ruleId":"462","severity":1,"message":"484","line":1,"column":50,"nodeType":"464","messageId":"465","endLine":1,"endColumn":59},{"ruleId":"462","severity":1,"message":"488","line":1,"column":61,"nodeType":"464","messageId":"465","endLine":1,"endColumn":64},{"ruleId":"462","severity":1,"message":"489","line":1,"column":66,"nodeType":"464","messageId":"465","endLine":1,"endColumn":69},{"ruleId":"490","severity":1,"message":"491","line":8,"column":11,"nodeType":"492","endLine":10,"endColumn":43},{"ruleId":"490","severity":1,"message":"491","line":17,"column":11,"nodeType":"492","endLine":19,"endColumn":43},{"ruleId":"462","severity":1,"message":"493","line":3,"column":10,"nodeType":"464","messageId":"465","endLine":3,"endColumn":25},{"ruleId":"462","severity":1,"message":"486","line":4,"column":29,"nodeType":"464","messageId":"465","endLine":4,"endColumn":32},{"ruleId":"494","severity":1,"message":"495","line":155,"column":173,"nodeType":"492","endLine":155,"endColumn":264},{"ruleId":"462","severity":1,"message":"478","line":7,"column":10,"nodeType":"464","messageId":"465","endLine":7,"endColumn":15},{"ruleId":"462","severity":1,"message":"479","line":7,"column":17,"nodeType":"464","messageId":"465","endLine":7,"endColumn":21},{"ruleId":"462","severity":1,"message":"480","line":7,"column":23,"nodeType":"464","messageId":"465","endLine":7,"endColumn":29},{"ruleId":"462","severity":1,"message":"485","line":9,"column":10,"nodeType":"464","messageId":"465","endLine":9,"endColumn":16},{"ruleId":"462","severity":1,"message":"486","line":9,"column":18,"nodeType":"464","messageId":"465","endLine":9,"endColumn":21},{"ruleId":"462","severity":1,"message":"476","line":9,"column":23,"nodeType":"464","messageId":"465","endLine":9,"endColumn":34},{"ruleId":"462","severity":1,"message":"477","line":10,"column":10,"nodeType":"464","messageId":"465","endLine":10,"endColumn":16},{"ruleId":"462","severity":1,"message":"496","line":14,"column":8,"nodeType":"464","messageId":"465","endLine":14,"endColumn":31},{"ruleId":"462","severity":1,"message":"497","line":3,"column":8,"nodeType":"464","messageId":"465","endLine":3,"endColumn":24},{"ruleId":"462","severity":1,"message":"498","line":4,"column":8,"nodeType":"464","messageId":"465","endLine":4,"endColumn":25},{"ruleId":"462","severity":1,"message":"499","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":34},{"ruleId":"462","severity":1,"message":"500","line":3,"column":8,"nodeType":"464","messageId":"465","endLine":3,"endColumn":32},{"ruleId":"501","severity":1,"message":"502","line":14,"column":70,"nodeType":"503","endLine":14,"endColumn":72,"suggestions":"504"},{"ruleId":"462","severity":1,"message":"505","line":1,"column":42,"nodeType":"464","messageId":"465","endLine":1,"endColumn":47},{"ruleId":"462","severity":1,"message":"506","line":2,"column":17,"nodeType":"464","messageId":"465","endLine":2,"endColumn":25},{"ruleId":"462","severity":1,"message":"507","line":4,"column":10,"nodeType":"464","messageId":"465","endLine":4,"endColumn":21},{"ruleId":"462","severity":1,"message":"508","line":4,"column":23,"nodeType":"464","messageId":"465","endLine":4,"endColumn":34},{"ruleId":"462","severity":1,"message":"509","line":5,"column":8,"nodeType":"464","messageId":"465","endLine":5,"endColumn":28},{"ruleId":"462","severity":1,"message":"510","line":5,"column":10,"nodeType":"464","messageId":"465","endLine":5,"endColumn":19},{"ruleId":"462","severity":1,"message":"486","line":5,"column":21,"nodeType":"464","messageId":"465","endLine":5,"endColumn":24},{"ruleId":"462","severity":1,"message":"511","line":5,"column":26,"nodeType":"464","messageId":"465","endLine":5,"endColumn":33},{"ruleId":"462","severity":1,"message":"512","line":5,"column":35,"nodeType":"464","messageId":"465","endLine":5,"endColumn":43},{"ruleId":"462","severity":1,"message":"485","line":5,"column":45,"nodeType":"464","messageId":"465","endLine":5,"endColumn":51},{"ruleId":"462","severity":1,"message":"476","line":5,"column":53,"nodeType":"464","messageId":"465","endLine":5,"endColumn":64},{"ruleId":"462","severity":1,"message":"513","line":5,"column":66,"nodeType":"464","messageId":"465","endLine":5,"endColumn":74},{"ruleId":"462","severity":1,"message":"482","line":5,"column":93,"nodeType":"464","messageId":"465","endLine":5,"endColumn":97},{"ruleId":"462","severity":1,"message":"514","line":5,"column":99,"nodeType":"464","messageId":"465","endLine":5,"endColumn":112},{"ruleId":"462","severity":1,"message":"515","line":5,"column":129,"nodeType":"464","messageId":"465","endLine":5,"endColumn":140},{"ruleId":"462","severity":1,"message":"488","line":5,"column":142,"nodeType":"464","messageId":"465","endLine":5,"endColumn":145},{"ruleId":"462","severity":1,"message":"516","line":5,"column":152,"nodeType":"464","messageId":"465","endLine":5,"endColumn":156},{"ruleId":"462","severity":1,"message":"517","line":5,"column":158,"nodeType":"464","messageId":"465","endLine":5,"endColumn":163},{"ruleId":"462","severity":1,"message":"518","line":5,"column":165,"nodeType":"464","messageId":"465","endLine":5,"endColumn":174},{"ruleId":"462","severity":1,"message":"519","line":5,"column":176,"nodeType":"464","messageId":"465","endLine":5,"endColumn":187},{"ruleId":"462","severity":1,"message":"486","line":5,"column":14,"nodeType":"464","messageId":"465","endLine":5,"endColumn":17},{"ruleId":"462","severity":1,"message":"511","line":5,"column":19,"nodeType":"464","messageId":"465","endLine":5,"endColumn":26},{"ruleId":"462","severity":1,"message":"512","line":5,"column":28,"nodeType":"464","messageId":"465","endLine":5,"endColumn":36},{"ruleId":"462","severity":1,"message":"485","line":5,"column":38,"nodeType":"464","messageId":"465","endLine":5,"endColumn":44},{"ruleId":"462","severity":1,"message":"476","line":5,"column":46,"nodeType":"464","messageId":"465","endLine":5,"endColumn":57},{"ruleId":"462","severity":1,"message":"513","line":5,"column":59,"nodeType":"464","messageId":"465","endLine":5,"endColumn":67},{"ruleId":"462","severity":1,"message":"482","line":5,"column":86,"nodeType":"464","messageId":"465","endLine":5,"endColumn":90},{"ruleId":"462","severity":1,"message":"514","line":5,"column":92,"nodeType":"464","messageId":"465","endLine":5,"endColumn":105},{"ruleId":"462","severity":1,"message":"520","line":5,"column":115,"nodeType":"464","messageId":"465","endLine":5,"endColumn":120},{"ruleId":"462","severity":1,"message":"515","line":5,"column":122,"nodeType":"464","messageId":"465","endLine":5,"endColumn":133},{"ruleId":"462","severity":1,"message":"488","line":5,"column":135,"nodeType":"464","messageId":"465","endLine":5,"endColumn":138},{"ruleId":"462","severity":1,"message":"489","line":5,"column":140,"nodeType":"464","messageId":"465","endLine":5,"endColumn":143},{"ruleId":"462","severity":1,"message":"516","line":5,"column":145,"nodeType":"464","messageId":"465","endLine":5,"endColumn":149},{"ruleId":"462","severity":1,"message":"517","line":5,"column":151,"nodeType":"464","messageId":"465","endLine":5,"endColumn":156},{"ruleId":"462","severity":1,"message":"518","line":5,"column":158,"nodeType":"464","messageId":"465","endLine":5,"endColumn":167},{"ruleId":"462","severity":1,"message":"519","line":5,"column":169,"nodeType":"464","messageId":"465","endLine":5,"endColumn":180},{"ruleId":"462","severity":1,"message":"500","line":3,"column":8,"nodeType":"464","messageId":"465","endLine":3,"endColumn":32},{"ruleId":"462","severity":1,"message":"506","line":2,"column":17,"nodeType":"464","messageId":"465","endLine":2,"endColumn":25},{"ruleId":"462","severity":1,"message":"521","line":4,"column":8,"nodeType":"464","messageId":"465","endLine":4,"endColumn":28},{"ruleId":"501","severity":1,"message":"522","line":22,"column":58,"nodeType":"503","endLine":22,"endColumn":60,"suggestions":"523"},{"ruleId":"524","severity":1,"message":"525","line":34,"column":15,"nodeType":"526","messageId":"471","endLine":34,"endColumn":17},{"ruleId":"524","severity":1,"message":"525","line":34,"column":32,"nodeType":"526","messageId":"471","endLine":34,"endColumn":34},{"ruleId":"462","severity":1,"message":"527","line":4,"column":10,"nodeType":"464","messageId":"465","endLine":4,"endColumn":16},{"ruleId":"501","severity":1,"message":"528","line":15,"column":63,"nodeType":"503","endLine":15,"endColumn":65,"suggestions":"529"},{"ruleId":"462","severity":1,"message":"530","line":58,"column":14,"nodeType":"464","messageId":"465","endLine":58,"endColumn":17},{"ruleId":"462","severity":1,"message":"531","line":61,"column":15,"nodeType":"464","messageId":"465","endLine":61,"endColumn":25},{"ruleId":"462","severity":1,"message":"477","line":2,"column":34,"nodeType":"464","messageId":"465","endLine":2,"endColumn":40},{"ruleId":"501","severity":1,"message":"532","line":12,"column":46,"nodeType":"503","endLine":12,"endColumn":48,"suggestions":"533"},{"ruleId":"462","severity":1,"message":"527","line":2,"column":10,"nodeType":"464","messageId":"465","endLine":2,"endColumn":16},{"ruleId":"501","severity":1,"message":"534","line":13,"column":58,"nodeType":"503","endLine":13,"endColumn":60,"suggestions":"535"},{"ruleId":"462","severity":1,"message":"520","line":1,"column":16,"nodeType":"464","messageId":"465","endLine":1,"endColumn":21},{"ruleId":"462","severity":1,"message":"527","line":1,"column":10,"nodeType":"464","messageId":"465","endLine":1,"endColumn":16},{"ruleId":"501","severity":1,"message":"536","line":13,"column":53,"nodeType":"503","endLine":13,"endColumn":55,"suggestions":"537"},{"ruleId":"462","severity":1,"message":"527","line":1,"column":10,"nodeType":"464","messageId":"465","endLine":1,"endColumn":16},{"ruleId":"462","severity":1,"message":"505","line":3,"column":42,"nodeType":"464","messageId":"465","endLine":3,"endColumn":47},{"ruleId":"501","severity":1,"message":"538","line":13,"column":63,"nodeType":"503","endLine":13,"endColumn":65,"suggestions":"539"},{"ruleId":"462","severity":1,"message":"540","line":1,"column":8,"nodeType":"464","messageId":"465","endLine":1,"endColumn":13},{"ruleId":"462","severity":1,"message":"541","line":5,"column":13,"nodeType":"464","messageId":"465","endLine":5,"endColumn":18},{"ruleId":"462","severity":1,"message":"542","line":8,"column":15,"nodeType":"464","messageId":"465","endLine":8,"endColumn":29},{"ruleId":"462","severity":1,"message":"540","line":1,"column":8,"nodeType":"464","messageId":"465","endLine":1,"endColumn":13},{"ruleId":"462","severity":1,"message":"543","line":6,"column":13,"nodeType":"464","messageId":"465","endLine":6,"endColumn":19},{"ruleId":"462","severity":1,"message":"542","line":9,"column":15,"nodeType":"464","messageId":"465","endLine":9,"endColumn":29},{"ruleId":"524","severity":1,"message":"525","line":12,"column":31,"nodeType":"526","messageId":"471","endLine":12,"endColumn":33},{"ruleId":"462","severity":1,"message":"540","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":13},{"ruleId":"462","severity":1,"message":"543","line":7,"column":13,"nodeType":"464","messageId":"465","endLine":7,"endColumn":19},{"ruleId":"524","severity":1,"message":"525","line":15,"column":31,"nodeType":"526","messageId":"471","endLine":15,"endColumn":33},{"ruleId":"462","severity":1,"message":"540","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":13},{"ruleId":"462","severity":1,"message":"543","line":7,"column":13,"nodeType":"464","messageId":"465","endLine":7,"endColumn":19},{"ruleId":"524","severity":1,"message":"525","line":15,"column":31,"nodeType":"526","messageId":"471","endLine":15,"endColumn":33},{"ruleId":"462","severity":1,"message":"540","line":1,"column":8,"nodeType":"464","messageId":"465","endLine":1,"endColumn":13},{"ruleId":"462","severity":1,"message":"543","line":6,"column":13,"nodeType":"464","messageId":"465","endLine":6,"endColumn":19},{"ruleId":"524","severity":1,"message":"525","line":14,"column":31,"nodeType":"526","messageId":"471","endLine":14,"endColumn":33},{"ruleId":"462","severity":1,"message":"540","line":1,"column":8,"nodeType":"464","messageId":"465","endLine":1,"endColumn":13},{"ruleId":"462","severity":1,"message":"541","line":5,"column":13,"nodeType":"464","messageId":"465","endLine":5,"endColumn":18},{"ruleId":"462","severity":1,"message":"542","line":8,"column":15,"nodeType":"464","messageId":"465","endLine":8,"endColumn":29},{"ruleId":"462","severity":1,"message":"540","line":1,"column":8,"nodeType":"464","messageId":"465","endLine":1,"endColumn":13},{"ruleId":"462","severity":1,"message":"543","line":6,"column":13,"nodeType":"464","messageId":"465","endLine":6,"endColumn":19},{"ruleId":"462","severity":1,"message":"540","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":13},{"ruleId":"462","severity":1,"message":"543","line":7,"column":13,"nodeType":"464","messageId":"465","endLine":7,"endColumn":19},{"ruleId":"462","severity":1,"message":"542","line":10,"column":15,"nodeType":"464","messageId":"465","endLine":10,"endColumn":29},{"ruleId":"524","severity":1,"message":"525","line":14,"column":35,"nodeType":"526","messageId":"471","endLine":14,"endColumn":37},{"ruleId":"462","severity":1,"message":"540","line":1,"column":8,"nodeType":"464","messageId":"465","endLine":1,"endColumn":13},{"ruleId":"462","severity":1,"message":"543","line":6,"column":13,"nodeType":"464","messageId":"465","endLine":6,"endColumn":19},{"ruleId":"462","severity":1,"message":"542","line":10,"column":15,"nodeType":"464","messageId":"465","endLine":10,"endColumn":29},{"ruleId":"524","severity":1,"message":"525","line":13,"column":31,"nodeType":"526","messageId":"471","endLine":13,"endColumn":33},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'MDBTimePicker' is defined but never used.","'MDBCol' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-native-reassign",["544"],"no-negated-in-lhs",["545"],"'NavDropdown' is defined but never used.","'Button' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Jumbotron' is defined but never used.","'Container' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getAllByAltText' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'InterviewSchedulerForHr' is defined but never used.","'ShowPanelMembers' is defined but never used.","'DeletePanelMember' is defined but never used.","'techInterviewScheduleAdmin' is defined but never used.","'hrInterviewScheduleAdmin' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'ViewInterviewMemberForTechAction_Function'. Either include it or remove the dependency array.","ArrayExpression",["546"],"'Modal' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'GiveTechRatingAction' is defined but never used.","'HelpBlock' is defined but never used.","'Spinner' is defined but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'ButtonToolbar' is defined but never used.","'ButtonGroup' is defined but never used.","'Grid' is defined but never used.","'Panel' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'Table' is defined but never used.","'SearchEmployeeAction' is defined but never used.","React Hook React.useEffect has a missing dependency: 'AddPanelMemberAction_Function'. Either include it or remove the dependency array.",["547"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'render' is defined but never used.","React Hook React.useEffect has a missing dependency: 'DeletePanelMemberAction_Function'. Either include it or remove the dependency array.",["548"],"'Box' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'PanelMemberList'. Either include it or remove the dependency array.",["549"],"React Hook React.useEffect has a missing dependency: 'SearchEmployeeAction_Function'. Either include it or remove the dependency array.",["550"],"React Hook React.useEffect has a missing dependency: 'SurrenderAsHRAction_Func'. Either include it or remove the dependency array.",["551"],"React Hook React.useEffect has a missing dependency: 'ViewaCandidateForHRAction_Function'. Either include it or remove the dependency array.",["552"],"'axios' is defined but never used.","'error' is defined but never used.","'serverResponse' is assigned a value but never used.","'onLoad' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},"Update the dependencies array to be: [ViewInterviewMemberForTechAction_Function]",{"range":"567","text":"568"},"Update the dependencies array to be: [AddPanelMemberAction_Function]",{"range":"569","text":"570"},"Update the dependencies array to be: [DeletePanelMemberAction_Function]",{"range":"571","text":"572"},"Update the dependencies array to be: [PanelMemberList]",{"range":"573","text":"574"},"Update the dependencies array to be: [SearchEmployeeAction_Function]",{"range":"575","text":"576"},"Update the dependencies array to be: [SurrenderAsHRAction_Func]",{"range":"577","text":"578"},"Update the dependencies array to be: [ViewaCandidateForHRAction_Function]",{"range":"579","text":"580"},[505,507],"[ViewInterviewMemberForTechAction_Function]",[762,764],"[AddPanelMemberAction_Function]",[575,577],"[DeletePanelMemberAction_Function]",[461,463],"[PanelMemberList]",[544,546],"[SearchEmployeeAction_Function]",[538,540],"[SurrenderAsHRAction_Func]",[555,557],"[ViewaCandidateForHRAction_Function]"]