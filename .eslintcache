[{"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\index.js":"1","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reportWebVitals.js":"2","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\App.js":"3","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminPanelMemberReducer.js":"4","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminInterviewReducer.js":"5","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminCandidateReducer.js":"6","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\home.js":"7","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\homeadmin.js":"8","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\about.js":"9","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\homehr.js":"10","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\hometech.js":"11","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\admin.js":"12","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\hr.js":"13","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\tech.js":"14","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js":"15","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForAdmin.js":"16","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js":"17","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\givetechrating.js":"18","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForHR.js":"19","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js":"20","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForAdmin.js":"21","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForHR.js":"22","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\EmployeeForAdmin.js":"23","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js":"24","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\deletepanelmember.js":"25","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\showpanelmember.js":"26","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\addpanelmember.js":"27","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js":"28","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewallinterviewmembers.js":"29","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js":"30","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givetechratingaction.js":"31","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js":"32","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js":"33","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js":"34","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js":"35","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js":"36","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\hrservices\\viewhrcandidate.js":"37","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\viewCandidate.js":"38","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\addCandidate.js":"39","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js":"40","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js":"41","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\services\\searchemployee.js":"42","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js":"43","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\hrservices\\surrenderashr.js":"44","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_panel.js":"45","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_candidates.js":"46","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\addpanelmember_action.js":"47","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\showpanelmembers_action.js":"48","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\deletepanelmember_action.js":"49","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\employee\\searchemployee_action.js":"50","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_techinterview.js":"51","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\models\\InterviewScheduler.js":"52","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\models\\hrInterviewScheduler.js":"53","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_hrinterview.js":"54","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\models\\Candidate.js":"55","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_hr.js":"56","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js":"57","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js":"58","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getLocationsAction.js":"59","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js":"60","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js":"61","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\addCandidateAction.js":"62","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByIdAction.js":"63","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js":"64","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js":"65","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js":"66","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js":"67","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByNameAction.js":"68","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByAllAction.js":"69","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_hr.js":"70","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelinterview_action.js":"71","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminEmployeeReducer.js":"72","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updateinterviewschedule_action.js":"73","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\hrReducer.js":"74","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\techreducer.js":"75","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js":"76","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelhrinterview_action.js":"77","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updatehrinterviewschedule_action.js":"78"},{"size":2005,"mtime":1610702474246,"results":"79","hashOfConfig":"80"},{"size":375,"mtime":1610690959041,"results":"81","hashOfConfig":"80"},{"size":2264,"mtime":1610690958984,"results":"82","hashOfConfig":"80"},{"size":1013,"mtime":1610700087372,"results":"83","hashOfConfig":"80"},{"size":1221,"mtime":1610703418582,"results":"84","hashOfConfig":"80"},{"size":1084,"mtime":1610690959039,"results":"85","hashOfConfig":"80"},{"size":1036,"mtime":1610690959009,"results":"86","hashOfConfig":"80"},{"size":500,"mtime":1610690959009,"results":"87","hashOfConfig":"80"},{"size":7685,"mtime":1610690959001,"results":"88","hashOfConfig":"80"},{"size":563,"mtime":1610702474238,"results":"89","hashOfConfig":"80"},{"size":629,"mtime":1610690959010,"results":"90","hashOfConfig":"80"},{"size":1519,"mtime":1610690959002,"results":"91","hashOfConfig":"80"},{"size":1021,"mtime":1610690959010,"results":"92","hashOfConfig":"80"},{"size":842,"mtime":1610700087364,"results":"93","hashOfConfig":"80"},{"size":2535,"mtime":1610690959012,"results":"94","hashOfConfig":"80"},{"size":3105,"mtime":1610690959023,"results":"95","hashOfConfig":"80"},{"size":4249,"mtime":1610700087359,"results":"96","hashOfConfig":"80"},{"size":4172,"mtime":1610700087357,"results":"97","hashOfConfig":"80"},{"size":1414,"mtime":1610702474241,"results":"98","hashOfConfig":"80"},{"size":5487,"mtime":1610694348033,"results":"99","hashOfConfig":"80"},{"size":2118,"mtime":1610690959002,"results":"100","hashOfConfig":"80"},{"size":1017,"mtime":1610702474229,"results":"101","hashOfConfig":"80"},{"size":1344,"mtime":1610690959008,"results":"102","hashOfConfig":"80"},{"size":3211,"mtime":1610692090518,"results":"103","hashOfConfig":"80"},{"size":4095,"mtime":1610694841994,"results":"104","hashOfConfig":"80"},{"size":2695,"mtime":1610694841997,"results":"105","hashOfConfig":"80"},{"size":7468,"mtime":1610690959025,"results":"106","hashOfConfig":"80"},{"size":1749,"mtime":1610690959019,"results":"107","hashOfConfig":"80"},{"size":1612,"mtime":1610690959019,"results":"108","hashOfConfig":"80"},{"size":579,"mtime":1610690958998,"results":"109","hashOfConfig":"80"},{"size":749,"mtime":1610700087345,"results":"110","hashOfConfig":"80"},{"size":9666,"mtime":1610690959014,"results":"111","hashOfConfig":"80"},{"size":1181,"mtime":1610690959018,"results":"112","hashOfConfig":"80"},{"size":3239,"mtime":1610702956674,"results":"113","hashOfConfig":"80"},{"size":8419,"mtime":1610690959016,"results":"114","hashOfConfig":"80"},{"size":3481,"mtime":1610699850179,"results":"115","hashOfConfig":"80"},{"size":4251,"mtime":1610702474232,"results":"116","hashOfConfig":"80"},{"size":5914,"mtime":1610690959005,"results":"117","hashOfConfig":"80"},{"size":10203,"mtime":1610690959004,"results":"118","hashOfConfig":"80"},{"size":1621,"mtime":1610690959018,"results":"119","hashOfConfig":"80"},{"size":3511,"mtime":1610703390047,"results":"120","hashOfConfig":"80"},{"size":3393,"mtime":1610702474236,"results":"121","hashOfConfig":"80"},{"size":2276,"mtime":1610690959023,"results":"122","hashOfConfig":"80"},{"size":3711,"mtime":1610702474243,"results":"123","hashOfConfig":"80"},{"size":368,"mtime":1610690958996,"results":"124","hashOfConfig":"80"},{"size":385,"mtime":1610690958995,"results":"125","hashOfConfig":"80"},{"size":950,"mtime":1610690958999,"results":"126","hashOfConfig":"80"},{"size":647,"mtime":1610700087350,"results":"127","hashOfConfig":"80"},{"size":803,"mtime":1610700087345,"results":"128","hashOfConfig":"80"},{"size":797,"mtime":1610699244042,"results":"129","hashOfConfig":"80"},{"size":2134,"mtime":1610690958994,"results":"130","hashOfConfig":"80"},{"size":454,"mtime":1610690959037,"results":"131","hashOfConfig":"80"},{"size":448,"mtime":1610690959038,"results":"132","hashOfConfig":"80"},{"size":1948,"mtime":1610690958993,"results":"133","hashOfConfig":"80"},{"size":500,"mtime":1610690959037,"results":"134","hashOfConfig":"80"},{"size":872,"mtime":1610702474204,"results":"135","hashOfConfig":"80"},{"size":336,"mtime":1610690958986,"results":"136","hashOfConfig":"80"},{"size":339,"mtime":1610690958987,"results":"137","hashOfConfig":"80"},{"size":329,"mtime":1610690958987,"results":"138","hashOfConfig":"80"},{"size":340,"mtime":1610690958988,"results":"139","hashOfConfig":"80"},{"size":334,"mtime":1610690958987,"results":"140","hashOfConfig":"80"},{"size":1089,"mtime":1610690958985,"results":"141","hashOfConfig":"80"},{"size":393,"mtime":1610690958989,"results":"142","hashOfConfig":"80"},{"size":360,"mtime":1610690958989,"results":"143","hashOfConfig":"80"},{"size":369,"mtime":1610690958991,"results":"144","hashOfConfig":"80"},{"size":370,"mtime":1610690958991,"results":"145","hashOfConfig":"80"},{"size":348,"mtime":1610690958990,"results":"146","hashOfConfig":"80"},{"size":351,"mtime":1610690958990,"results":"147","hashOfConfig":"80"},{"size":317,"mtime":1610700087340,"results":"148","hashOfConfig":"80"},{"size":846,"mtime":1610702474227,"results":"149","hashOfConfig":"80"},{"size":777,"mtime":1610691702197,"results":"150","hashOfConfig":"80"},{"size":446,"mtime":1610698334015,"results":"151","hashOfConfig":"80"},{"size":787,"mtime":1610691819789,"results":"152","hashOfConfig":"80"},{"size":691,"mtime":1610702474247,"results":"153","hashOfConfig":"80"},{"size":854,"mtime":1610700087375,"results":"154","hashOfConfig":"80"},{"size":1620,"mtime":1610700087355,"results":"155","hashOfConfig":"80"},{"size":789,"mtime":1610702656657,"results":"156","hashOfConfig":"80"},{"size":799,"mtime":1610703071026,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5qgcae",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"162"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"162"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"162"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"162"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"162"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"162"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"162"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"162"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"162"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"162"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"162"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"162"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"162"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"162"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"162"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"162"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"162"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"162"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"162"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"162"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"162"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"162"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"162"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"162"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"162"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"162"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"162"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"162"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"162"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\index.js",["345","346","347"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reportWebVitals.js",[],["348","349"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\App.js",["350","351"],"import './App.css';\r\n\r\n//Internal Components\r\nimport Logo from \"./logo.svg\"\r\nimport HomeComponent from './components/home'\r\nimport HomeAdminComponent from './components/homeadmin';\r\nimport AboutUsComponent from './components/about';\r\nimport HomeHRComponent from './components/homehr';\r\nimport HomeTechComponent from './components/hometech';\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n    {/* NAVIGATION BAR COMPONENT FROM BOOTSTRAP */}\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n          src={Logo} \r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"React Bootstrap logo\"\r\n        />{' '}\r\n        Interview Tracking System\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            \r\n            <Link to='/'>\r\n              <Nav.Link href=\"/\" active>Home</Nav.Link>\r\n            </Link>\r\n            <Link to='/admin'>\r\n              <Nav.Link href=\"/admin\" active>Services</Nav.Link>\r\n            </Link>\r\n            <Link to='/about'>\r\n              <Nav.Link href=\"/about\">About Us</Nav.Link>\r\n            </Link>\r\n            <Nav.Link href=\"#link\" disabled>Log Out</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      {/* Some Common Components if required at all */}\r\n\r\n      {/* Switching the content from nav operations */}\r\n      <Switch>\r\n        <Route path='/' component={HomeComponent} exact />\r\n        <Route path='/admin' component={HomeAdminComponent} exact />\r\n        <Route path='/hr' component={HomeHRComponent} exact />\r\n        <Route path='/tech' component={HomeTechComponent} exact />\r\n        <Route path='/about' component={AboutUsComponent} exact />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n//  background-image: url(\"../src/logo.png\");\r\n/*\r\n.bg-custom{\r\n  background-image: linear-gradient(45deg, #114455, #292929);\r\n}\r\n*/\r\nexport default App;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminPanelMemberReducer.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminInterviewReducer.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminCandidateReducer.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\home.js",["352","353","354","355","356","357","358","359","360"],"import { Carousel, Jumbotron, Button, Nav, Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst HomeComponent = () => {\r\n  return (\r\n    <div className='container-fluid' >\r\n      <Carousel>\r\n        <Carousel.Item style={{ 'height': \"700px\" }} >\r\n          <img style={{ 'height': \"700px\" }}\r\n            className=\"d-block w-100\"\r\n            src={'assets/img/int1.jpg'} />\r\n          <Carousel.Caption>\r\n            <h3><b>INTERVIEW TRACKING SYSTEM</b></h3>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item style={{ 'height': \"700px\" }}>\r\n          <img style={{ 'height': \"700px\" }}\r\n            className=\"d-block w-100\"\r\n            src={'assets/img/int3.jpg'} />\r\n          <Carousel.Caption>\r\n            <center>\r\n            <h3><b>INTERVIEW TRACKING SYSTEM</b></h3>\r\n            </center>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default HomeComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\homeadmin.js",["361","362","363","364","365","366","367"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport AdminComponent from './admin';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\n\r\nconst HomeAdminComponent = () => {\r\n    return (\r\n        <div>\r\n        \r\n            <AdminComponent></AdminComponent>\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeAdminComponent;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\about.js",["368","369","370"],"//About Us Component : CHECK WARNING.info FOR NOTES.....\r\n  \r\nimport { getAllByAltText } from '@testing-library/react';\r\nimport { Jumbotron, Button, Nav, Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst AboutUsComponent = () => {\r\n    return (\r\n        <div>\r\n            <Jumbotron style={{textAlign:\"left\", backdropFilter: \"blur(10px)\", marginLeft: 10, marginRight: 10}}>\r\n                <h1>Interview Tracking App</h1>\r\n                <p>\r\n                    This is a service for tracking interview schedules in an organization, a simple project done by a team from Capgemini as a part of\r\n                    their training. ITS provides services that connect to RESTful APIs which handle with data from a postgre database with mock data. \r\n                    There are services for Admin and Panel Members who need to login to access the same. Employees, Panel Members and Candidate details can be operated on with these services.\r\n                </p>\r\n                <p>\r\n                    <Button variant=\"dark\" href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">Check code on Github</Button>\r\n                </p>\r\n            </Jumbotron>\r\n            <br></br>\r\n            <h1>Our Team</h1>\r\n            <br></br>\r\n            {/* MEMBERS */}\r\n            <Container>\r\n                <Row md={3}>\r\n                    {/* MEMBER IS FROM COL TO COL TAG.... */}\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Rutuja Patil</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Neeti Mishra</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Meetali Patidar</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Shrishti Singh</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Sneha Chitale</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Prasanna Mandapalli</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br></br>\r\n                <Row md={3}>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Priyanka Yadav</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Suraj Vijaykumar Mandal</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col sm>\r\n                        <Card style={{ width: '18rem', margin: 'auto' }}>\r\n                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>Yash Sandeep Kadam</Card.Title>\r\n                            <Card.Text>\r\n                            Software Analyst\r\n                            </Card.Text>\r\n                            <Button href=\"https://www.linkedin.com/in/yash-kadam/\" variant=\"primary\" target=\"_blank\">LinkedIn</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <br></br>\r\n\r\n            <div style={{background: \"#151515\", color: \"#CECECE\", textAlign:\"left\", margin: 0}}>Content owned by the team of above mentioned individuals. Code available on <a href=\"https://github.com/neetimishra98/Sprint3_InterviewTrackingSystem\" target=\"_blank\">github</a>.</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default AboutUsComponent;\r\n\r\n\r\n\r\n","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\homehr.js",["371","372","373","374","375","376","377"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport HRComponent from './hr';\r\n\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap'; \r\n\r\n\r\nconst HomeHRComponent = () => {\r\n    return (\r\n        <div>\r\n            {/* Some Logic To Check If User Logged In Is Admin Or A Panel Member.... */}\r\n            {/*<AdminComponent></AdminComponent>*/}\r\n            <HRComponent></HRComponent>\r\n            {/* \r\n            <TechComponent></TechComponent>*/} \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeHRComponent;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\hometech.js",["378","379","380","381","382","383","384","385","386","387","388"],"//Home Component : CHECK WARNING.info FOR NOTES.....\r\n\r\nimport TechComponent from './tech';\r\n\r\n//Installed Components\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\n//Bootstrap\r\nimport {Tab,Tabs,Jumbotron,Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst HomeTechComponent = () => {\r\n    return (\r\n        <div>\r\n            \r\n                        \r\n           \r\n                    <TechComponent></TechComponent>\r\n            \r\n                    \r\n                \r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HomeTechComponent;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\admin.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\hr.js",["389"],"//Admin Services Component : CHECK WARNING.info FOR NOTES.....\r\n//import InterviewSchedulerForAdmin from './interviewscheduler/InterviewSchedulerForAdmin'\r\n\r\n//import InterviewSchedulerForAdmin from './interviewscheduler/InterviewSchedulerForAdmin'\r\n//import PanelMemberForAdmin from './panelmember/PanelMemberForAdmin'\r\n\r\n// Bootstrap\r\n\r\n\r\n\r\n\r\nimport PanelMemberForHR from './panelmember/PanelMemberForHR'\r\nimport SearchCandidate from './candidate/CandidateForHR';\r\nimport InterviewSchedulerForHr from './interviewscheduler/InterviewSchedulerForHr';\r\n\r\n\r\n\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\n\r\nconst HRComponent = () => {\r\n    return (\r\n        <div>\r\n            <Tabs id=\"uncontrolled-tab-example\">\r\n\r\n                <Tab eventKey=\"PanelMember\" title=\"HR INTERVIEW\">\r\n                <SearchCandidate></SearchCandidate>\r\n                    <PanelMemberForHR></PanelMemberForHR>\r\n                    \r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default HRComponent;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\tech.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForHr.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForAdmin.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\viewinterviewmemberfortech.js",["390"],"import React from 'react'\r\n\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ViewInterviewMemberForTechAction from '../../../actions/interviewscheduler/viewinterviewmemberfortechaction';\r\n\r\nconst ViewInterviewMemberForTech = (props) => {\r\n\r\n    var pathVar = null;\r\n    let member = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ViewInterviewMemberForTechAction_Function(), [])\r\n        const ViewInterviewMemberForTechAction_Function = () => {\r\n            dispatcher(ViewInterviewMemberForTechAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        dispatcher(ViewInterviewMemberForTechAction(pathVar));\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label> View Candidate Using interviewid</Form.Label>\r\n                        <Form.Control id=\"pathVariable\" type=\"text\" placeholder=\"Interview ID\"/>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Search\r\n                        </Button>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience</th>\r\n                            <th>Primary<br></br>Skills</th>\r\n                            <th>Secondary <br></br>Skills</th>\r\n                            <th>Notice <br></br>Period</th>\r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                        {renderData(member)}\r\n                        </tbody>\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(member) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", member);\r\n        if(member!==undefined){\r\n            return(\r\n                <tr>\r\n                   \r\n                </tr>\r\n            );\r\n        }\r\n    }        \r\n}\r\n\r\nexport default ViewInterviewMemberForTech;\r\n/*\r\n <td>{member.data.candidateid}</td>\r\n                    <td>{member.data.candidatename}</td>\r\n                    <td>{member.data.location}</td>\r\n                    <td>{member.data.qualification}</td>\r\n                    <td>{member.data.designation}</td>\r\n                    <td>{member.data.experience}</td>\r\n                    <td>{member.data.primaryskills}</td>\r\n                    <td>{member.data.secondaryskills}</td>\r\n                    <td>{member.data.noticeperiod}</td>*/","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\services\\givetechrating.js",["391","392","393","394","395"],"import { Form, Table, Jumbotron, Button, Modal } from 'react-bootstrap'\r\nimport React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport GiveTechRatingAction from '../../../actions/interviewscheduler/givetechratingaction'\r\n\r\nconst GiveTechRating = (props) => {\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Give TechRating to a Candidate by Interviewid</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview ID\" id=\"searchParameter\"/>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <th>Interview ID</th>\r\n                            \r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button variant=\"dark\" type=\"submit\" call>\r\n                        Search\r\n                    </Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GiveTechRating;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\PanelMemberForHR.js",["396","397"],"//Panel Services Accessible By The Admin....\r\nimport SurrenderAsHRPanel from './hrservices/surrenderashr'\r\nimport ShowPanelMembers from './services/showpanelmember'\r\nimport DeletePanelMember from './services/deletepanelmember'\r\n\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\nconst PanelMemberForHR = () => {\r\n    return (\r\n        <div style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundImage:`url(/logo.png)`,\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',\r\n            height: \"100px\"\r\n    \r\n    \r\n        }}>\r\n            {/* All underlying operations from services */}\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            Surrender As HR Panel\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    {/* Search an Panel component */}\r\n                    <Card.Body class=\"bg-custom\"><SurrenderAsHRPanel></SurrenderAsHRPanel></Card.Body>\r\n                    {/* Search an Panel component */}\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PanelMemberForHR;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForAdmin.js",["398","399"],"//Interview Services Accessible By The Admin....\r\nimport techInterviewScheduleAdmin from '../interviewscheduler/techInterviewScheduleAdmin';\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport HRShareandschedule from './adminhrServices/hrshareandschedule.js';\r\nimport HRCancelInterview from './adminhrServices/hrcancelinterview.js'\r\nimport HRUpdateInterview from \"./adminhrServices/hrupdatescheduleinterview\";\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\n\r\nimport { Row,Col,Container,Accordion, Card, Button } from 'react-bootstrap';\r\n\r\n//for normal image.\r\n//<img src=\"logo.jpg\" alt=\"pic\" />\r\n//  backgroundImage: \"url(/img/logo.png)\"\r\n\r\nconst InterviewSchedulerForAdmin = () => {\r\n \r\n\r\nreturn (\r\n  <div>\r\n \r\n      <Container className=\"mr-5\">\r\n      <card>\r\n      {/* All underlying operations from services */}\r\n      <Accordion>\r\n          \r\n         <table className=\"marginLeft\">\r\n         <Col className=\"align-items-center\">\r\n                   <Row>\r\n                  <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"0\">\r\n                      <center><h2><b><i>  TECH INTERVIEW</i></b></h2></center>\r\n              </Accordion.Toggle>\r\n             \r\n              <Accordion.Collapse eventKey=\"0\">\r\n                  {/* Add Candidate component */}\r\n                  <Card.Body class=\"bg-custom\">\r\n                    <TechShareandschedule></TechShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <TechUpdateInterview></TechUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"2\">\r\n                        Cancel technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <TechCancelInterview></TechCancelInterview>\r\n\r\n                   </Card.Body>\r\n                  {/* Add an Candidate component */}\r\n              </Accordion.Collapse>\r\n              </Row>\r\n              <Row>\r\n              <Accordion.Toggle as={Button} variant=\"dark\" eventKey=\"1\">\r\n              <center><h2><b><i> HR INTERVIEW</i></b></h2></center>\r\n              </Accordion.Toggle>\r\n         \r\n          <Accordion.Collapse eventKey=\"1\">\r\n              {/* View Candidate component */}\r\n              <Card.Body class=\"bg-custom\">\r\n                    <HRShareandschedule></HRShareandschedule>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                        Update HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    \r\n                    <HRUpdateInterview></HRUpdateInterview>\r\n\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button}  eventKey=\"1\">\r\n                       Cancel HR Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n\r\n                    <HRCancelInterview></HRCancelInterview>\r\n\r\n                   </Card.Body>\r\n              {/* View an Candidate component */}\r\n          </Accordion.Collapse>\r\n          </Row>\r\n        \r\n          </Col>\r\n          </table>\r\n      </Accordion>\r\n      </card>\r\n      </Container>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default InterviewSchedulerForAdmin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n   <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\r\n                       TECHNICAL INTERVIEW\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"3\">\r\n                  \r\n                    <Card.Body>\r\n\r\n                    \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                  \r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n               \r\n\r\n                \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                   \r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n             \r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                \r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n            \r\n                    </Card.Body>\r\n                   \r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                */\r\n","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForAdmin.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\CandidateForHR.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\EmployeeForAdmin.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techcancelinterview.js",["400"],"import React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CancelInterviewAction from '../../../actions/interviewscheduler/cancelinterview_action';\r\n\r\n\r\nconst TechCancelInterview = (props) => {\r\n\r\n    var pathVar = null;\r\n    let interview = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>CancelInterviewAction_Function(), [])\r\n        const CancelInterviewAction_Function = () => {\r\n            dispatcher(CancelInterviewAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"path\").value;\r\n        console.log(pathVar);\r\n        dispatcher(CancelInterviewAction(pathVar));\r\n        renderData(interview);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 500}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter Interview ID to Cancel</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Interview Id\" id=\"path\"/>\r\n                        </Form.Group>\r\n                        <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                            Cancel\r\n                        </Button>\r\n                        <hr></hr>\r\n                        {renderData(interview)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertInterviewNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Interview Not Found</Alert.Heading>\r\n              <p>\r\n                Interview with the mentioned id was not found.\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(interview) {   \r\n        console.log(\"interview member dispatcher object returned from the server : \", interview);\r\n        if(interview!==undefined && interview!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                       \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {/*<td>{interview.data.interviewid}</td>*/}\r\n                       \r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            );\r\n        }\r\n        if(interview!==undefined && interview===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertInterviewNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\nexport default TechCancelInterview;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\deletepanelmember.js",["401","402","403","404"],"\r\nimport { Form, Table, Jumbotron, Button, Modal } from 'react-bootstrap';\r\n\r\nimport { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DeletePanelMemberAction from '../../../actions/panelmember/deletepanelmember_action'\r\n\r\nconst DeletePanelMember = (props) => {\r\n\r\n    var pathVar = null;\r\n    let panelMember = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => DeletePanelMemberAction_Function(), [])\r\n    const DeletePanelMemberAction_Function = () => {\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        console.log(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\", pathVar);\r\n        dispatcher(DeletePanelMemberAction(pathVar));\r\n        renderData(panelMember);\r\n        console.log(pathVar);\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMember);\r\n    if (!Array.isArray(panelMember)) {\r\n        panelMember = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label for=\"pathVariable\">Delete by valid Name</Form.Label>\r\n                        <Form.Control id=\"pathVariable\" type=\"text\" placeholder=\"Employee Name\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Delete\r\n                    </Button>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>EmployeeName</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMember)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //MODAL\r\n    function Box() {\r\n        const [show, setShow] = useState(true);\r\n        const handleClose = () => setShow(false);\r\n        const handleShow = () => setShow(true);\r\n\r\n        return (\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Employee Name Not Found</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Entered incorrect or blank name</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        OK\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    function renderData(panelMember) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMember);\r\n        return panelMember.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default DeletePanelMember;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\showpanelmember.js",["405","406"],"import React from 'react';\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ShowPanelMemberAction from '../../../actions/panelmember/showpanelmembers_action'\r\n\r\n\r\nconst ShowPanelMembers = (props) => {\r\n\r\n    let panelMemberList = useSelector((state) => state.PanelMemberReducer.panelmembers);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(() => PanelMemberList(), [])\r\n    const PanelMemberList = () => {\r\n        dispatcher(ShowPanelMemberAction());\r\n    }\r\n\r\n    console.log(\"PanelMemberList: \", panelMemberList);\r\n    if (!Array.isArray(panelMemberList)) {\r\n        panelMemberList = [];\r\n        console.log(\"Set Panel Member to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>List All Panel Member.</Form.Label>\r\n                    </Form.Group>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PanelID</th>\r\n                                <th>Location</th>\r\n                                <th>Type</th>\r\n                                <th>EmployeeID</th>\r\n                                <th>Employee Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <hr></hr>\r\n                        {renderData(panelMemberList)}\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(panelMemberList) {\r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMemberList);\r\n        return panelMemberList.map((panelmember, index) => {\r\n            const Employeeid = panelmember.employeeEntity.employeeid;\r\n            const EmployeeName = panelmember.employeeEntity.name;\r\n            const { panelid, location, type } = panelmember //destructuring\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{panelid}</td>\r\n                        <td>{location}</td>\r\n                        <td>{type}</td>\r\n                        <td>{Employeeid}</td>\r\n                        <td>{EmployeeName}</td>\r\n                    </tr>\r\n                </tbody>\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default ShowPanelMembers;\r\n","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\services\\addpanelmember.js",["407","408","409","410","411"],"import { Alert, Form, Table, Jumbotron, Button, Col, InputGroup, FormControl } from 'react-bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchEmployeeAction from '../../../actions/employee/searchemployee_action';\r\nimport AddPanelMemberAction from '../../../actions/panelmember/addpanelmember_action';\r\n\r\n\r\nconst AddPanelMember = () => {\r\n\r\n    let loc = null;\r\n    let panel = null;\r\n    let name = null;\r\n    let post_json = null;\r\n\r\n    let props_wrapper = {};\r\n\r\n\r\n    let employee = useSelector((state)=>state.PanelMemberReducer);\r\n    let dispatcher = useDispatch();\r\n    \r\n    //ADD PANEL MEMBER WITH REACT USE EFFECT        \r\n    React.useEffect(()=>AddPanelMemberAction_Function(), [])\r\n        const AddPanelMemberAction_Function = () => {\r\n            dispatcher(AddPanelMemberAction(post_json, name));\r\n        }\r\n\r\n    function addPanelMember(){\r\n        loc = document.getElementById(\"location\").value;\r\n        panel = document.getElementById(\"panel\").value;\r\n        name = document.getElementById(\"name\").value;\r\n        console.log(name, loc, panel);\r\n        post_json = { employeeEntity: null, location : loc, panelid: 10000000, type : panel };\r\n        props_wrapper = {body: post_json, pathVar: name}\r\n        if(loc!=\"null\" && panel!=\"null\"){\r\n            dispatcher(AddPanelMemberAction(props_wrapper));\r\n            confirmAddition(employee);\r\n        }\r\n        else{\r\n            employee = null;\r\n            confirmAddition(employee);\r\n        }\r\n    }\r\n\r\n    function clearAlerts(){\r\n        employee = undefined;\r\n        confirmAddition(employee);\r\n    }\r\n\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 600}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>What is the name of the Employee?</Form.Label>\r\n                        {/* <Form.Control type=\"text\" placeholder=\"Name of the Employee\" id=\"searchParameter\"/> */}\r\n                        \r\n                        <br></br>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                            id=\"name\"\r\n                            placeholder=\"Employee's Name\"\r\n                            aria-label=\"Employee's Name\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            />\r\n                            <InputGroup.Append>\r\n                            {/* Check Button for Employee will run search employee..... */}\r\n                                \r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <hr></hr>\r\n                        <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                                <td>Select a Department</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                                        <Form.Control id=\"panel\" as=\"select\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option value=\"hr\">Human Resources (HR)</option>\r\n                                            <option value=\"tech\">Technical</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Select Location</td>\r\n                                <td>\r\n                                    <Form.Group as={Col} controlId=\"formGridState\" >\r\n                                        <Form.Control as=\"select\" id=\"location\" defaultValue=\"Choose...\">\r\n                                            <option value=\"null\">Choose...</option>\r\n                                            <option>Ahmedabad</option>\r\n                                            <option>Aurangabad</option>\r\n                                            <option>Bengaluru</option>\r\n                                            <option>Chennai</option>\r\n                                            <option>Delhi</option>\r\n                                            <option>Daman/Diu</option>\r\n                                            <option>Hyderabad</option>\r\n                                            <option>Indore</option>\r\n                                            <option>Lucknow</option>\r\n                                            <option>Mumbai</option>\r\n                                            <option>Nasik</option>\r\n                                            <option>Pune</option>\r\n                                            <option>Raipur</option>\r\n                                            <option>Thiruvananthapuram</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </td>\r\n                            </tr>\r\n                            <br></br>\r\n                            <tr>\r\n                                <td>\r\n                                    <Button variant=\"danger\" type=\"reset\" call onClick={clearAlerts}>\r\n                                        Reset\r\n                                    </Button>\r\n                                </td>\r\n                                <td>\r\n                                    <Button variant=\"primary\" type=\"button\" call onClick={addPanelMember}>\r\n                                        Add Member\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                {/* Response  */}\r\n                <div>\r\n                    {confirmAddition(employee)}\r\n                </div>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n    function confirmAddition(employee){\r\n        console.log(employee);\r\n        if(employee!==null && employee!==undefined){\r\n            console.log(\"Added the specified panel member to the database\");\r\n            return(\r\n                <Alert variant=\"success\">\r\n                <Alert.Heading>SUCCESSFULLY added the panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Added Successfully! Check \"SHOW_PANEL_MEMBERS\" to view all.\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(employee===null&& employee!==undefined){\r\n            return(\r\n                <Alert variant=\"danger\">\r\n                <Alert.Heading>FAILED to add panel member</Alert.Heading>\r\n                <p>\r\n                    The Panel Member Was Not Added! There was some error in processing your request.\r\n                </p>\r\n                </Alert>\r\n            );\r\n        }\r\n        if(employee===undefined){\r\n            console.log(\"Alerts Cleared\");\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AddPanelMember;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewlistforhr.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\viewallinterviewmembers.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\viewinterviewmemberfortechaction.js",["412","413","414"],"import axios from 'axios'\r\n\r\nconst ViewInterviewMemberForTechAction = (props)=> {\r\n    return async function(dispatch){\r\n        let error;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:8080/cgits/interviewscheduler/tech/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_INTERVIEW_MEMBER_FOR_TECH', payload: response}))\r\n        .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\nexport default ViewInterviewMemberForTechAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\givetechratingaction.js",["415","416","417","418"],"import axios from 'axios'\r\n\r\nconst GiveTechRatingAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:8080/cgits/interviewscheduler/tech/rating/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'GIVE_TECH_RATING', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'GIVE_TECH_RATING', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default GiveTechRatingAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techshareandschedule.js",["419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"import React from 'react';\r\n//import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n//import React, { Component } from \"react\";\r\n//import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\nimport { HelpBlock, Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport addTechInterviewAction from '../../../actions/interviewscheduler/add_techinterview';\r\nimport InterviewScheduler from '../../../models/InterviewScheduler';\r\nimport showcandidatesAction from '../../../actions/interviewscheduler/get_candidates';\r\nimport showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n\r\nlet dispatch;\r\nlet history;\r\nlet selectedCanId;\r\nlet selectedpanId;\r\n\r\nconst TechShareandschedule = (props) => {\r\n\r\n    dispatch = useDispatch();\r\n    history = useHistory();\r\n    //candidate\r\n    let candList = useSelector(state => state.InterviewReducer.candidates);\r\n    console.log(\"candList: \", candList);\r\n    React.useEffect(() => {\r\n        candidateList()\r\n    }, []);\r\n\r\n    const candidateList = () => {\r\n        dispatch(showcandidatesAction())\r\n    }\r\n\r\n    if (!Array.isArray(candList)) {\r\n        candList = [];\r\n        console.log(\"Set candList to blank array\");\r\n    }\r\n    //panel\r\n    let panList = useSelector(state => state.InterviewReducer.panels);\r\n    console.log(\"panList: \", panList);\r\n    React.useEffect(() => {\r\n        panelList()\r\n    }, []);\r\n\r\n    const panelList = () => {\r\n        dispatch(showPanelAction())\r\n    }\r\n\r\n    if (!Array.isArray(panList)) {\r\n        panList = [];\r\n        console.log(\"Set panList to blank array\");\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n\r\n        }}>\r\n            <Jumbotron style={{ width: 600 }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Share Candidate and Shecdule Interview</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>locations</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\" />\r\n                    </Form.Group>\r\n\r\n                    <Table size=\"sm\">\r\n                        <tbody id=\"table_content\">\r\n                            <tr>\r\n                            \r\n                                <td>\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>Start Time</b> </h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                                    </Form.Group>\r\n\r\n                                </td>\r\n                             \r\n                                <td>\r\n\r\n                                    <Form.Group controlId=\"formBasicName\">\r\n                                        <Form.Label><h6><b>End Time </b></h6></Form.Label>\r\n                                        <Form.Control type=\"time\" id=\"end\" name=\"end\" />\r\n                                    </Form.Group>\r\n\r\n\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Form.Group controlId=\"formBasicExperience\">\r\n                        <Form.Label>Tech Interview Rating</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                            <option>0</option>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                            <option>7</option>\r\n                            <option>8</option>\r\n                            <option>9</option>\r\n                            <option>10</option>\r\n                        </Form.Control>\r\n\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n                               \r\n\r\n                    <Button variant=\"dark\" type=\"submit\" call>\r\n                        ADD\r\n                    </Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction handleChangecandidate(event) {\r\n    selectedCanId = event.target.value\r\n    console.log(\"selected candidate: \" + selectedCanId);\r\n}\r\n\r\nfunction handleChangepanel(event) {\r\n    selectedpanId = event.target.value\r\n    console.log(\"selected panel member: \" + selectedpanId);\r\n}\r\n\r\n\r\nfunction renderCandidates(candList) {\r\n    console.log(\"candList: \", candList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return candList.map((candidate) => {\r\n        const { candidateid } = candidate //destructuring //candidte id \r\n        return (\r\n            <option key={candidateid} value={candidateid}>{candidateid}</option>\r\n        )\r\n    })\r\n}\r\n\r\n\r\nfunction renderpanels(panList) {\r\n    console.log(\"panelList: \", panList);\r\n    //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n    return panList.map((panel, index) => {\r\n        const { panelid } = panel //destructuring //candidte id \r\n        return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n        )\r\n    })\r\n};\r\n\r\nfunction handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const selectedCanId = data.get('candidate');\r\n    console.log(\"candidateid input  : \", selectedCanId);\r\n    const selectedpanId = data.get('panel');\r\n    const locations = data.get('loc');\r\n    console.log(\"Location input  : \", locations);\r\n    const date = data.get('date');\r\n    const techrating = data.get('rate');\r\n    const finalstatus = data.get('status');\r\n    const start_time = data.get('start');\r\n    const end_time = data.get('end');\r\n    if (locations === '' || locations === null) {\r\n        alert(\"Name cannot be blank\");\r\n        return;\r\n    }\r\n    const interviewObj = new InterviewScheduler(selectedCanId, selectedpanId, locations, date, techrating, finalstatus, start_time, end_time,);\r\n    console.log(\"Interview Object : \", interviewObj);\r\n    dispatch(addTechInterviewAction(interviewObj, selectedCanId, selectedpanId));\r\n    history.push('/');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default TechShareandschedule;\r\n\r\n\r\n\r\n/*\r\n getPickerValue = value => {\r\n        console.log(value);\r\n    }\r\n    ---------------\r\n <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Start Time :</Form.Label>\r\n\r\n                        <MDBCol md=\"3\">\r\n                        <MDBTimePicker id=\"timePicker\" label=\"24hrs format\" hours={12} minutes={0} hoursFormat={24} getValue={this.getPickerValue} />\r\n                       </MDBCol>\r\n\r\n                        <Form.Control/>\r\n                    </Form.Group>\r\n\r\n-------------------------\r\n\r\n <TimePicker\r\n          onChange={this.onChange}\r\n          value={this.state.time}\r\n        />\r\n---------------\r\n <Form.Group controlId=\"formBasicExperience\">\r\n                    <Dropdown as={ButtonGroup}>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Technical Interview Rating</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  --------------\r\n  normal button:\r\n\r\n   <Button variant=\"dark\" type=\"submit\">\r\n                        SCEDULE AN INTERVIEW\r\n                    </Button>\r\n*/","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrservices\\givehrrating.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrcancelinterview.js",["434"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrshareandschedule.js",["435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React from 'react';\r\n    //import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n    //import React, { Component } from \"react\";\r\n    //import { ReactBootstrap, Jumbotron, Button, Col, Grid, Panel, FormGroup} from 'react-bootstrap';\r\n    import { Nav, Spinner, Dropdown, Navbar, NavDropdown, MenuItem, Form, Jumbotron, Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl } from 'react-bootstrap';\r\n    import { useSelector, useDispatch } from 'react-redux';\r\n    import { useHistory } from \"react-router-dom\";\r\n    \r\n    import addHRInterviewAction from '../../../actions/interviewscheduler/add_hrinterview';\r\n    import hrInterviewScheduler from '../../../models/hrInterviewScheduler';\r\n    import showcandidatesAction from '../../../actions/interviewscheduler/get_candidates';\r\n    import showPanelAction from '../../../actions/interviewscheduler/get_panel';\r\n    \r\n    \r\n    let dispatch;\r\n    let history;\r\n    let selectedCanId;\r\n    let selectedpanId;\r\n    const HRShareandschedule = (props) => {\r\n\r\n            dispatch = useDispatch();\r\n            history = useHistory();\r\n            //candidate\r\n            let candList = useSelector(state => state.InterviewReducer.candidates);\r\n            console.log(\"candList: \", candList);\r\n            React.useEffect(() => {\r\n                candidateList()\r\n              }, []);\r\n            \r\n              const candidateList = () => {\r\n                dispatch(showcandidatesAction())\r\n              }\r\n    \r\n              if(!Array.isArray(candList)){\r\n                candList = [];\r\n                console.log(\"Set candList to blank array\");\r\n            } \r\n           //panel\r\n           let panList = useSelector(state => state.InterviewReducer.panels);\r\n            console.log(\"panList: \", panList);\r\n            React.useEffect(() => {\r\n                panelList()\r\n              }, []);\r\n            \r\n              const panelList = () => {\r\n                dispatch(showPanelAction())\r\n              }\r\n    \r\n              if(!Array.isArray(panList)){\r\n                panList = [];\r\n                console.log(\"Set panList to blank array\");\r\n            } \r\n    \r\n        return (\r\n            // All Final Operations and Functions\r\n    \r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n               \r\n            }}>\r\n                <Jumbotron style={{ width: 600 }}>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formGroupText\">\r\n                            <Form.Label>Share Candidate and Shecdule HR Interview</Form.Label>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Candidate ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"candidate\" name=\"candidate\" onChange={handleChangecandidate}>\r\n                            {renderCandidates(candList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicPrimarySkills\">\r\n                        <Form.Label>Panel ID</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"panel\" name=\"panel\" onChange={handleChangepanel}>\r\n                            {renderpanels(panList)}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>locations</Form.Label>\r\n                            <Form.Control type=\"text\" id=\"loc\" name=\"loc\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Select Date</Form.Label>\r\n                            <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" id=\"date\"/>\r\n                        </Form.Group>\r\n    \r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Start Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"start\" name=\"start\" />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>End Time </Form.Label>\r\n                            <Form.Control type=\"time\" id=\"end\" name=\"end\"/>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicExperience\">\r\n                            <Form.Label>HR Interview Rating</Form.Label>\r\n                            <Form.Control as=\"select\" id=\"rate\" name=\"rate\">\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                                <option>7</option>\r\n                                <option>8</option>\r\n                                <option>9</option>\r\n                                <option>10</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label> Final Status </Form.Label>\r\n                            <Form.Control as=\"select\" id=\"status\" name=\"status\">\r\n                                <option>Pending</option>\r\n                                <option>Technical Completed</option>\r\n                                <option>HR Completed</option>\r\n                            </Form.Control>\r\n    \r\n                        </Form.Group>\r\n    \r\n                        <Button variant=\"dark\" type=\"submit\" call>\r\n                           ADD\r\n                        </Button>\r\n                    </Form>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    function handleChangecandidate(event) {\r\n        selectedCanId = event.target.value\r\n        console.log(\"selected candidate: \"+ selectedCanId);\r\n    }\r\n    \r\n    function handleChangepanel(event) {\r\n        selectedpanId = event.target.value\r\n        console.log(\"selected panel member: \"+ selectedpanId);\r\n    }\r\n    \r\n    \r\n    function renderCandidates(candList){\r\n        console.log(\"candList: \", candList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return candList.map((candidate) => {\r\n           const { candidateid } = candidate //destructuring //candidte id \r\n           return (\r\n            <option key={candidateid} value={candidateid}>{candidateid}</option>\r\n           )\r\n        })\r\n     }\r\n    \r\n     \r\n    function renderpanels(panList){\r\n        console.log(\"panelList: \", panList);\r\n        //console.log(\"deptList[0].deptId: \", deptList[0].deptId);\r\n        return panList.map((panel, index) => {\r\n           const { panelid } = panel //destructuring //candidte id \r\n           return (\r\n            <option key={panelid} value={panelid}>{panelid}</option>\r\n           )\r\n        })\r\n     };\r\n     \r\n     function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const selectedCanId=data.get('candidate');\r\n        console.log(\"candidateid input  : \",selectedCanId);\r\n        const selectedpanId=data.get('panel');\r\n        const locations = data.get('loc');\r\n        console.log(\"Location input  : \",locations);\r\n        const date=data.get('date');\r\n        const hrrating=data.get('rate');\r\n        const finalstatus=data.get('status');\r\n        const start_time=data.get('start');\r\n        const end_time=data.get('end');\r\n        if(locations==='' ||locations===null) {\r\n            alert(\"Name cannot be blank\");\r\n            return;\r\n        }\r\n        const hrinterviewObj = new hrInterviewScheduler(selectedCanId,selectedpanId,locations,date,hrrating,finalstatus,start_time,end_time,);\r\n        console.log(\"Interview Object : \",hrinterviewObj);\r\n        dispatch(addHRInterviewAction(hrinterviewObj,selectedCanId,selectedpanId));\r\n        history.push('/');\r\n    }\r\n    \r\n    \r\n    \r\nexport default HRShareandschedule;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminTechServices\\techupdatescheduleinterview.js",["451"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\hrservices\\viewhrcandidate.js",["452"],"import React from 'react'\r\nimport { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ViewCandidateForHRAction from '../../../actions/candidate/view_a_cand_hr'\r\nconst ViewCandidate = () => {\r\n\r\n    var pathVar = null;\r\n    let candidate = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>ViewCandidateForHRAction_Function(), [])\r\n        const ViewCandidateForHRAction_Function = () => {\r\n            dispatcher(ViewCandidateForHRAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        dispatcher(ViewCandidateForHRAction(pathVar));\r\n    }\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 800}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Search by valid name/id</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name or Candidate ID\" id=\"pathVariable\"/>\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"submit\"  call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <th>Candidate ID</th>\r\n                            <th>Candidate Name</th>\r\n                            <th>Location</th>\r\n                            <th>Qualification</th>\r\n                            <th>Designation</th>\r\n                            <th>Experience</th>\r\n                            <th>Primary Skills</th>\r\n                            <th>Secondary Skills</th>\r\n                            <th>Notice Period</th>\r\n                            <th>Final Status</th>\r\n                        </thead>\r\n                        <tbody id=\"table_content\">\r\n                            {renderData(candidate)}\r\n                        </tbody>\r\n                    </Table>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    function renderData(candidate) {   \r\n        console.log(\"candidate dispatcher object returned from the server : \", candidate);\r\n        if(candidate!==undefined){\r\n            return(\r\n                <tr>\r\n                    <td>{candidate.data.candidateid}</td>\r\n                    <td>{candidate.data.candidatename}</td>\r\n                </tr>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewCandidate;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\viewCandidate.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\candidate\\adminservices\\addCandidate.js",["453"],"import { Form, Table, Jumbotron, Button } from 'react-bootstrap'\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport addCandidateAction from '../../../actions/candidate/adminactions/addCandidateAction'\r\nimport getDesignationsAction from '../../../actions/candidate/adminactions/getDesignationsAction'\r\nimport getLocationsAction from '../../../actions/candidate/adminactions/getLocationsAction'\r\nimport getPrimarySkillsAction from '../../../actions/candidate/adminactions/getPrimarySkillsAction'\r\nimport getSecondarySkillsAction from '../../../actions/candidate/adminactions/getSecondarySkillsAction'\r\nimport getQualificationsAction from '../../../actions/candidate/adminactions/getQualificationsAction'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Candidate from '../../../models/Candidate';\r\n\r\n\r\nlet dispatch;\r\nlet history;\r\nlet location;\r\nlet qualification;\r\nlet designation; \r\nlet primaryskill;\r\nlet secondaryskill;\r\n\r\nconst AddCandidate = () => {\r\n\r\n    dispatch = useDispatch();\r\n    history = useHistory();\r\n\r\n    let locationList = useSelector(state => state.CandidateReducer.location);\r\n\r\n   React.useEffect(() => {\r\n       LocationList()\r\n      }, []);\r\n    \r\n    const LocationList = () => {\r\n        dispatch(getLocationsAction())\r\n      }\r\n      \r\n     if(!Array.isArray(locationList)){\r\n         locationList = [];\r\n         console.log(\"Set locationList to blank array\");\r\n     } \r\n    console.log(\"mmmmmmlocationList: \", locationList);\r\n\r\n    \r\n    let qualificationList = useSelector(state => state.CandidateReducer.qualification);\r\n\r\n    React.useEffect(() => {\r\n       QualificationList()\r\n      }, []);\r\n    \r\n      const QualificationList = () => {\r\n        dispatch(getQualificationsAction())\r\n      }\r\n      if(!Array.isArray(qualificationList)){\r\n        qualificationList = [];\r\n        console.log(\"Set locationList to blank array\");\r\n    } \r\n   console.log(\"qualificationList: \", qualificationList);  \r\n   \r\n   let designationList = useSelector(state => state.CandidateReducer.designation);\r\n\r\n    React.useEffect(() => {\r\n       DesignationList()\r\n      }, []);\r\n    \r\n      const DesignationList = () => {\r\n        dispatch(getDesignationsAction())\r\n      }\r\n      if(!Array.isArray(designationList)){\r\n        designationList = [];\r\n        console.log(\"Set designationList to blank array\");\r\n    } \r\n   console.log(\"designationList: \", designationList); \r\n   \r\n   let primaryskillsList = useSelector(state => state.CandidateReducer.primaryskill);\r\n\r\n    React.useEffect(() => {\r\n       PrimarySkillsList()\r\n      }, []);\r\n    \r\n      const PrimarySkillsList = () => {\r\n        dispatch(getPrimarySkillsAction())\r\n      }\r\n      if(!Array.isArray(primaryskillsList)){\r\n        primaryskillsList = [];\r\n        console.log(\"Set primaryskillsList to blank array\");\r\n    } \r\n   console.log(\"primaryskillsList: \", primaryskillsList); \r\n\r\n   let secondaryskillsList = useSelector(state => state.CandidateReducer.secondaryskill);\r\n\r\n    React.useEffect(() => {\r\n       SecondarySkillsList()\r\n      }, []);\r\n    \r\n      const SecondarySkillsList = () => {\r\n        dispatch(getSecondarySkillsAction())\r\n      }\r\n      if(!Array.isArray(secondaryskillsList)){\r\n        secondaryskillsList = [];\r\n        console.log(\"Set secondaryskillsList to blank array\");\r\n    } \r\n   console.log(\"secondaryskillsList: \", secondaryskillsList); \r\n\r\n\r\n   return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }}>\r\n            <Jumbotron style={{ width: 700 }}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label><b>Add Candidate Details</b></Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Enter Name</Form.Label>\r\n                        <Form.Control type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter name\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicLocation\">\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"loc\" name=\"loc\" onChange={handleChangeLoc}>\r\n                        {renderLocations(locationList)}       \r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"formBasicQualification\">\r\n                    <Form.Label>Qualification</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"qual\" name=\"qual\" onChange={handleChangeQual}>\r\n                        {renderQualifications(qualificationList)}       \r\n                    </Form.Control>\r\n                    \r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicDesignation\">\r\n                        <Form.Label>Designation</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"desig\" name=\"design\" onChange={handleChangeDesign}>\r\n                        {renderDesignations(designationList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicExperience\">\r\n                        <Form.Label>Experience in Years</Form.Label>\r\n                        <Form.Control type=\"Number\"  id=\"exp\" name=\"exp\"/>\r\n                    </Form.Group>                    \r\n\r\n                    <Form.Group controlId=\"formBasicPrimarySkill\">\r\n                        <Form.Label>Primary Skill</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"ps\" name=\"ps\" onChange={handleChangePs}>\r\n                        {renderPrimarySkills(primaryskillsList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicSecondarySkill\">\r\n                        <Form.Label>Secondary Skill</Form.Label>\r\n                        <Form.Control as=\"select\" id=\"ss\" name=\"ss\" onChange={handleChangeSs}>\r\n                        {renderSecondarySkills(secondaryskillsList)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicNoticePeriod\">\r\n                        <Form.Label>NoticePeriod in Months</Form.Label>\r\n                        <Form.Control type=\"Number\" id=\"np\" name=\"np\"/>\r\n                    </Form.Group> \r\n\r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Submit\r\n  </Button>\r\n\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction handleChangeLoc(event) {\r\n    location = event.target.value\r\n    console.log(\"location: \", location);\r\n}\r\n\r\nfunction renderLocations(locationList) {\r\n    console.log(\"locationList: \", locationList);\r\n    return locationList.map((loc, index) => {\r\n       //const { location } = loc //destructuring\r\n       \r\n       return (\r\n        <option key={loc.location} value={loc.location}>{loc.location}</option>\r\n       )\r\n    })\r\n };\r\n \r\n\r\n function handleChangeQual(event){\r\n     qualification = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"qualification: \", qualification);\r\n }\r\n\r\n function renderQualifications(qualificationList){\r\n    console.log(\"qualificationList: \", qualificationList);\r\n    return qualificationList.map((qual, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={qual.qualification} value={qual.qualification}>{qual.qualification}</option>\r\n       )\r\n    })\r\n };\r\n\r\n \r\n function handleChangeDesign(event){\r\n    designation = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"designation: \", designation);\r\n }\r\n\r\n function renderDesignations(designationList){\r\n    console.log(\"designationList: \", designationList);\r\n    return designationList.map((desig, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={desig.designation} value={desig.designation}>{desig.designation}</option>\r\n       )\r\n    })\r\n };\r\n\r\n\r\n function handleChangePs(event){\r\n    primaryskill = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"primaryskill: \", primaryskill);\r\n }\r\n\r\n function renderPrimarySkills(primaryskillsList){\r\n    console.log(\"primaryskillsList: \", primaryskillsList);\r\n    return primaryskillsList.map((ps, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={ps.primaryskill} value={ps.primaryskill}>{ps.primaryskill}</option>\r\n       )\r\n    })\r\n };\r\n\r\nfunction handleChangeSs(event){\r\n    secondaryskill = event.target.value\r\n    // qualification =  dispatch(getQualificationsAction(qualif));\r\n     console.log(\"secondaryskill: \", secondaryskill);\r\n}\r\n\r\nfunction renderSecondarySkills(secondaryskillsList){\r\n    console.log(\"secondaryskillsList: \", secondaryskillsList);\r\n    return secondaryskillsList.map((ss, index) => {\r\n       //const { qualification } = qual //destructuring\r\n       return (\r\n        <option key={ss.secondaryskill} value={ss.secondaryskill}>{ss.secondaryskill}</option>\r\n       )\r\n    })\r\n };\r\n\r\n\r\n function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const candidatename = data.get('name');\r\n    console.log(\"nameeeeeeeee\",candidatename);\r\n   // const designation = data.get('design');\r\n   // const qualification = data.get('qualification');\r\n    const experience = data.get('exp');\r\n    const primaryskill = data.get('ps');\r\n    const secondaryskill = data.get('ss');\r\n    const noticeperiod = data.get('np');\r\n\r\n    const candObj = new Candidate(candidatename, location, qualification, designation, experience, primaryskill, secondaryskill, noticeperiod);\r\n    console.log('Candidate object', candObj);\r\n    dispatch(addCandidateAction(candObj));\r\n    history.push('/');\r\n}\r\n\r\nexport default AddCandidate;\r\n\r\n","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\hrInterviewScheduleAdmin.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\adminhrServices\\hrupdatescheduleinterview.js",["454"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\employee\\services\\searchemployee.js",["455","456"],"  \r\nimport { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchEmployeeAction from '../../../actions/employee/searchemployee_action'\r\n\r\n\r\nconst SearchEmployee = (props) => {\r\n\r\n    var pathVar = null;\r\n    let employee = useSelector((state)=>state.PanelMemberReducer);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>SearchEmployeeAction_Function(), [])\r\n    const SearchEmployeeAction_Function = () => {\r\n            dispatcher(SearchEmployeeAction(pathVar));\r\n    }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathVariable\").value;\r\n        dispatcher(SearchEmployeeAction(pathVar));\r\n        renderData(employee);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Search by valid name/id</Form.Label>\r\n                        <Form.Control id=\"pathVariable\" type=\"text\" placeholder=\"Name or Employee ID\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(employee)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertEmployeeNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Employee Not Found</Alert.Heading>\r\n              <p>\r\n                Employee with the mentioned name or id was not found. Maybe you entered wrong name/id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    function renderData(employee) {   \r\n        console.log(\"employee dispatcher object returned from the server : \", employee);\r\n        if(employee!==undefined && employee!==null){\r\n            return(\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                         \r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n        if(employee!==undefined && employee===null){\r\n            console.log(\"called the alert\");\r\n            return(<AlertEmployeeNotFound show=\"true\"/>);\r\n        }\r\n    }        \r\n}\r\n\r\n\r\nexport default SearchEmployee;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\techInterviewScheduleAdmin.js",["457"],"//Interview Services Accessible By The Admin....\r\n\r\nimport hrInterviewScheduleAdmin from '../interviewscheduler/hrInterviewScheduleAdmin';\r\n\r\nimport TechShareandschedule from './adminTechServices/techshareandschedule.js';\r\nimport TechCancelInterview from './adminTechServices/techcancelinterview.js'\r\nimport TechUpdateInterview from \"./adminTechServices/techupdatescheduleinterview\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst techInterviewScheduleAdmin = () => {\r\n    return (\r\n        <div>\r\n            {/* All underlying operations from services */}\r\n            <Accordion>\r\n               <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                      Schedule Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body><TechShareandschedule></TechShareandschedule></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                     Update Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body><TechUpdateInterview></TechUpdateInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                </Accordion>\r\n                <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                      Cancel Technical Interview\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"2\">\r\n                    <Card.Body><TechCancelInterview></TechCancelInterview></Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n               \r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default techInterviewScheduleAdmin;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\panelmember\\hrservices\\surrenderashr.js",["458","459"],"import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react'\r\nimport { Form, Table, Jumbotron, Button, Alert } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SurrenderAsHRAction from '../../../actions/panelmember/surrender_as_hr';\r\n\r\nconst SurrenderAsHRPanel = (props) => {\r\n\r\n    var pathVar = null;\r\n    let panelMember = useSelector((state)=>state);\r\n    let dispatcher = useDispatch();\r\n    React.useEffect(()=>SurrenderAsHRAction_Func(), [])\r\n        const SurrenderAsHRAction_Func = () => {\r\n            dispatcher(SurrenderAsHRAction(pathVar));\r\n        }\r\n    \r\n    const handleSubmit = (event) =>{ \r\n        pathVar = document.getElementById(\"pathVar\").value;\r\n        dispatcher(SurrenderAsHRAction(pathVar));\r\n        renderData(panelMember);\r\n    }\r\n\r\n    return (\r\n        // All Final Operations and Functions\r\n        <div style={{\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundImage:`url(/logo.png)`,\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',\r\n            height: \"100px\"\r\n    \r\n    \r\n        }}>\r\n            <Jumbotron style={{width: 700}}>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Enter your Panel ID</Form.Label>\r\n                        <Form.Control id=\"pathVar\" type=\"text\" placeholder=\"Panel ID\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"dark\" type=\"button\" call onClick={handleSubmit}>\r\n                        Surrender\r\n                    </Button>\r\n                    <hr></hr>\r\n                        {renderData(panelMember)}\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n    //ALERT\r\n    function AlertPanelMemberNotFound() {\r\n        const [show, setShow] = useState(true);\r\n        console.log(show, setShow);\r\n        if (show) {\r\n          return (\r\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n              <Alert.Heading>Panel Member Not Found</Alert.Heading>\r\n              <p>\r\n                Panel Member with the mentioned panel id was not found. Maybe you entered wrong panel id. Please check once!\r\n              </p>\r\n            </Alert>\r\n          );\r\n        }\r\n        else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n      }\r\n\r\n    function renderData(panelMember) {   \r\n        console.log(\"panel member dispatcher object returned from the server : \", panelMember);\r\n        if(panelMember!==undefined && panelMember!==null){\r\n            console.log(\"Surrendered successfully!\");\r\n            return(\r\n                <div>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Panel ID</th>\r\n                            <th>Location</th>\r\n                            <th>Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{panelMember.data.panelid}</td>\r\n                            <td>{panelMember.data.location}</td>\r\n                            <td>{panelMember.data.type}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Alert><Alert.Heading>Surrendered Successfully!</Alert.Heading></Alert>\r\n                </div>\r\n            );\r\n        }\r\n        else if(panelMember!==undefined && panelMember.data.type!==null){\r\n            console.log(\"Already surrendered!\");\r\n            <Alert>Already surrendered!</Alert>\r\n        }\r\n        if(panelMember!==undefined && panelMember===null){\r\n            //return(<Box/>);\r\n            console.log(\"called the alert\");\r\n            return(<AlertPanelMemberNotFound show=\"true\"/>);\r\n        }\r\n        \r\n    }        \r\n}\r\n\r\nexport default SurrenderAsHRPanel;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_panel.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\get_candidates.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\addpanelmember_action.js",["460","461"],"import axios from 'axios'\r\n\r\nconst AddPanelMemberAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        if(props!=null){\r\n            console.log(props.pathVar, props.body);\r\n            const url = 'http://localhost:8080/cgits/panelmember/'+props.pathVar;\r\n            const serverResponse = await axios.post(url, props.body) //await can only be used with async function....\r\n            .then(response => dispatch({type: 'ADD_PANEL_MEMBER', payload: response}))\r\n            .catch(error => console.log(err=error));\r\n            \r\n            console.log(serverResponse);\r\n        }\r\n        if(err!==null && props!==undefined){\r\n            console.log(\"Operation could not be completed, error from server\");\r\n            dispatch({type: 'ADD_PANEL_MEMBER', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddPanelMemberAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\showpanelmembers_action.js",["462","463","464"],"import axios from 'axios';\r\n\r\nconst ShowPanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        let error;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/panelmembers';\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'SHOW_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\nexport default ShowPanelMemberAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\deletepanelmember_action.js",["465","466","467","468"],"\r\nimport axios from 'axios';\r\n\r\nconst DeletePanelMemberAction = (props) => {\r\n    return async function (dispatch) {\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9090/cgits/panelmember/' + props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n            .then(response => dispatch({ type: 'DELETE_PANELMEMBER', payload: response.data }))\r\n            .catch(error => console.log(err = error));\r\n            console.log(props);\r\n        if (err !== null && props != undefined) {\r\n            console.log(\"No User Found\");\r\n            dispatch({ type: 'DELETE_PANELMEMBER', payload: null });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeletePanelMemberAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\employee\\searchemployee_action.js",["469","470","471"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_techinterview.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\models\\InterviewScheduler.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\models\\hrInterviewScheduler.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\add_hrinterview.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\models\\Candidate.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\view_a_cand_hr.js",["472","473"],"//Action for viewing a candidate for tech panel\r\nconst ViewCandidateForHrAction = (props) => {\r\n   \r\n    return async function(dispatch){\r\n        let error;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9091/cgits/candidate/hr/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'VIEW_CANDIDATE_FOR_HR', payload: response}))\r\n        .catch(error => console.log(error));\r\n    }\r\n }\r\n \r\n export default ViewCandidateForHrAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getDesignationsAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getQualificationsAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getLocationsAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getSecondarySkillsAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\getPrimarySkillsAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\addCandidateAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByIdAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByDesignationAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByPrimarySkillsAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByQualificationAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByLocationAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByNameAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\candidate\\adminactions\\viewByAllAction.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\panelmember\\surrender_as_hr.js",["474","475","476","477"],"//Action for viewing a candidate for HR panel\r\nimport axios from 'axios'\r\n\r\nconst SurrenderAsHRAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:9091/cgits/panelmember/hr/'+props;\r\n        const serverResponse = await axios.get(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'SURRENDER_AS_HR', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No User Found\");\r\n            dispatch({type: 'SURRENDER_AS_HR', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default SurrenderAsHRAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelinterview_action.js",["478","479","480","481"],"import axios from 'axios'\r\n\r\nconst CancelInterviewAction = (props)=> {\r\n    return async function(dispatch){\r\n        var err = null;\r\n        var onLoad = 0;\r\n        console.log(props);\r\n        const axios = require('axios').default;\r\n        const url = 'http://localhost:8080/cgits/interviewschedulerdel/'+props;\r\n        const serverResponse = await axios.delete(url) //await can only be used with async function....\r\n        .then(response => dispatch({type: 'CANCEL_INTERVIEW', payload: response}))\r\n        .catch(error => console.log(err=error));\r\n        if(err!==null && props!=undefined){\r\n            console.log(\"No Interview Found\");\r\n            dispatch({type: 'CANCEL_INTERVIEW', payload: null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default CancelInterviewAction;","D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\adminEmployeeReducer.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updateinterviewschedule_action.js",["482","483","484","485"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\hrReducer.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\reducers\\techreducer.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\components\\interviewscheduler\\InterviewSchedulerForTech.js",[],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\cancelhrinterview_action.js",["486","487","488","489"],"D:\\New Sprint3\\Sprint3_Interview_Tracking_System\\src\\actions\\interviewscheduler\\updatehrinterviewschedule_action.js",["490","491","492","493"],{"ruleId":"494","severity":1,"message":"495","line":10,"column":57,"nodeType":"496","messageId":"497","endLine":10,"endColumn":64},{"ruleId":"494","severity":1,"message":"498","line":12,"column":10,"nodeType":"496","messageId":"497","endLine":12,"endColumn":23},{"ruleId":"494","severity":1,"message":"499","line":12,"column":25,"nodeType":"496","messageId":"497","endLine":12,"endColumn":31},{"ruleId":"500","replacedBy":"501"},{"ruleId":"502","replacedBy":"503"},{"ruleId":"494","severity":1,"message":"504","line":13,"column":23,"nodeType":"496","messageId":"497","endLine":13,"endColumn":34},{"ruleId":"494","severity":1,"message":"505","line":14,"column":10,"nodeType":"496","messageId":"497","endLine":14,"endColumn":16},{"ruleId":"494","severity":1,"message":"506","line":1,"column":20,"nodeType":"496","messageId":"497","endLine":1,"endColumn":29},{"ruleId":"494","severity":1,"message":"505","line":1,"column":31,"nodeType":"496","messageId":"497","endLine":1,"endColumn":37},{"ruleId":"494","severity":1,"message":"507","line":1,"column":39,"nodeType":"496","messageId":"497","endLine":1,"endColumn":42},{"ruleId":"494","severity":1,"message":"508","line":1,"column":44,"nodeType":"496","messageId":"497","endLine":1,"endColumn":48},{"ruleId":"494","severity":1,"message":"509","line":1,"column":50,"nodeType":"496","messageId":"497","endLine":1,"endColumn":59},{"ruleId":"494","severity":1,"message":"510","line":1,"column":61,"nodeType":"496","messageId":"497","endLine":1,"endColumn":64},{"ruleId":"494","severity":1,"message":"511","line":1,"column":66,"nodeType":"496","messageId":"497","endLine":1,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":8,"column":11,"nodeType":"514","endLine":10,"endColumn":43},{"ruleId":"512","severity":1,"message":"513","line":17,"column":11,"nodeType":"514","endLine":19,"endColumn":43},{"ruleId":"494","severity":1,"message":"515","line":6,"column":10,"nodeType":"496","messageId":"497","endLine":6,"endColumn":15},{"ruleId":"494","severity":1,"message":"516","line":6,"column":17,"nodeType":"496","messageId":"497","endLine":6,"endColumn":21},{"ruleId":"494","severity":1,"message":"517","line":6,"column":23,"nodeType":"496","messageId":"497","endLine":6,"endColumn":29},{"ruleId":"494","severity":1,"message":"518","line":8,"column":10,"nodeType":"496","messageId":"497","endLine":8,"endColumn":16},{"ruleId":"494","severity":1,"message":"507","line":8,"column":18,"nodeType":"496","messageId":"497","endLine":8,"endColumn":21},{"ruleId":"494","severity":1,"message":"504","line":8,"column":23,"nodeType":"496","messageId":"497","endLine":8,"endColumn":34},{"ruleId":"494","severity":1,"message":"505","line":9,"column":10,"nodeType":"496","messageId":"497","endLine":9,"endColumn":16},{"ruleId":"494","severity":1,"message":"519","line":3,"column":10,"nodeType":"496","messageId":"497","endLine":3,"endColumn":25},{"ruleId":"494","severity":1,"message":"507","line":4,"column":29,"nodeType":"496","messageId":"497","endLine":4,"endColumn":32},{"ruleId":"520","severity":1,"message":"521","line":155,"column":173,"nodeType":"514","endLine":155,"endColumn":264},{"ruleId":"494","severity":1,"message":"515","line":7,"column":10,"nodeType":"496","messageId":"497","endLine":7,"endColumn":15},{"ruleId":"494","severity":1,"message":"516","line":7,"column":17,"nodeType":"496","messageId":"497","endLine":7,"endColumn":21},{"ruleId":"494","severity":1,"message":"517","line":7,"column":23,"nodeType":"496","messageId":"497","endLine":7,"endColumn":29},{"ruleId":"494","severity":1,"message":"518","line":9,"column":10,"nodeType":"496","messageId":"497","endLine":9,"endColumn":16},{"ruleId":"494","severity":1,"message":"507","line":9,"column":18,"nodeType":"496","messageId":"497","endLine":9,"endColumn":21},{"ruleId":"494","severity":1,"message":"504","line":9,"column":23,"nodeType":"496","messageId":"497","endLine":9,"endColumn":34},{"ruleId":"494","severity":1,"message":"505","line":10,"column":10,"nodeType":"496","messageId":"497","endLine":10,"endColumn":16},{"ruleId":"494","severity":1,"message":"515","line":6,"column":10,"nodeType":"496","messageId":"497","endLine":6,"endColumn":15},{"ruleId":"494","severity":1,"message":"516","line":6,"column":17,"nodeType":"496","messageId":"497","endLine":6,"endColumn":21},{"ruleId":"494","severity":1,"message":"517","line":6,"column":23,"nodeType":"496","messageId":"497","endLine":6,"endColumn":29},{"ruleId":"494","severity":1,"message":"522","line":8,"column":9,"nodeType":"496","messageId":"497","endLine":8,"endColumn":12},{"ruleId":"494","severity":1,"message":"523","line":8,"column":13,"nodeType":"496","messageId":"497","endLine":8,"endColumn":17},{"ruleId":"494","severity":1,"message":"506","line":8,"column":18,"nodeType":"496","messageId":"497","endLine":8,"endColumn":27},{"ruleId":"494","severity":1,"message":"509","line":8,"column":28,"nodeType":"496","messageId":"497","endLine":8,"endColumn":37},{"ruleId":"494","severity":1,"message":"518","line":8,"column":39,"nodeType":"496","messageId":"497","endLine":8,"endColumn":45},{"ruleId":"494","severity":1,"message":"507","line":8,"column":47,"nodeType":"496","messageId":"497","endLine":8,"endColumn":50},{"ruleId":"494","severity":1,"message":"504","line":8,"column":52,"nodeType":"496","messageId":"497","endLine":8,"endColumn":63},{"ruleId":"494","severity":1,"message":"505","line":9,"column":10,"nodeType":"496","messageId":"497","endLine":9,"endColumn":16},{"ruleId":"494","severity":1,"message":"524","line":14,"column":8,"nodeType":"496","messageId":"497","endLine":14,"endColumn":31},{"ruleId":"525","severity":1,"message":"526","line":14,"column":70,"nodeType":"527","endLine":14,"endColumn":72,"suggestions":"528"},{"ruleId":"494","severity":1,"message":"529","line":1,"column":42,"nodeType":"496","messageId":"497","endLine":1,"endColumn":47},{"ruleId":"494","severity":1,"message":"530","line":2,"column":17,"nodeType":"496","messageId":"497","endLine":2,"endColumn":25},{"ruleId":"494","severity":1,"message":"531","line":4,"column":10,"nodeType":"496","messageId":"497","endLine":4,"endColumn":21},{"ruleId":"494","severity":1,"message":"532","line":4,"column":23,"nodeType":"496","messageId":"497","endLine":4,"endColumn":34},{"ruleId":"494","severity":1,"message":"533","line":5,"column":8,"nodeType":"496","messageId":"497","endLine":5,"endColumn":28},{"ruleId":"494","severity":1,"message":"534","line":3,"column":8,"nodeType":"496","messageId":"497","endLine":3,"endColumn":24},{"ruleId":"494","severity":1,"message":"535","line":4,"column":8,"nodeType":"496","messageId":"497","endLine":4,"endColumn":25},{"ruleId":"494","severity":1,"message":"536","line":2,"column":8,"nodeType":"496","messageId":"497","endLine":2,"endColumn":34},{"ruleId":"494","severity":1,"message":"537","line":3,"column":8,"nodeType":"496","messageId":"497","endLine":3,"endColumn":32},{"ruleId":"525","severity":1,"message":"538","line":12,"column":59,"nodeType":"527","endLine":12,"endColumn":61,"suggestions":"539"},{"ruleId":"494","severity":1,"message":"540","line":4,"column":10,"nodeType":"496","messageId":"497","endLine":4,"endColumn":16},{"ruleId":"525","severity":1,"message":"541","line":15,"column":63,"nodeType":"527","endLine":15,"endColumn":65,"suggestions":"542"},{"ruleId":"494","severity":1,"message":"543","line":58,"column":14,"nodeType":"496","messageId":"497","endLine":58,"endColumn":17},{"ruleId":"494","severity":1,"message":"544","line":61,"column":15,"nodeType":"496","messageId":"497","endLine":61,"endColumn":25},{"ruleId":"494","severity":1,"message":"505","line":2,"column":34,"nodeType":"496","messageId":"497","endLine":2,"endColumn":40},{"ruleId":"525","severity":1,"message":"545","line":12,"column":46,"nodeType":"527","endLine":12,"endColumn":48,"suggestions":"546"},{"ruleId":"494","severity":1,"message":"530","line":2,"column":17,"nodeType":"496","messageId":"497","endLine":2,"endColumn":25},{"ruleId":"494","severity":1,"message":"547","line":4,"column":8,"nodeType":"496","messageId":"497","endLine":4,"endColumn":28},{"ruleId":"525","severity":1,"message":"548","line":22,"column":58,"nodeType":"527","endLine":22,"endColumn":60,"suggestions":"549"},{"ruleId":"550","severity":1,"message":"551","line":34,"column":15,"nodeType":"552","messageId":"553","endLine":34,"endColumn":17},{"ruleId":"550","severity":1,"message":"551","line":34,"column":32,"nodeType":"552","messageId":"553","endLine":34,"endColumn":34},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"555","line":5,"column":13,"nodeType":"496","messageId":"497","endLine":5,"endColumn":18},{"ruleId":"494","severity":1,"message":"556","line":8,"column":15,"nodeType":"496","messageId":"497","endLine":8,"endColumn":29},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":6,"column":13,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"494","severity":1,"message":"556","line":9,"column":15,"nodeType":"496","messageId":"497","endLine":9,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":12,"column":31,"nodeType":"552","messageId":"553","endLine":12,"endColumn":33},{"ruleId":"494","severity":1,"message":"558","line":5,"column":10,"nodeType":"496","messageId":"497","endLine":5,"endColumn":19},{"ruleId":"494","severity":1,"message":"507","line":5,"column":21,"nodeType":"496","messageId":"497","endLine":5,"endColumn":24},{"ruleId":"494","severity":1,"message":"559","line":5,"column":26,"nodeType":"496","messageId":"497","endLine":5,"endColumn":33},{"ruleId":"494","severity":1,"message":"560","line":5,"column":35,"nodeType":"496","messageId":"497","endLine":5,"endColumn":43},{"ruleId":"494","severity":1,"message":"518","line":5,"column":45,"nodeType":"496","messageId":"497","endLine":5,"endColumn":51},{"ruleId":"494","severity":1,"message":"504","line":5,"column":53,"nodeType":"496","messageId":"497","endLine":5,"endColumn":64},{"ruleId":"494","severity":1,"message":"561","line":5,"column":66,"nodeType":"496","messageId":"497","endLine":5,"endColumn":74},{"ruleId":"494","severity":1,"message":"523","line":5,"column":93,"nodeType":"496","messageId":"497","endLine":5,"endColumn":97},{"ruleId":"494","severity":1,"message":"562","line":5,"column":99,"nodeType":"496","messageId":"497","endLine":5,"endColumn":112},{"ruleId":"494","severity":1,"message":"563","line":5,"column":129,"nodeType":"496","messageId":"497","endLine":5,"endColumn":140},{"ruleId":"494","severity":1,"message":"510","line":5,"column":142,"nodeType":"496","messageId":"497","endLine":5,"endColumn":145},{"ruleId":"494","severity":1,"message":"564","line":5,"column":152,"nodeType":"496","messageId":"497","endLine":5,"endColumn":156},{"ruleId":"494","severity":1,"message":"565","line":5,"column":158,"nodeType":"496","messageId":"497","endLine":5,"endColumn":163},{"ruleId":"494","severity":1,"message":"566","line":5,"column":165,"nodeType":"496","messageId":"497","endLine":5,"endColumn":174},{"ruleId":"494","severity":1,"message":"567","line":5,"column":176,"nodeType":"496","messageId":"497","endLine":5,"endColumn":187},{"ruleId":"525","severity":1,"message":"568","line":12,"column":61,"nodeType":"527","endLine":12,"endColumn":63,"suggestions":"569"},{"ruleId":"494","severity":1,"message":"507","line":5,"column":14,"nodeType":"496","messageId":"497","endLine":5,"endColumn":17},{"ruleId":"494","severity":1,"message":"559","line":5,"column":19,"nodeType":"496","messageId":"497","endLine":5,"endColumn":26},{"ruleId":"494","severity":1,"message":"560","line":5,"column":28,"nodeType":"496","messageId":"497","endLine":5,"endColumn":36},{"ruleId":"494","severity":1,"message":"518","line":5,"column":38,"nodeType":"496","messageId":"497","endLine":5,"endColumn":44},{"ruleId":"494","severity":1,"message":"504","line":5,"column":46,"nodeType":"496","messageId":"497","endLine":5,"endColumn":57},{"ruleId":"494","severity":1,"message":"561","line":5,"column":59,"nodeType":"496","messageId":"497","endLine":5,"endColumn":67},{"ruleId":"494","severity":1,"message":"523","line":5,"column":86,"nodeType":"496","messageId":"497","endLine":5,"endColumn":90},{"ruleId":"494","severity":1,"message":"562","line":5,"column":92,"nodeType":"496","messageId":"497","endLine":5,"endColumn":105},{"ruleId":"494","severity":1,"message":"570","line":5,"column":115,"nodeType":"496","messageId":"497","endLine":5,"endColumn":120},{"ruleId":"494","severity":1,"message":"563","line":5,"column":122,"nodeType":"496","messageId":"497","endLine":5,"endColumn":133},{"ruleId":"494","severity":1,"message":"510","line":5,"column":135,"nodeType":"496","messageId":"497","endLine":5,"endColumn":138},{"ruleId":"494","severity":1,"message":"511","line":5,"column":140,"nodeType":"496","messageId":"497","endLine":5,"endColumn":143},{"ruleId":"494","severity":1,"message":"564","line":5,"column":145,"nodeType":"496","messageId":"497","endLine":5,"endColumn":149},{"ruleId":"494","severity":1,"message":"565","line":5,"column":151,"nodeType":"496","messageId":"497","endLine":5,"endColumn":156},{"ruleId":"494","severity":1,"message":"566","line":5,"column":158,"nodeType":"496","messageId":"497","endLine":5,"endColumn":167},{"ruleId":"494","severity":1,"message":"567","line":5,"column":169,"nodeType":"496","messageId":"497","endLine":5,"endColumn":180},{"ruleId":"525","severity":1,"message":"571","line":11,"column":67,"nodeType":"527","endLine":11,"endColumn":69,"suggestions":"572"},{"ruleId":"525","severity":1,"message":"573","line":11,"column":62,"nodeType":"527","endLine":11,"endColumn":64,"suggestions":"574"},{"ruleId":"494","severity":1,"message":"570","line":1,"column":16,"nodeType":"496","messageId":"497","endLine":1,"endColumn":21},{"ruleId":"525","severity":1,"message":"575","line":11,"column":69,"nodeType":"527","endLine":11,"endColumn":71,"suggestions":"576"},{"ruleId":"494","severity":1,"message":"540","line":2,"column":10,"nodeType":"496","messageId":"497","endLine":2,"endColumn":16},{"ruleId":"525","severity":1,"message":"577","line":15,"column":58,"nodeType":"527","endLine":15,"endColumn":60,"suggestions":"578"},{"ruleId":"494","severity":1,"message":"537","line":3,"column":8,"nodeType":"496","messageId":"497","endLine":3,"endColumn":32},{"ruleId":"494","severity":1,"message":"540","line":1,"column":10,"nodeType":"496","messageId":"497","endLine":1,"endColumn":16},{"ruleId":"525","severity":1,"message":"579","line":13,"column":53,"nodeType":"527","endLine":13,"endColumn":55,"suggestions":"580"},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":6,"column":13,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"555","line":5,"column":13,"nodeType":"496","messageId":"497","endLine":5,"endColumn":18},{"ruleId":"494","severity":1,"message":"556","line":8,"column":15,"nodeType":"496","messageId":"497","endLine":8,"endColumn":29},{"ruleId":"494","severity":1,"message":"554","line":2,"column":8,"nodeType":"496","messageId":"497","endLine":2,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":7,"column":13,"nodeType":"496","messageId":"497","endLine":7,"endColumn":19},{"ruleId":"494","severity":1,"message":"556","line":10,"column":15,"nodeType":"496","messageId":"497","endLine":10,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":14,"column":35,"nodeType":"552","messageId":"553","endLine":14,"endColumn":37},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":6,"column":13,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"550","severity":1,"message":"551","line":14,"column":31,"nodeType":"552","messageId":"553","endLine":14,"endColumn":33},{"ruleId":"494","severity":1,"message":"555","line":5,"column":13,"nodeType":"496","messageId":"497","endLine":5,"endColumn":18},{"ruleId":"494","severity":1,"message":"556","line":8,"column":15,"nodeType":"496","messageId":"497","endLine":8,"endColumn":29},{"ruleId":"494","severity":1,"message":"554","line":2,"column":8,"nodeType":"496","messageId":"497","endLine":2,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":7,"column":13,"nodeType":"496","messageId":"497","endLine":7,"endColumn":19},{"ruleId":"494","severity":1,"message":"556","line":10,"column":15,"nodeType":"496","messageId":"497","endLine":10,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":13,"column":31,"nodeType":"552","messageId":"553","endLine":13,"endColumn":33},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":6,"column":13,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"494","severity":1,"message":"556","line":10,"column":15,"nodeType":"496","messageId":"497","endLine":10,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":13,"column":31,"nodeType":"552","messageId":"553","endLine":13,"endColumn":33},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":6,"column":13,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"494","severity":1,"message":"556","line":10,"column":15,"nodeType":"496","messageId":"497","endLine":10,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":13,"column":31,"nodeType":"552","messageId":"553","endLine":13,"endColumn":33},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":6,"column":13,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"494","severity":1,"message":"556","line":10,"column":15,"nodeType":"496","messageId":"497","endLine":10,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":13,"column":31,"nodeType":"552","messageId":"553","endLine":13,"endColumn":33},{"ruleId":"494","severity":1,"message":"554","line":1,"column":8,"nodeType":"496","messageId":"497","endLine":1,"endColumn":13},{"ruleId":"494","severity":1,"message":"557","line":6,"column":13,"nodeType":"496","messageId":"497","endLine":6,"endColumn":19},{"ruleId":"494","severity":1,"message":"556","line":10,"column":15,"nodeType":"496","messageId":"497","endLine":10,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":13,"column":31,"nodeType":"552","messageId":"553","endLine":13,"endColumn":33},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'MDBTimePicker' is defined but never used.","'MDBCol' is defined but never used.","no-native-reassign",["581"],"no-negated-in-lhs",["582"],"'NavDropdown' is defined but never used.","'Button' is defined but never used.","'Jumbotron' is defined but never used.","'Nav' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Navbar' is defined but never used.","'getAllByAltText' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Tab' is defined but never used.","'Tabs' is defined but never used.","'InterviewSchedulerForHr' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'ViewInterviewMemberForTechAction_Function'. Either include it or remove the dependency array.","ArrayExpression",["583"],"'Modal' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'GiveTechRatingAction' is defined but never used.","'ShowPanelMembers' is defined but never used.","'DeletePanelMember' is defined but never used.","'techInterviewScheduleAdmin' is defined but never used.","'hrInterviewScheduleAdmin' is defined but never used.","React Hook React.useEffect has a missing dependency: 'CancelInterviewAction_Function'. Either include it or remove the dependency array.",["584"],"'render' is defined but never used.","React Hook React.useEffect has a missing dependency: 'DeletePanelMemberAction_Function'. Either include it or remove the dependency array.",["585"],"'Box' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'PanelMemberList'. Either include it or remove the dependency array.",["586"],"'SearchEmployeeAction' is defined but never used.","React Hook React.useEffect has a missing dependency: 'AddPanelMemberAction_Function'. Either include it or remove the dependency array.",["587"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'error' is defined but never used.","'serverResponse' is assigned a value but never used.","'onLoad' is assigned a value but never used.","'HelpBlock' is defined but never used.","'Spinner' is defined but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'ButtonToolbar' is defined but never used.","'ButtonGroup' is defined but never used.","'Grid' is defined but never used.","'Panel' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","React Hook React.useEffect has a missing dependency: 'CancelHRInterviewAction_Function'. Either include it or remove the dependency array.",["588"],"'Table' is defined but never used.","React Hook React.useEffect has a missing dependency: 'UpdateInterviewScheduleAction_Function'. Either include it or remove the dependency array.",["589"],"React Hook React.useEffect has a missing dependency: 'ViewCandidateForHRAction_Function'. Either include it or remove the dependency array.",["590"],"React Hook React.useEffect has a missing dependency: 'UpdateHRInterviewScheduleAction_Function'. Either include it or remove the dependency array.",["591"],"React Hook React.useEffect has a missing dependency: 'SearchEmployeeAction_Function'. Either include it or remove the dependency array.",["592"],"React Hook React.useEffect has a missing dependency: 'SurrenderAsHRAction_Func'. Either include it or remove the dependency array.",["593"],"no-global-assign","no-unsafe-negation",{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},"Update the dependencies array to be: [ViewInterviewMemberForTechAction_Function]",{"range":"616","text":"617"},"Update the dependencies array to be: [CancelInterviewAction_Function]",{"range":"618","text":"619"},"Update the dependencies array to be: [DeletePanelMemberAction_Function]",{"range":"620","text":"621"},"Update the dependencies array to be: [PanelMemberList]",{"range":"622","text":"623"},"Update the dependencies array to be: [AddPanelMemberAction_Function]",{"range":"624","text":"625"},"Update the dependencies array to be: [CancelHRInterviewAction_Function]",{"range":"626","text":"627"},"Update the dependencies array to be: [UpdateInterviewScheduleAction_Function]",{"range":"628","text":"629"},"Update the dependencies array to be: [ViewCandidateForHRAction_Function]",{"range":"630","text":"631"},"Update the dependencies array to be: [UpdateHRInterviewScheduleAction_Function]",{"range":"632","text":"633"},"Update the dependencies array to be: [SearchEmployeeAction_Function]",{"range":"634","text":"635"},"Update the dependencies array to be: [SurrenderAsHRAction_Func]",{"range":"636","text":"637"},[505,507],"[ViewInterviewMemberForTechAction_Function]",[486,488],"[CancelInterviewAction_Function]",[575,577],"[DeletePanelMemberAction_Function]",[461,463],"[PanelMemberList]",[762,764],"[AddPanelMemberAction_Function]",[492,494],"[CancelHRInterviewAction_Function]",[493,495],"[UpdateInterviewScheduleAction_Function]",[440,442],"[ViewCandidateForHRAction_Function]",[503,505],"[UpdateHRInterviewScheduleAction_Function]",[541,543],"[SearchEmployeeAction_Function]",[515,517],"[SurrenderAsHRAction_Func]"]